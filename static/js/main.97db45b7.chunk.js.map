{"version":3,"sources":["config/constants/farms.ts","state/block/hooks.ts","state/lists/hooks.ts","contexts/Localization/helpers.ts","utils/farmHelpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/wallet.ts","hooks/useAuth.ts","state/profile/index.tsx","hooks/useRefresh.ts","config/abi/erc20.ts","hooks/useContract.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","utils/truncateHash.ts","components/Toast/DescriptionWithTx.tsx","config/constants/lottery.ts","hooks/useToast.ts","utils/getRpcUrl.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","utils/web3React.ts","hooks/usePreviousValue.ts","state/profile/helpers.ts","state/farms/fetchTokenPrice.ts","state/farms/hooks.ts","state/user/hooks/index.tsx","config/constants/ifo.ts","state/block/index.ts","state/lottery/getUserLotteryData.ts","hooks/useIsWindowVisible.ts","contexts/RefreshContext.tsx","state/user/hooks/useUserAddedTokens.ts","hooks/Tokens.ts","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/types.ts","hooks/useActiveWeb3React.ts","hooks/useTheme.ts","state/lottery/index.ts","config/constants/tokens.ts","state/lottery/getUserTicketsData.ts","utils/contractHelpers.ts","utils/bigNumber.ts","state/lottery/getLotteriesData.ts","state/user/actions.ts","components/ConnectWalletButton.tsx","utils/multicall.ts","config/constants/endpoints.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/lists.ts","state/multicall/actions.ts","state/user/hooks/helpers.ts","utils/formatBalance.ts","config/constants/index.ts","config/index.ts","utils/contenthashToUri.ts","utils/ENS/parseENSAddress.ts","utils/uriToHttp.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","hooks/useDebounce.ts","state/multicall/chunkArray.ts","state/transactions/updater.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","routerHistory.ts","hooks/useScrollOnRouteChange.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","state/transactions/hooks.tsx","components/Menu/UserMenu/WalletModal.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/index.tsx","state/profile/hooks.ts","components/Menu/utils.ts","components/Menu/index.tsx","components/Menu/config/footerConfig.ts","components/SuspenseWithChunkError/index.tsx","components/GlobalCheckClaimStatus/AnniversaryAchievementModal.tsx","components/GlobalCheckClaimStatus/index.tsx","App.tsx","Providers.tsx","index.tsx","config/constants/types.ts","utils/index.ts","config/constants/pools.ts","state/lists/actions.ts","state/transactions/actions.ts","state/predictions/helpers.ts","state/pools/fetchPoolsUser.ts","views/Pools/helpers.tsx","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/predictions/config.ts","state/predictions/queries.ts","state/predictions/index.ts","config/constants/teams.ts","state/teams/index.tsx","state/teams/helpers.ts","state/achievements/index.ts","state/voting/helpers.ts","state/voting/index.tsx","state/info/actions.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/swap/actions.ts","state/transactions/reducer.ts","state/mint/actions.ts","state/swap/reducer.ts","state/burn/actions.ts","state/mint/reducer.ts","state/lists/reducer.ts","config/constants/nftsCollections/types.ts","state/burn/reducer.ts","state/multicall/reducer.ts","config/constants/nftsCollections/index.ts","state/nftMarket/types.ts","views/Nft/market/constants.ts","state/nftMarket/queries.ts","state/nftMarket/helpers.ts","state/nftMarket/reducer.ts","state/index.ts","utils/providers.ts","state/lottery/helpers.ts","hooks/useTokenBalance.ts","hooks/useLastUpdated.ts","state/multicall/hooks.ts","config/localization/languages.ts"],"names":["serializedTokens","serializeTokens","farms","pid","lpSymbol","lpAddresses","token","syrup","quoteToken","wbnb","cake","busd","rpg","beta","light","isCommunity","bmon","cart","pros","nft","chess","usdc","gnt","dvi","mcrn","tlos","stephero","bp","bscdefi","qbt","naos","pha","bel","sfund","rusd","ramp","pots","tusd","btt","trx","win","babycake","hero","wsg","revv","skill","if","sps","c98","axs","pmon","titan","harmony","mask","gum","adx","usdt","suter","bscpad","rabbit","waultx","wex","form","orbs","$dg","woo","htb","jgn","dft","hai","o3","ampl","oddz","eth","btcb","bondly","marsh","boring","mbox","ata","mx","bcfx","qkc","ktn","mtrg","swg","vrt","ez","kalm","popen","lien","well","deri","chr","cyc","xend","hget","hotcross","rfox","wmass","ubxt","btr","τdoge","one","fine","doge","bmxx","oin","hyfi","kun","qsd","math","mcoin","ust","pnt","pbtc","xmark","lmt","dfd","alpaca","τbtc","swingby","xed","hakka","cgg","broobee","hzn","alpa","perl","tlm","eps","arpa","itam","tko","apys","hoo","easy","nrv","dego","swth","zil","pcws","bbadger","bdigg","lto","mir","trade","dusk","bifi","txl","cos","bunny","alice","for","bux","nuls","belt","bfi","dexe","tpt","watch","iotx","bor","bopen","sushi","dodo","bry","zee","swgb","comp","sfp","lina","lit","bdo","egld","mamzn","mgoogl","mnflx","mtsla","wsote","front","helmet","btcst","ltc","dai","bscx","ten","balbt","reef","ditto","vai","blink","unfi","hard","ctk","sxp","inj","fil","uni","yfi","atom","xrp","alpha","xvs","twt","link","eos","dot","band","ada","yfii","beth","og","asr","atm","juv","psg","xtz","bch","stax","nar","nya","bake","burger","usePollBlockNumber","refreshTime","timer","useRef","dispatch","useAppDispatch","isWindowVisible","useIsWindowVisible","useEffect","current","setInterval","a","simpleRpcProvider","getBlockNumber","blockNumber","setBlock","clearInterval","useBlock","useSelector","state","block","sortByListPriority","urlA","urlB","first","DEFAULT_LIST_OF_LISTS","includes","indexOf","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","chainId","address","decimals","symbol","name","this","logoURI","Token","EMPTY_LIST","ChainId","MAINNET","TESTNET","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","tagId","id","filter","x","Boolean","undefined","Error","set","useAllLists","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","useMemo","slice","sort","allTokens","currentUrl","Object","assign","error","console","useActiveListUrls","activeListUrls","url","UNSUPPORTED_LIST_URLS","useCombinedActiveList","DEFAULT_TOKEN_LIST","useCombinedInactiveList","allActiveListUrls","keys","useInactiveListUrls","useDefaultTokenList","useUnsupportedTokenList","UNSUPPORTED_TOKEN_LIST","LS_KEY","fetchLocale","locale","fetch","process","response","json","data","getLanguageCodeFromLS","localStorage","getItem","EN","isArchivedPid","priceHelperLps","fetchFarm","farm","lpAddress","getAddress","calls","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","quoteTokenAmountMc","times","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","find","some","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","tokenPriceBusd","quoteTokenPriceBusd","fetchFarmUserAllowances","account","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","fetchFarmsPublicDataAsync","createAsyncThunk","pids","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","setupNetwork","provider","window","ethereum","parseInt","request","method","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","BASE_BSC_SCAN_URL","useAuth","t","useTranslation","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","logout","profileClear","walletconnect","close","clearAllTransactions","isInitialized","isLoading","hasRegistered","profileAvatars","fetchProfileAvatar","getProfileAvatar","fetchProfileUsername","username","getUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profile","profileFetchFailed","addPoints","points","pending","meta","arg","usernameFetchStatus","ProfileAvatarFetchStatus","FETCHING","avatarFetchStatus","FETCHED","rejected","NOT_FETCHED","fetchProfile","e","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","Interface","ERC20_ABI","ERC20_BYTES32_ABI","useERC20","library","useActiveWeb3React","getBep20Contract","getSigner","useCake","getCakeContract","useLotteryV2Contract","getLotteryV2Contract","useAnniversaryAchievementContract","getAnniversaryAchievementContract","useContract","ABI","withSignerIfPossible","getContract","useTokenContract","tokenAddress","useBytes32TokenContract","useMulticallContract","getMulticallAddress","multiCallAbi","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","styled","theme","mediaQueries","sm","Toast","toast","onRemove","style","ttl","props","ref","removeHandler","title","description","type","handleRemove","clearTimeout","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","onClick","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","truncateHash","startLength","endLength","substring","length","DescriptionWithTx","txHash","children","as","external","href","getBscScanLink","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","NUM_ROUNDS_TO_FETCH_FROM_NODES","toastContext","ToastsContext","getNodeUrl","createContext","ToastsProvider","useState","setToasts","prevToasts","kebabCase","currentToasts","prevToast","Provider","value","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","ethers","providers","Web3Provider","usePreviousValue","getProfileContract","toLowerCase","ok","getProfile","useGetPriceData","setData","axios","resp","price","fetchData","usePollCoreFarmData","usePriceCakeBusd","useThemeManager","useDispatch","user","isDark","toggleThemeAction","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","blockSlice","currentBlock","initialBlock","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","roundId","lotteryId","endTime","status","claimed","hasRoundBeenClaimed","userTickets","totalTickets","tickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteryUser","skip","where","blankUser","totalCake","rounds","GRAPH_API_LOTTERY","gql","userRes","round","lottery","getUserLotteryData","currentLotteryId","idsForTicketsNodeCall","getRoundIdsArray","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","fetchMultipleLotteries","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","React","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","prev","useUserAddedTokens","serializedTokensMap","values","deserializeToken","useTokensFromMap","includeUserAdded","userAddedTokens","mapWithoutUrls","newMap","tokenMap_","useAllTokens","useAllInactiveTokens","inactiveTokens","activeTokensAddresses","campaigns","badge","campaignMap","Map","campaign","getAchievementTitle","key","getAchievementDescription","getUserPointIncreaseEvents","GRAPH_API_PROFILE","getAchievements","pointIncreaseEvents","accum","userPoint","has","campaignMeta","addresses","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","web3React","refEth","setProvider","useTheme","toggleTheme","StyledThemeContext","isTransitioning","maxNumberTicketsPerBuyOrClaim","currentRound","LotteryStatus","PENDING","startTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","lotteriesData","userLotteryData","fetchCurrentLottery","fetchLottery","lotteryInfo","fetchCurrentLotteryId","fetchCurrentLotteryIdAndMaxBuy","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","mainnetTokens","bnb","cvp","mix","safemoon","testnetTokens","unserializedTokens","serializeToken","lotteryContract","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","number","viewUserInfoForLotteryId","cursor","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","push","idsToCheck","ticketsForMultipleRounds","i","ticketsForRound","abi","signer","signerOrProvider","Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","log","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","getNftSaleContract","nftSaleAbi","getPancakeSquadContract","pancakeSquadAbi","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","FarmStakedOnly","ViewMode","updateUserExpertMode","createAction","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","ConnectWalletButton","onPresentConnectModal","useWalletModal","multi","itf","utils","calldata","call","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","multicallv2","options","requireSuccess","tryAggregate","GRAPH_API_PREDICTION","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_NFT","SNAPSHOT_API","GRAPH_API_NFTMARKET","isFetching","currentLanguage","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","setItem","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","DEFAULT_ACTIVE_LIST_URLS","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","callData","parseCallKey","callKey","pcs","split","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","GAS_PRICE","projectLink","serializedToken","default","parseUnits","instant","getDecimalAmount","amount","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatBigNumber","remainder","mod","from","formatUnits","sub","ROUTER_ADDRESS","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIPS_BASE","JSBI","BigInt","Percent","BLOCKED_ADDRESSES","exponentiate","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_BSC_SCAN_URLS","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","IPFS_GATEWAY","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","startsWith","substr","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensName","ensPath","uriToHttp","uri","hash","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","memo","add","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","ensRegistrarContract","namehash","resolver","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","requestId","nanoid","fetchTokenList","then","tokenList","catch","errorMessage","Updater","fetchList","callback","delay","leading","savedCallback","tick","useInterval","debug","loadingRequestId","pendingUpdate","getVersionUpgrade","VersionUpgrade","NONE","PATCH","MINOR","MAJOR","acceptListUpdate","waitRandom","min","max","ms","Math","random","resolve","CancelledError","RetryableError","multicallContract","chunk","minBlockNumber","obj","resultsBlockNumber","results","s","debouncedListeners","debouncedValue","setDebouncedValue","handler","useDebounce","callListeners","cancellations","listeningKeys","allListeners","listeners","keyListeners","blocksPerFetch","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","callResults","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","JSON","stringify","outdatedCallKeys","parse","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","Array","ix","chunkArray","c","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","curr","lastCallKeyIndex","transactions","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","shouldCheck","getTransactionReceipt","finalizeTransaction","blockHash","to","transactionHash","transactionIndex","flexDirection","summary","checkedTransaction","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","history","createBrowserHistory","useScrollOnRouteChange","unlisten","listen","args","scroll","left","behavior","StyledDatePickerPortal","card","background","colors","cardBorder","text","input","primary","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","Wrapper","Flex","dropdown","Address","Tooltip","isTooltipDisplayed","contrast","invertedContrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","position","readOnly","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","body","appendChild","select","execCommand","removeChild","color","width","WalletInfo","hasLowBnbBalance","onDismiss","useGetBnbBalance","fetchStatus","useTokenBalance","cakeBalance","cakeFetchStatus","fontSize","textTransform","fontWeight","mb","alignItems","justifyContent","FetchStatus","height","useAllTransactions","isTransactionRecent","WalletView","TxnIcon","Summary","TxnLink","Link","renderIcon","txn","spin","TransactionRow","WalletTransactions","allTransactions","sortedTransactions","orderBy","minHeight","scale","px","textAlign","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","gradients","bubblegum","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","lte","minWidth","onItemClick","newIndex","activeIndex","fullWidth","p","maxWidth","TRANSACTIONS","UserMenu","hasProfile","useProfile","useModal","avatarSrc","image","thumbnail","getActiveSubMenuItem","pathname","menuItem","activeSubMenuItems","subMenuItem","subMenuItem1","subMenuItem2","Menu","cakePriceUsd","useLocation","activeMenuItem","menuConfig","getActiveMenuItem","activeSubMenuItem","userMenu","currentLang","code","langs","setLang","links","subLinks","hideSubNav","footerLinks","activeItem","activeSubItem","buyCakeLabel","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","AnniversaryImage","img","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","y","AnniversaryAchievementModal","setIsLoading","claimAnniversaryPoints","handleClick","src","bold","disabled","endIcon","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","canClaimAnniversaryPoints","onPresentAnniversaryModal","fetchClaimAnniversaryStatus","matchesSomeLocations","Lottery","lazy","NotFound","App","useFetchProfile","Global","path","exact","component","ThemeProviderWrapper","dark","Providers","store","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById","PoolIds","AuctionStatus","isAddress","AddressZero","connectUnchecked","getProviderOrSigner","pools","stakingToken","earningToken","CORE","harvest","tokenPerBlock","sortOrder","isFinished","enableEmergencyWithdraw","COMMUNITY","addList","removeList","enableList","disableList","addTransaction","Result","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","pricePerFullShare","totalCakeInVault","fetchVaultFees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userInfo","userContractResponse","userShares","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction","cakeVault","fees","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","ROUNDS_PER_PAGE","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","parseFloat","BULL","BEAR","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startBlock","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getBetHistory","getLedgerData","epochs","ledgerCalls","defaultPredictionUserOptions","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","claimable","getPredictionData","staticCalls","currentEpoch","intervalSeconds","minBetAmount","paused","bufferSeconds","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","size","getUserRounds","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","merge","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","gt","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","getState","predictions","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","setSelectedAddress","IDLE","LOADING","newestRound","maxBy","futureRound","futureRounds","teams","images","lg","md","alt","ipfs","textColor","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","statusText","isValid","getAllVotes","proposalId","votesPerChunk","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","protocol","overview","chartData","byAddress","createReducer","protocolData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","pairKey","token0Address","token1Address","Field","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","pairs","timestamp","audioPlay","userFarmStakedOnly","ON_FINISHED","userPoolStakedOnly","userPoolsViewMode","TABLE","userFarmsViewMode","userPredictionAcceptedRisk","userPredictionChartDisclaimerShow","userExpertModeAcknowledgementShow","userUsernameVisibility","watchlistTokens","watchlistPools","lastUpdateVersionTimestamp","serializedPair","token0","token1","tokenAAddress","tokenBAddress","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","approval","claim","txs","confirmedTime","selectCurrency","switchCurrencies","typeInput","replaceSwapState","setRecipient","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","inputCurrencyId","outputCurrencyId","otherField","resetMintState","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","lastInitializedDefaultListOfLists","u","lastInitializedSet","l","Set","newListOfListsSet","CollectionKey","LIQUIDITY_PERCENT","NFTMarketInitializationState","UserNftInitializationState","NftFilterLoadingState","AskOrderType","NftLocation","collections","PANCAKE","slug","SQUAD","pancakeBunniesAddress","getCollectionsApi","getCollectionApi","collectionAddress","getNftsFromCollectionApi","isPBCollection","requestPath","getNftApi","tokenId","getNftsFromDifferentCollectionsApi","promises","responses","collectionName","collection","attributes","original","getCollectionSg","getCollectionsSg","getNftsByBunnyIdSg","bunnyId","existingTokenIds","orderDirection","otherId","isTradable","tokenId_not_in","nfts","getMarketDataForTokenIds","tokenId_in","getNftsMarketData","getUserActivity","askOrderHistory","buyTradeHistory","sellTradeHistory","fetchNftsFiltered","getMetadataWithFallback","apiMetadata","getPancakeBunniesAttributesField","traitType","displayType","combineApiAndSgResponseToNftToken","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOf","balanceOfResponse","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokenIds","nftLocation","WALLET","tokensWithCollectionAddress","walletNfts","flat","combineCollectionData","collectionApiData","collectionSgData","collectionsMarketObj","collectionMarket","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketNft","metadataUrl","transactionHistory","currentSeller","currentAskPrice","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","PROFILE","FORSALE","getNftLocationForMarketNft","getCompleteAccountNftData","profileNftWithCollectionAddress","walletNftIdsWithCollectionAddress","unshift","uniqueCollectionAddresses","uniq","walletNftId","walletNftsByCollection","idWithCollectionAddress","walletMarketDataRequests","walletNftByCollection","tokenIdIn","walletMarketDataResponses","walletMarketData","walletNftsWithMarketData","walletTokenIds","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","completeNftData","initializationState","UNINITIALIZED","activeFilters","isUpdatingPancakeBunnies","latestPancakeBunniesUpdateAt","userNftsInitializationState","activity","fetchCollections","collectionsMarket","fetchCollection","fetchNftsFromCollections","nftsMarket","filterNftsFromCollection","nftFilters","attrParams","attr","attrFilters","apiToken","nftTokens","apiTokenMarketData","tokenMarketData","fetchNewPBAndUpdateExisting","existingTokensWithBunnyId","allExistingPBTokenIds","existingMetadata","updatedNfts","updatedNftsMarket","updatedTokens","newNfts","moreTokensWithRequestedBunnyId","fetchUserNfts","updateUserNft","marketDataForNft","metadataForNft","removeUserNft","addUserNft","fetchUserActivity","toLocaleLowerCase","userActivity","NftMarket","addAttributeFilter","removeAttributeFilter","removeAllFilters","INITIALIZED","existingNftsWithoutNewOnes","nftToken","newToken","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","PERSISTED_KEYS","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","votingReducer","lotteryReducer","infoReducer","nftMarket","nftMarketReducer","swap","mint","burn","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","RPC_URL","getRpcUrl","JsonRpcProvider","processViewLotterySuccessResponse","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","viewLottery","lotteryData","lotteryIds","multicallRes","processedResponses","currentIdAsInt","roundIds","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","ticket","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","FAILED","balanceState","setBalanceState","fetchBalance","setFetchStatus","setBalance","getBalance","walletBalance","refresh","isMethodArg","isValidMethodArgs","isArray","every","xi","INVALID_RESULT","valid","NEVER_RELOAD","useCallsData","serializedCallKeys","callKeys","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","useMultipleContractSingleData","methodName","callInputs","getFunction","useSingleCallResult","interface"],"mappings":"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EAAQvf,GAIxE,OAHK4f,EAAsBrgB,SAASS,KAClCuf,EAAOvf,GAAW2f,EAAe3f,IAE5Buf,IACN,IACHI,I,sHCpEAE,EAAwB,CAC5B,CACEve,GAAI,YACJqS,KAAM,MACNF,MAAO,SACPqM,MAAO,gBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,WACPqM,MAAO,oBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,mBACPqM,MAAO,eAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,OACPqM,MAAO,gBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,aACPqM,MAAO,iBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,QACPqM,MAAO,eAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,UACPqM,MAAO,iBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,SACPqM,MAAO,kBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,QACPqM,MAAO,eAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,QACPqM,MAAO,iBAET,CACExe,GAAI,YACJqS,KAAM,MACNF,MAAO,QACPqM,MAAO,eAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,wBACPqM,MAAO,4BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,uBACPqM,MAAO,2BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,uBACPqM,MAAO,2BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,uBACPqM,MAAO,2BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,2BACPqM,MAAO,+BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,0BACPqM,MAAO,8BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,yBACPqM,MAAO,6BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,yBACPqM,MAAO,6BAET,CACExe,GAAI,YACJqS,KAAM,aACNF,MAAO,yBACPqM,MAAO,6BAET,CACExe,GAAI,YACJqS,KAAM,aACNF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,MACA,iBACA,6BAEFpN,KAAM,IAAIiN,IACRG,EACA,6CACA,GACA,OACA,aACA,sBAEFlM,KAAM,IAAI+L,IACRG,EACA,6CACA,GACA,OACA,cACA,wBAEF3J,IAAK,IAAIwJ,IACPG,EACA,6CACA,GACA,MACA,oBACA,2BAEFnM,IAAK,IAAIgM,IACPG,EACA,6CACA,GACA,MACA,6BACA,4BAEFvP,KAAM,IAAIoP,IACRG,EACA,6CACA,GACA,OACA,uBACA,8BAEFpL,KAAM,IAAIiL,IACRG,EACA,6CACA,GACA,OACA,eACA,sBAEF3K,SAAU,IAAIwK,IACZG,EACA,6CACA,GACA,WACA,iBACA,6BAEFhH,KAAM,IAAI6G,IACRG,EACA,6CACA,GACA,OACA,aACA,yBAEF5G,MAAO,IAAIyG,IACTG,EACA,6CACA,GACA,QACA,mBACA,2BAEFtG,IAAK,IAAImG,IACPG,EACA,6CACA,GACA,MACA,cACA,yBAEFzF,MAAO,IAAIsF,IACTG,EACA,6CACA,GACA,QACA,gBACA,4BAEFvF,OAAQ,IAAIoF,IACVG,EACA,6CACA,GACA,SACA,eACA,8BAEFlF,IAAK,IAAI+E,IACPG,EACA,6CACA,GACA,MACA,cACA,2BAEF/E,MAAO,IAAI4E,IACTG,EACA,6CACA,EACA,QACA,cACA,wBAEF7E,MAAO,IAAI0E,IACTG,EACA,6CACA,EACA,QACA,cACA,0BAEFrQ,MAAO,IAAIkQ,IACTG,EACA,6CACA,GACA,QACA,iBACA,gCAEF7O,IAAK,IAAI0O,IACPG,EACA,6CACA,GACA,MACA,cACA,yBAEFnO,SAAU,IAAIgO,IACZG,EACA,6CACA,GACA,WACA,kBACA,yBAEF5P,KAAM,IAAIyP,IACRG,EACA,6CACA,GACA,OACA,gBACA,wBAEFlO,KAAM,IAAI+N,IACRG,EACA,6CACA,GACA,OACA,iBACA,wBAEFjO,IAAK,IAAI8N,IACPG,EACA,6CACA,GACA,MACA,0BACA,mBAEFpP,KAAM,IAAIiP,IACRG,EACA,6CACA,GACA,OACA,oBACA,oCAEFhO,KAAM,IAAI6N,IACRG,EACA,6CACA,GACA,OACA,aACA,+BAEF/N,MAAO,IAAI4N,IACTG,EACA,6CACA,GACA,QACA,qBACA,gCAEF9N,GAAI,IAAI2N,IACNG,EACA,6CACA,GACA,KACA,2BACA,+BAEF7N,IAAK,IAAI0N,IACPG,EACA,6CACA,GACA,MACA,sBACA,6BAEFxP,MAAO,IAAIqP,IACTG,EACA,6CACA,GACA,QACA,cACA,0BAEFzN,MAAO,IAAIsN,IACTG,EACA,6CACA,GACA,QACA,kBACA,yBAEFxN,QAAS,IAAIqN,IACXG,EACA,6CACA,GACA,MACA,oBACA,4BAEFvN,KAAM,IAAIoN,IAAMG,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGrP,IAAK,IAAIkP,IACPG,EACA,6CACA,GACA,MACA,wBACA,4BAEFrN,IAAK,IAAIkN,IACPG,EACA,6CACA,GACA,MACA,qBACA,4BAEFlN,OAAQ,IAAI+M,IACVG,EACA,6CACA,GACA,SACA,eACA,uBAEFjN,OAAQ,IAAI8M,IACVG,EACA,6CACA,GACA,SACA,uBACA,iCAEF9M,KAAM,IAAI2M,IACRG,EACA,6CACA,GACA,OACA,kBACA,yBAEFvH,IAAK,IAAIoH,IAAMG,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/F7M,KAAM,IAAI0M,IACRG,EACA,6CACA,GACA,OACA,aACA,yBAEFtH,IAAK,IAAImH,IACPG,EACA,6CACA,GACA,MACA,kBACA,6BAEFrH,MAAO,IAAIkH,IACTG,EACA,6CACA,GACA,QACA,qBACA,iCAEFpH,MAAO,IAAIiH,IACTG,EACA,6CACA,EACA,QACA,0BACA,oCAEFnH,IAAK,IAAIgH,IACPG,EACA,6CACA,GACA,MACA,gBACA,6BAEFlH,IAAK,IAAI+G,IACPG,EACA,6CACA,GACA,MACA,mBACA,kCAEFjH,KAAM,IAAI8G,IACRG,EACA,6CACA,EACA,OACA,aACA,wBAEFzO,KAAM,IAAIsO,IACRG,EACA,6CACA,GACA,OACA,kBACA,yBAEF/G,IAAK,IAAI4G,IACPG,EACA,6CACA,GACA,MACA,iBACA,qBAEF9G,KAAM,IAAI2G,IACRG,EACA,6CACA,GACA,OACA,aACA,yBAEF5O,IAAK,IAAIyO,IACPG,EACA,6CACA,GACA,MACA,uBACA,qBAEF7G,IAAK,IAAI0G,IACPG,EACA,6CACA,EACA,MACA,oBACA,gCAEFxJ,MAAO,IAAIqJ,IACTG,EACA,6CACA,EACA,QACA,2BACA,sCAEFlK,KAAM,IAAI+J,IACRG,EACA,6CACA,GACA,OACA,mBACA,+BAEF3G,KAAM,IAAIwG,IACRG,EACA,6CACA,GACA,OACA,kCACA,qBAEF1G,IAAK,IAAIuG,IACPG,EACA,6CACA,GACA,MACA,kBACA,8BAEFzG,MAAO,IAAIsG,IACTG,EACA,6CACA,GACA,QACA,wBACA,uBAEFvG,KAAM,IAAIoG,IACRG,EACA,6CACA,GACA,OACA,aACA,sBAEFnJ,QAAS,IAAIgJ,IACXG,EACA,6CACA,GACA,UACA,wBACA,4BAEFrG,IAAK,IAAIkG,IACPG,EACA,6CACA,GACA,MACA,iBACA,wBAEFpG,KAAM,IAAIiG,IACRG,EACA,6CACA,GACA,OACA,aACA,0BAEFvL,IAAK,IAAIoL,IACPG,EACA,6CACA,GACA,MACA,YACA,0BAEFlG,IAAK,IAAI+F,IACPG,EACA,6CACA,GACA,MACA,gBACA,2BAEFjG,KAAM,IAAI8F,IACRG,EACA,6CACA,GACA,OACA,uBACA,2BAEFhG,IAAK,IAAI6F,IACPG,EACA,6CACA,GACA,MACA,iBACA,6BAEF5K,KAAM,IAAIyK,IACRG,EACA,6CACA,EACA,OACA,eACA,2BAEF/F,IAAK,IAAI4F,IACPG,EACA,6CACA,GACA,MACA,gBACA,uBAEF9F,KAAM,IAAI2F,IACRG,EACA,6CACA,GACA,OACA,eACA,uBAEFxF,MAAO,IAAIqF,IACTG,EACA,6CACA,GACA,QACA,iBACA,yBAEFtF,MAAO,IAAImF,IACTG,EACA,6CACA,GACA,QACA,4BACA,uBAEFnF,KAAM,IAAIgF,IACRG,EACA,6CACA,GACA,OACA,aACA,sBAEFjF,MAAO,IAAI8E,IACTG,EACA,6CACA,GACA,QACA,sBACA,6BAEFvD,IAAK,IAAIoD,IACPG,EACA,6CACA,EACA,MACA,gBACA,0BAEFtD,IAAK,IAAImD,IACPG,EACA,6CACA,EACA,MACA,yBACA,0BAEFxD,GAAI,IAAIqD,IACNG,EACA,6CACA,EACA,KACA,gBACA,0BAEFhF,KAAM,IAAI6E,IACRG,EACA,6CACA,GACA,OACA,qBACA,yBAEFrD,IAAK,IAAIkD,IACPG,EACA,6CACA,EACA,MACA,iBACA,0BAEFpD,IAAK,IAAIiD,IACPG,EACA,6CACA,EACA,MACA,4BACA,0BAEF9E,IAAK,IAAI2E,IACPG,EACA,6CACA,GACA,MACA,iBACA,8CAEF5E,KAAM,IAAIyE,IACRG,EACA,6CACA,GACA,OACA,aACA,6BAEFhE,IAAK,IAAI6D,IACPG,EACA,6CACA,GACA,MACA,qBACA,4BAEF3E,KAAM,IAAIwE,IACRG,EACA,6CACA,EACA,OACA,aACA,wBAEF/I,QAAS,IAAI4I,IACXG,EACA,6CACA,GACA,UACA,eACA,sBAEFjD,KAAM,IAAI8C,IACRG,EACA,6CACA,GACA,OACA,gBACA,4BAEFhD,IAAK,IAAI6C,IACPG,EACA,6CACA,GACA,MACA,oBACA,4BAEF/C,IAAK,IAAI4C,IACPG,EACA,6CACA,GACA,MACA,iBACA,yBAEF1E,IAAK,IAAIuE,IACPG,EACA,6CACA,EACA,MACA,eACA,kCAEFxE,IAAK,IAAIqE,IACPG,EACA,6CACA,GACA,MACA,2BACA,kCAEFzE,IAAK,IAAIsE,IAAMG,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGlE,MAAO,IAAI+D,IACTG,EACA,6CACA,GACA,QACA,sBACA,4BAEFjE,IAAK,IAAI8D,IAAMG,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGxG,MAAO,IAAIqG,IACTG,EACA,6CACA,GACA,QACA,yBACA,sBAEFnG,KAAM,IAAIgG,IACRG,EACA,6CACA,GACA,OACA,yBACA,6BAEFxH,KAAM,IAAIqH,IACRG,EACA,6CACA,GACA,OACA,sBACA,0BAEFzH,KAAM,IAAIsH,IACRG,EACA,6CACA,GACA,OACA,qBACA,yBAEFzD,KAAM,IAAIsD,IACRG,EACA,6CACA,GACA,OACA,qBACA,8CAEF7F,MAAO,IAAI0F,IACTG,EACA,6CACA,GACA,QACA,4BACA,2BAEF5F,OAAQ,IAAIyF,IACVG,EACA,6CACA,GACA,SACA,6BACA,2BAEF3F,MAAO,IAAIwF,IACTG,EACA,6CACA,GACA,QACA,4BACA,2BAEF1F,MAAO,IAAIuF,IACTG,EACA,6CACA,GACA,QACA,4BACA,2BAEFrF,IAAK,IAAIkF,IACPG,EACA,6CACA,GACA,MACA,6BACA,yBAEF3D,IAAK,IAAIwD,IACPG,EACA,6CACA,GACA,MACA,6BACA,4BAEF5D,KAAM,IAAIyD,IACRG,EACA,6CACA,GACA,OACA,kCACA,6BAEF7D,IAAK,IAAI0D,IACPG,EACA,6CACA,GACA,MACA,6BACA,6BAEF9D,IAAK,IAAI2D,IACPG,EACA,6CACA,GACA,MACA,wBACA,mBAEF/D,KAAM,IAAI4D,IACRG,EACA,6CACA,GACA,OACA,8BACA,uBAEFnE,IAAK,IAAIgE,IACPG,EACA,6CACA,GACA,MACA,wBACA,2BAEFpE,KAAM,IAAIiE,IACRG,EACA,6CACA,GACA,OACA,2BACA,2BAEF1D,KAAM,IAAIuD,IACRG,EACA,6CACA,GACA,OACA,iCACA,wBAEFnD,IAAK,IAAIgD,IACPG,EACA,6CACA,GACA,MACA,0BACA,0BAEFlD,IAAK,IAAI+C,IACPG,EACA,6CACA,GACA,MACA,iCACA,qBAEFrE,IAAK,IAAIkE,IACPG,EACA,6CACA,GACA,MACA,kCACA,0BAEFtE,IAAK,IAAImE,IACPG,EACA,6CACA,GACA,MACA,4BACA,wBAEFvE,IAAK,IAAIoE,IACPG,EACA,6CACA,GACA,MACA,6BACA,wBAEF9C,KAAM,IAAI2C,IACRG,EACA,6CACA,GACA,OACA,mBACA,+BAEF7C,OAAQ,IAAI0C,IACVG,EACA,6CACA,GACA,SACA,mBACA,2BAEF7H,MAAO,IAAI0H,IACTG,EACA,6CACA,GACA,QACA,yBACA,2BAEF9H,QAAS,IAAI2H,IACXG,EACA,6CACA,GACA,UACA,2BACA,2BAEF1H,MAAO,IAAIuH,IACTG,EACA,6CACA,GACA,QACA,iBACA,yBAEF1J,IAAK,IAAIuJ,IACPG,EACA,6CACA,GACA,MACA,iBACA,uBAEF3H,IAAK,IAAIwH,IACPG,EACA,6CACA,GACA,MACA,wBACA,2BAEFzJ,KAAM,IAAIsJ,IACRG,EACA,6CACA,GACA,OACA,oBACA,uBAEF5H,IAAK,IAAIyH,IACPG,EACA,6CACA,GACA,MACA,oBACA,2BAEF/H,KAAM,IAAI4H,IACRG,EACA,6CACA,GACA,OACA,mBACA,kCAEFhI,IAAK,IAAI6H,IACPG,EACA,6CACA,GACA,MACA,gBACA,4BAEFlL,KAAM,IAAI+K,IACRG,EACA,6CACA,EACA,OACA,qBACA,yBAEFjI,KAAM,IAAI8H,IACRG,EACA,6CACA,EACA,OACA,yBACA,6BAEFxM,IAAK,IAAIqM,IACPG,EACA,6CACA,GACA,MACA,gBACA,gCAEFtN,IAAK,IAAImN,IACPG,EACA,6CACA,GACA,MACA,sBACA,6BAEFlI,KAAM,IAAI+H,IACRG,EACA,6CACA,GACA,OACA,qBACA,iCAEFnI,IAAK,IAAIgI,IACPG,EACA,6CACA,GACA,MACA,sBACA,qBAEFpI,KAAM,IAAIiI,IACRG,EACA,6CACA,GACA,OACA,aACA,2BAEFpM,KAAM,IAAIiM,IAAMG,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGrI,IAAK,IAAIkI,IAAMG,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FtI,KAAM,IAAImI,IACRG,EACA,6CACA,GACA,OACA,iBACA,wBAEFjM,OAAQ,IAAI8L,IACVG,EACA,6CACA,GACA,SACA,eACA,+BAEFvI,IAAK,IAAIoI,IACPG,EACA,6CACA,GACA,MACA,mBACA,+BAEFxI,KAAM,IAAIqI,IACRG,EACA,6CACA,GACA,OACA,qBACA,yBAEFzI,KAAM,IAAIsI,IACRG,EACA,6CACA,GACA,OACA,kBACA,yBAEF1I,IAAK,IAAIuI,IACPG,EACA,6CACA,GACA,MACA,yBACA,6BAEFzM,IAAK,IAAIsM,IACPG,EACA,6CACA,GACA,MACA,wBACA,wBAEF3I,IAAK,IAAIwI,IACPG,EACA,6CACA,EACA,MACA,6BACA,2BAEF5I,KAAM,IAAIyI,IACRG,EACA,6CACA,GACA,OACA,SACA,4BAEF7I,KAAM,IAAI0I,IACRG,EACA,6CACA,GACA,OACA,YACA,4BAEF9I,IAAK,IAAI2I,IACPG,EACA,6CACA,GACA,MACA,yBACA,gCAEFnN,MAAO,IAAIgN,IACTG,EACA,6CACA,GACA,QACA,iBACA,+BAEFhJ,IAAK,IAAI6I,IACPG,EACA,6CACA,GACA,MACA,oBACA,8BAEFglB,IAAK,IAAInlB,IACPG,EACA,6CACA,GACA,MACA,YACA,oCAEFjJ,MAAO,IAAI8I,IACTG,EACA,6CACA,GACA,QACA,cACA,0BAEFlJ,IAAK,IAAI+I,IACPG,EACA,6CACA,GACA,MACA,gBACA,4BAEFpJ,YAAM,IAAIiJ,IACRG,EACA,6CACA,EACA,YACA,sBACA,8BAEFrJ,OAAQ,IAAIkJ,IACVG,EACA,6CACA,GACA,SACA,cACA,kCAEFtJ,IAAK,IAAImJ,IACPG,EACA,6CACA,GACA,MACA,iBACA,yBAEFvJ,IAAK,IAAIoJ,IACPG,EACA,6CACA,GACA,MACA,qBACA,yBAEFtO,IAAK,IAAImO,IACPG,EACA,6CACA,GACA,MACA,+BACA,+BAEFrO,IAAK,IAAIkO,IACPG,EACA,6CACA,GACA,MACA,aACA,yBAEFpO,IAAK,IAAIiO,IACPG,EACA,6CACA,GACA,MACA,YACA,yBAEF5J,MAAO,IAAIyJ,IACTG,EACA,6CACA,GACA,QACA,4BACA,2BAEF7J,KAAM,IAAI0J,IACRG,EACA,6CACA,GACA,OACA,aACA,2BAEF/J,IAAK,IAAI4J,IACPG,EACA,6CACA,GACA,MACA,wBACA,0BAEF9J,IAAK,IAAI2J,IACPG,EACA,6CACA,GACA,MACA,gCACA,0BAEFhK,KAAM,IAAI6J,IACRG,EACA,6CACA,GACA,OACA,aACA,uBAEFjK,IAAK,IAAI8J,IACPG,EACA,6CACA,EACA,MACA,mBACA,wBAEFnK,KAAM,IAAIgK,IACRG,EACA,6CACA,EACA,OACA,uBACA,yBAEFpK,KAAM,IAAIiK,IACRG,EACA,6CACA,GACA,OACA,kBACA,0BAEFrK,IAAK,IAAIkK,IACPG,EACA,6CACA,GACA,MACA,eACA,2BAEF1N,KAAM,IAAIuN,IACRG,EACA,6CACA,GACA,OACA,iBACA,yBAEFtK,aAAO,IAAImK,IACTG,EACA,6CACA,EACA,aACA,iBACA,8BAEFvK,IAAK,IAAIoK,IACPG,EACA,6CACA,GACA,MACA,eACA,2BAEFxK,KAAM,IAAIqK,IACRG,EACA,6CACA,GACA,OACA,eACA,uBAEFzK,MAAO,IAAIsK,IACTG,EACA,6CACA,EACA,QACA,qBACA,2BAEF1K,KAAM,IAAIuK,IACRG,EACA,6CACA,GACA,OACA,aACA,8BAEF7K,KAAM,IAAI0K,IACRG,EACA,6CACA,GACA,OACA,aACA,yBAEF9K,IAAK,IAAI2K,IAAMG,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9F/K,IAAK,IAAI4K,IACPG,EACA,6CACA,EACA,MACA,eACA,wBAEFhL,KAAM,IAAI6K,IACRG,EACA,6CACA,GACA,OACA,aACA,gCAEFjL,KAAM,IAAI8K,IACRG,EACA,6CACA,GACA,OACA,gBACA,8BAEF/M,IAAK,IAAI4M,IACPG,EACA,6CACA,GACA,MACA,kBACA,0BAEFhN,OAAQ,IAAI6M,IACVG,EACA,6CACA,GACA,SACA,cACA,0BAEFnL,MAAO,IAAIgL,IACTG,EACA,6CACA,GACA,QACA,wBACA,uBAEFrL,GAAI,IAAIkL,IACNG,EACA,6CACA,GACA,KACA,gBACA,2BAEFtL,IAAK,IAAImL,IACPG,EACA,6CACA,GACA,MACA,qBACA,qBAEFvO,KAAM,IAAIoO,IACRG,EACA,6CACA,GACA,OACA,4BACA,4BAEFxL,KAAM,IAAIqL,IACRG,EACA,6CACA,GACA,OACA,qBACA,yBAEFzL,IAAK,IAAIsL,IACPG,EACA,6CACA,GACA,MACA,gBACA,uBAEF1L,IAAK,IAAIuL,IACPG,EACA,6CACA,GACA,MACA,mBACA,0BAEF3L,KAAM,IAAIwL,IACRG,EACA,6CACA,GACA,OACA,oBACA,mCAEF5L,GAAI,IAAIyL,IAAMG,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3F7L,IAAK,IAAI0L,IACPG,EACA,6CACA,GACA,MACA,iBACA,4BAEF9L,KAAM,IAAI2L,IACRG,EACA,6CACA,GACA,OACA,cACA,2BAEF/L,OAAQ,IAAI4L,IACVG,EACA,6CACA,GACA,SACA,kBACA,8BAEFhM,MAAO,IAAI6L,IACTG,EACA,6CACA,GACA,QACA,kBACA,yBAEFrM,KAAM,IAAIkM,IACRG,EACA,6CACA,EACA,OACA,aACA,+BAEFtM,GAAI,IAAImM,IACNG,EACA,6CACA,GACA,KACA,gBACA,uBAEFvM,IAAK,IAAIoM,IAAMG,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChG1M,IAAK,IAAIuM,IACPG,EACA,6CACA,GACA,MACA,eACA,0BAEF3M,IAAK,IAAIwM,IACPG,EACA,6CACA,GACA,MACA,yBACA,wBAEF5M,IAAK,IAAIyM,IACPG,EACA,6CACA,GACA,MACA,wBACA,4BAEFilB,SAAU,IAAIplB,IACZG,EACA,6CACA,EACA,WACA,iBACA,yBAEF3N,IAAK,IAAIwN,IACPG,EACA,6CACA,GACA,MACA,qCACA,6BAEF5N,IAAK,IAAIyN,IACPG,EACA,6CACA,GACA,MACA,eACA,uBAEFxO,KAAM,IAAIqO,IACRG,EACA,6CACA,GACA,OACA,gBACA,wBAEFtP,IAAK,IAAImP,IACPG,EACA,6CACA,GACA,MACA,mBACA,oCAEF1O,KAAM,IAAIuO,IACRG,EACA,6CACA,GACA,OACA,aACA,iCAEFjP,GAAI,IAAI8O,IACNG,EACA,6CACA,GACA,KACA,kBACA,8BAEF3O,MAAO,IAAIwO,IACTG,EACA,6CACA,GACA,QACA,qBACA,yBAEF9O,KAAM,IAAI2O,IACRG,EACA,6CACA,GACA,OACA,YACA,yBAEF3P,KAAM,IAAIwP,IACRG,EACA,6CACA,GACA,OACA,eACA,yBAEF9P,MAAO,I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","file":"static/js/main.97db45b7.chunk.js","sourcesContent":["import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: serializedTokens.syrup,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 462,\n    lpSymbol: 'RPG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x55cdb14855220b239Cf857A03849D96736b9103f',\n    },\n    token: serializedTokens.rpg,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 461,\n    lpSymbol: 'BETA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x88a02d94f437799f06f8c256ff07aa397e6d0016',\n    },\n    token: serializedTokens.beta,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 460,\n    lpSymbol: 'LIGHT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD469F2E7d1329836733aDBAc6B53E09b775a6e03',\n    },\n    token: serializedTokens.light,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 446,\n    lpSymbol: 'BMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\n    },\n    token: serializedTokens.bmon,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 459,\n    lpSymbol: 'CART-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47F0987f276b06E7Ce8D3F09E4E7fEc41a5dB808',\n    },\n    token: serializedTokens.cart,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 437,\n    lpSymbol: 'BMON-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3C2b7B578Dd2175A1c3524Aa0D515106282Bf108',\n    },\n    token: serializedTokens.bmon,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 458,\n    lpSymbol: 'PROS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x109cBFfE72C02F26536Ff8b92278Dfd3610dE656',\n    },\n    token: serializedTokens.pros,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 457,\n    lpSymbol: 'NFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ecc84c9629317a494f12bc56aa2522475bf32e8',\n    },\n    token: serializedTokens.nft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 429,\n    lpSymbol: 'CHESS-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n    },\n    token: serializedTokens.chess,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 447,\n    lpSymbol: 'GNT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\n    },\n    token: serializedTokens.gnt,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 425,\n    lpSymbol: 'DVI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n    },\n    token: serializedTokens.dvi,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 439,\n    lpSymbol: 'MCRN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\n    },\n    token: serializedTokens.mcrn,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 456,\n    lpSymbol: 'TLOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3eDb06e2d182d133864fe7C0f9B4C204bBf61D4E',\n    },\n    token: serializedTokens.tlos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 455,\n    lpSymbol: 'HERO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5d937c3966002cbD9d32c890a59439b4b300a14d',\n    },\n    token: serializedTokens.stephero,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 449,\n    lpSymbol: 'BP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\n    },\n    token: serializedTokens.bp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 454,\n    lpSymbol: 'BSCDEFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\n    },\n    token: serializedTokens.bscdefi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 453,\n    lpSymbol: 'QBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\n    },\n    token: serializedTokens.qbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 452,\n    lpSymbol: 'NAOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\n    },\n    token: serializedTokens.naos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 451,\n    lpSymbol: 'PHA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\n    },\n    token: serializedTokens.pha,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 450,\n    lpSymbol: 'SFUND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\n    },\n    token: serializedTokens.sfund,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 448,\n    lpSymbol: 'RUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\n    },\n    token: serializedTokens.rusd,\n    quoteToken: serializedTokens.busd,\n    isCommunity: true,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 445,\n    lpSymbol: 'POTS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\n    },\n    token: serializedTokens.pots,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: serializedTokens.tusd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 443,\n    lpSymbol: 'BTT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\n    },\n    token: serializedTokens.btt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 442,\n    lpSymbol: 'TRX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\n    },\n    token: serializedTokens.trx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 441,\n    lpSymbol: 'WIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\n    },\n    token: serializedTokens.win,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 436,\n    lpSymbol: 'BABYCAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\n    },\n    token: serializedTokens.babycake,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 440,\n    lpSymbol: 'HERO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe267018C943E77992e7e515724B07b9CE7938124',\n    },\n    token: serializedTokens.hero,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 438,\n    lpSymbol: 'WSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\n    },\n    token: serializedTokens.wsg,\n    quoteToken: serializedTokens.wbnb,\n    isCommunity: true,\n  },\n  {\n    pid: 435,\n    lpSymbol: 'REVV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\n    },\n    token: serializedTokens.revv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: serializedTokens.btt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 434,\n    lpSymbol: 'SKILL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\n    },\n    token: serializedTokens.skill,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: serializedTokens.win,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 433,\n    lpSymbol: 'IF-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\n    },\n    token: serializedTokens.if,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 432,\n    lpSymbol: 'SPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\n    },\n    token: serializedTokens.sps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 431,\n    lpSymbol: 'C98-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n    },\n    token: serializedTokens.c98,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 430,\n    lpSymbol: 'AXS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n    },\n    token: serializedTokens.axs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: serializedTokens.pmon,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: serializedTokens.trx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 428,\n    lpSymbol: 'TITAN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n    },\n    token: serializedTokens.titan,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 427,\n    lpSymbol: 'ONE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n    },\n    token: serializedTokens.harmony,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 426,\n    lpSymbol: 'MASK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n    },\n    token: serializedTokens.mask,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 424,\n    lpSymbol: 'ADX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n    },\n    token: serializedTokens.adx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 423,\n    lpSymbol: 'USDC-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 422,\n    lpSymbol: 'CAKE-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.usdt,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 421,\n    lpSymbol: 'BSCPAD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n    },\n    token: serializedTokens.bscpad,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 420,\n    lpSymbol: 'RABBIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n    },\n    token: serializedTokens.rabbit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 419,\n    lpSymbol: 'WAULTx-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\n    },\n    token: serializedTokens.waultx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 418,\n    lpSymbol: 'WEX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n    },\n    token: serializedTokens.wex,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 417,\n    lpSymbol: 'FORM-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n    },\n    token: serializedTokens.form,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 416,\n    lpSymbol: 'ORBS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n    },\n    token: serializedTokens.orbs,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: serializedTokens.$dg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: serializedTokens.woo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: serializedTokens.htb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: serializedTokens.hai,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 411,\n    lpSymbol: 'O3-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n    },\n    token: serializedTokens.o3,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: serializedTokens.ampl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: serializedTokens.marsh,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: serializedTokens.boring,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: serializedTokens.mbox,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: serializedTokens.ata,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: serializedTokens.mx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: serializedTokens.bcfx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: serializedTokens.qkc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: serializedTokens.ktn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: serializedTokens.mtrg,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: serializedTokens.swg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: serializedTokens.vrt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: serializedTokens.ez,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: serializedTokens.kalm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: serializedTokens.popen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: serializedTokens.well,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: serializedTokens.deri,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: serializedTokens.chr,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: serializedTokens.cyc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: serializedTokens.xend,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: serializedTokens.hotcross,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: serializedTokens.rfox,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: serializedTokens.wmass,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: serializedTokens.ubxt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: serializedTokens.btr,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: serializedTokens.τdoge,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: serializedTokens.one,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: serializedTokens.fine,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: serializedTokens.doge,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: serializedTokens.oin,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: serializedTokens.hyfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: serializedTokens.kun,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: serializedTokens.kun,\n    quoteToken: serializedTokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: serializedTokens.math,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: serializedTokens.mcoin,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: serializedTokens.pnt,\n    quoteToken: serializedTokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: serializedTokens.lmt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: serializedTokens.dfd,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: serializedTokens.alpaca,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: serializedTokens.yfii,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: serializedTokens.cake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: serializedTokens.τbtc,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: serializedTokens.swingby,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: serializedTokens.xed,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: serializedTokens.hakka,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: serializedTokens.cgg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: serializedTokens.suter,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: serializedTokens.hzn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: serializedTokens.alpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: serializedTokens.perl,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: serializedTokens.tlm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: serializedTokens.jgn,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: serializedTokens.eps,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: serializedTokens.arpa,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: serializedTokens.itam,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: serializedTokens.bondly,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: serializedTokens.tko,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: serializedTokens.apys,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: serializedTokens.hoo,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: serializedTokens.oddz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: serializedTokens.easy,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: serializedTokens.nrv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: serializedTokens.dego,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: serializedTokens.gum,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: serializedTokens.pbtc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: serializedTokens.dft,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: serializedTokens.swth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: serializedTokens.lien,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: serializedTokens.zil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: serializedTokens.pcws,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: serializedTokens.bbadger,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: serializedTokens.bdigg,\n    quoteToken: serializedTokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: serializedTokens.lto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: serializedTokens.mir,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: serializedTokens.trade,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: serializedTokens.dusk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: serializedTokens.bifi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: serializedTokens.txl,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: serializedTokens.cos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: serializedTokens.bunny,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: serializedTokens.alice,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: serializedTokens.for,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: serializedTokens.bux,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: serializedTokens.nuls,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: serializedTokens.belt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: serializedTokens.ramp,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: serializedTokens.bfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: serializedTokens.dexe,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: serializedTokens.bel,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: serializedTokens.tpt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: serializedTokens.watch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: serializedTokens.xmark,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: serializedTokens.bmxx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: serializedTokens.iotx,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: serializedTokens.bor,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: serializedTokens.bopen,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: serializedTokens.sushi,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: serializedTokens.dodo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: serializedTokens.bry,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: serializedTokens.zee,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: serializedTokens.swgb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: serializedTokens.comp,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: serializedTokens.sfp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: serializedTokens.beth,\n    quoteToken: serializedTokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: serializedTokens.lina,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: serializedTokens.lit,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: serializedTokens.hget,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: serializedTokens.bdo,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: serializedTokens.egld,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: serializedTokens.ust,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: serializedTokens.mamzn,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: serializedTokens.mgoogl,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: serializedTokens.mnflx,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: serializedTokens.mtsla,\n    quoteToken: serializedTokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: serializedTokens.wsote,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: serializedTokens.front,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: serializedTokens.helmet,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: serializedTokens.btcst,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: serializedTokens.ltc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: serializedTokens.bscx,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: serializedTokens.ten,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: serializedTokens.balbt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: serializedTokens.og,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: serializedTokens.asr,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: serializedTokens.atm,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: serializedTokens.reef,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: serializedTokens.ditto,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: serializedTokens.juv,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: serializedTokens.psg,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: serializedTokens.unfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: serializedTokens.vai,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: serializedTokens.blink,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: serializedTokens.hard,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: serializedTokens.ada,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: serializedTokens.band,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: serializedTokens.dot,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: serializedTokens.eos,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: serializedTokens.link,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: serializedTokens.twt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: serializedTokens.xvs,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: serializedTokens.eth,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: serializedTokens.btcb,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: serializedTokens.alpha,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: serializedTokens.usdt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: serializedTokens.xrp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: serializedTokens.atom,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: serializedTokens.yfii,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: serializedTokens.dai,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: serializedTokens.xtz,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: serializedTokens.bch,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: serializedTokens.yfi,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: serializedTokens.uni,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: serializedTokens.fil,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: serializedTokens.inj,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: serializedTokens.usdc,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: serializedTokens.sxp,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: serializedTokens.ctk,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: serializedTokens.stax,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: serializedTokens.nar,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: serializedTokens.nya,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: serializedTokens.broobee,\n    quoteToken: serializedTokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: serializedTokens.bake,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: serializedTokens.burger,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: serializedTokens.bake,\n    quoteToken: serializedTokens.wbnb,\n  },\n]\n\nexport default farms\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = (refreshTime = 6000) => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, refreshTime)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible, refreshTime])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, ProfileAvatarFetchStatus } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    // const response = await getProfile(address)\n    // dispatch(profileFetchSucceeded(response))\n  } catch (e) {\n    console.error(e)\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n  getNftSaleContract,\n  getPancakeSquadContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress, getPancakeRabbitsAddress, getPancakeSquadAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library,account } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(account?library.getSigner():library), [library,account])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useNftSaleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftSaleContract(library.getSigner()), [library])\n}\n\nexport const usePancakeSquadContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeSquadContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\nexport const useContractForCollection = (collectionAddress: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => {\n    if (collectionAddress === getPancakeRabbitsAddress()) {\n      return getPancakeRabbitContract(library.getSigner())\n    }\n    if (collectionAddress === getPancakeSquadAddress()) {\n      return getPancakeSquadContract(library.getSigner())\n    }\n    return null\n  }, [library, collectionAddress])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import sample from 'lodash/sample'\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3)\n) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  // Use custom node if available (both for development and production)\n  // However on the testnet it wouldn't work, so if on testnet - comment out the REACT_APP_NODE_PRODUCTION from env file\n  if (process.env.REACT_APP_NODE_PRODUCTION) {\n    return process.env.REACT_APP_NODE_PRODUCTION\n  }\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  // try {\n  //   const hasRegistered = await profileContract.hasRegistered(address)\n\n  //   if (!hasRegistered) {\n  //     return null\n  //   }\n\n  //   const profileResponse = await profileContract.getUserProfile(address)\n  //   const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n  //   let nft = null\n  //   if (isActive) {\n  //     const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n  //     nft = {\n  //       tokenId: apiRes.tokenId,\n  //       name: apiRes.name,\n  //       collectionName: apiRes.collection.name,\n  //       collectionAddress,\n  //       description: apiRes.description,\n  //       attributes: apiRes.attributes,\n  //       createdAt: apiRes.createdAt,\n  //       updatedAt: apiRes.updatedAt,\n  //       image: {\n  //         original: apiRes.image?.original,\n  //         thumbnail: apiRes.image?.thumbnail,\n  //       },\n  //     }\n  //   }\n\n  //   return { nft, hasRegistered }\n  // } catch {\n  //   return { nft: null, hasRegistered: false }\n  // }\n\n  return null\n\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  // try {\n  //   const hasRegistered = await profileContract.hasRegistered(address)\n\n  //   if (!hasRegistered) {\n  //     return { hasRegistered, profile: null }\n  //   }\n\n  //   const profileResponse = await profileContract.getUserProfile(address)\n  //   const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n  //   const team = await getTeam(teamId)\n  //   const username = await getUsername(address)\n  //   let nftToken: NftToken\n\n  //   // If the profile is not active the tokenId returns 0, which is still a valid token id\n  //   // so only fetch the nft data if active\n  //   if (isActive) {\n  //     const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n  //     nftToken = {\n  //       tokenId: apiRes.tokenId,\n  //       name: apiRes.name,\n  //       collectionName: apiRes.collection.name,\n  //       collectionAddress,\n  //       description: apiRes.description,\n  //       attributes: apiRes.attributes,\n  //       createdAt: apiRes.createdAt,\n  //       updatedAt: apiRes.updatedAt,\n  //       image: {\n  //         original: apiRes.image?.original,\n  //         thumbnail: apiRes.image?.thumbnail,\n  //       },\n  //     }\n\n  //     // Save the preview image in a cookie so it can be used on the exchange\n  //     Cookies.set(\n  //       `profile_${address}`,\n  //       {\n  //         username,\n  //         avatar: `${nftToken.image.thumbnail}`,\n  //       },\n  //       { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n  //     )\n  //   }\n\n  //   const profile = {\n  //     userId,\n  //     points,\n  //     teamId,\n  //     tokenId,\n  //     username,\n  //     collectionAddress,\n  //     isActive,\n  //     nft: nftToken,\n  //     team,\n  //   } as Profile\n\n  //   return { hasRegistered, profile }\n  // } catch (e) {\n  //   console.error(e)\n  //   return null\n  // }\n\n  return null\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport axios from \"axios\"\n\n\n\nconst useGetPriceData = () => {\n  const [data, setData] = useState<BigNumber>(new BigNumber(0))\n  const API_URL = \"https://api.pancakeswap.info/api/v2/tokens/0x5c46c55A699A6359E451B2c99344138420c87261\"\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const resp = await axios.get(API_URL);\n      // axios.get(API_URL).then((re)=>{\n  //   setCakePriceBusd(new BigNumber(re.data.data.price))\n  // });\n        setData( new BigNumber(resp.data.data.price))\n    }\n\n    fetchData()\n  }, [])\n\n  return data\n}\n\nexport default useGetPriceData","import { useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport axios from \"axios\"\n\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\nimport useGetPriceData from './fetchTokenPrice'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const price = useGetPriceData();\n  // axios.get(API_URL).then((re)=>{\n  //   setCakePriceBusd(new BigNumber(re.data.data.price))\n  // });\n  // const cakeBnbFarm = useFarmFromPid(251)\n\n  // const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  // const cakePriceBusd = useMemo(() => {\n  //   return new BigNumber(cakePriceBusdAsString)\n  // }, [cakePriceBusdAsString])\n\n  return price\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined PancakeSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    // 97: '0xC96D427c44CffC93B5B301Ef170B8208b40E60B9',\n    97:\"0x57Bca115F247452aeC3843A4aeAF043491D31978\",\n    56: '0xE2b8aE0eE0aC08642cebc7BE0313cbB2381fb244',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n  nftSale: {\n    56: '0x29fE7148636b7Ae0b1E53777b28dfbaA9327af8E',\n    97: '0xe486De509c5381cbdBF3e71F57D7F1f7570f5c46',\n  },\n  pancakeSquad: {\n    56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n    97: '0xfC0c3F11fDA72Cb9A56F28Ec8D44C0ae4B3ABF86',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\nexport const getNftSaleAddress = () => {\n  return getAddress(addresses.nftSale)\n}\nexport const getPancakeSquadAddress = () => {\n  return getAddress(addresses.pancakeSquad)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: ProfileAvatarFetchStatus\n      avatarFetchStatus: ProfileAvatarFetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(\n    MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  beta: new Token(\n    MAINNET,\n    '0xBe1a001FE942f96Eea22bA08783140B9Dcc09D28',\n    18,\n    'BETA',\n    'Beta Finance',\n    'https://betafinance.org',\n  ),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'Binance BTC',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.alpaca.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  alpaca: new Token(\n    MAINNET,\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n    18,\n    'ALPACA',\n    'AlpacaToken',\n    'https://www.alpacafinance.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n  cart: new Token(\n    MAINNET,\n    '0x5C8C8D560048F34E5f7f8ad71f2f81a89DBd273e',\n    18,\n    'CART',\n    'CryptoArt.ai',\n    'https://cryptoart.ai/',\n  ),\n  light: new Token(\n    MAINNET,\n    '0x037838b556d9c9d654148a284682C55bB5f56eF4',\n    18,\n    'LIGHT',\n    'Lightning',\n    'https://lightningprotocol.finance/',\n  ),\n  rpg: new Token(\n    MAINNET,\n    '0xc2098a8938119A52B1F7661893c0153A6CB116d5',\n    18,\n    'RPG',\n    'Rangers Protocol',\n    'https://www.rangersprotocol.com/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  busd: new Token(\n    TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n  getNftSaleAddress,\n  getPancakeSquadAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\nimport nftSaleAbi from 'config/abi/nftSale.json'\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.cake.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  console.log(\"getLotteryV2Address\",getLotteryV2Address())\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\nexport const getNftSaleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftSaleAbi, getNftSaleAddress(), signer)\n}\nexport const getPancakeSquadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeSquadAbi, getPancakeSquadAddress(), signer)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 40\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n// In reality its 10000 because of fast refresh, a bit less here to cover for possible long request times\nexport const PANCAKE_BUNNIES_UPDATE_FREQUENCY = 8000\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\n\nconst useUserAgent = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\n  }, [])\n}\n\nexport default useUserAgent\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen((args) => {\n      if (args.hash === '') {\n        setTimeout(() => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n          })\n        }, 50)\n      }\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuItemsType, DropdownMenuItemType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { nftsBaseUrl, pancakeBunniesAddress, pancakeSquadAddress } from 'views/Nft/market/constants'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  // {\n  //   label: t('Trade'),\n  //   icon: 'Swap',\n  //   href: '/swap',\n  //   showItemsOnMobile: false,\n  //   items: [\n  //     {\n  //       label: t('Exchange'),\n  //       href: '/swap',\n  //     },\n  //     {\n  //       label: t('Liquidity'),\n  //       href: '/liquidity',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Earn'),\n  //   href: '/farms',\n  //   icon: 'Earn',\n  //   items: [\n  //     {\n  //       label: t('Farms'),\n  //       href: '/farms',\n  //     },\n  //     {\n  //       label: t('Pools'),\n  //       href: '/pools',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Win'),\n  //   href: '/prediction',\n  //   icon: 'Trophy',\n  //   items: [\n  //     {\n  //       label: t('Prediction (BETA)'),\n  //       href: '/prediction',\n  //     },\n  //     {\n  //       label: t('Lottery'),\n  //       href: '/lottery',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('NFT'),\n  //   href: `${nftsBaseUrl}`,\n  //   icon: 'Nft',\n  //   items: [\n  //     {\n  //       label: t('Overview'),\n  //       href: `${nftsBaseUrl}`,\n  //       status: {\n  //         text: t('Live'),\n  //         color: 'failure',\n  //       },\n  //     },\n  //     {\n  //       label: t('Bunnies'),\n  //       href: `${nftsBaseUrl}/collections/${pancakeBunniesAddress}`,\n  //     },\n  //     {\n  //       label: t('Squad'),\n  //       href: `${nftsBaseUrl}/collections/${pancakeSquadAddress}`,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: '',\n  //   href: '/info',\n  //   icon: 'More',\n  //   hideSubNav: true,\n  //   items: [\n  //     {\n  //       label: t('Info'),\n  //       href: '/info',\n  //     },\n  //     {\n  //       label: t('IFO'),\n  //       href: '/ifo',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        {fetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      {/* <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={() => history.push(`${nftsBaseUrl}/profile/${account.toLowerCase()}`)}>\n        {t('Your NFTs')}\n      </UserMenuItem>\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n","import React from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      // globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={[]}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n      footerLinks={footerLinks(t)}\n      activeItem={activeMenuItem?.href}\n      activeSubItem={activeSubMenuItem?.href}\n      buyCakeLabel=\"Buy iBG\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import { FooterLinkType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nexport const footerLinks: (t: ContextApi['t']) => FooterLinkType[] = (t) => [\n  // {\n  //   label: t('About'),\n  //   items: [\n  //     {\n  //       label: t('Contact'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com/',\n  //     },\n  //     {\n  //       label: t('Community'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us/telegram',\n  //     },\n  //     {\n  //       label: t('CAKE token'),\n  //       href: 'https://docs.pancakeswap.finance/tokenomics/cake',\n  //     },\n  //     {\n  //       label: '—',\n  //     },\n  //     {\n  //       label: t('Online Store'),\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //       isHighlighted: true,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Help'),\n  //   items: [\n  //     {\n  //       label: t('Customer Support'),\n  //       href: 'https://docs.pancakeswap.finance/contact-us/customer-support',\n  //     },\n  //     {\n  //       label: t('Troubleshooting'),\n  //       href: 'https://docs.pancakeswap.finance/help/troubleshooting',\n  //     },\n  //     {\n  //       label: t('Guides'),\n  //       href: 'https://docs.pancakeswap.finance/get-started',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Developers'),\n  //   items: [\n  //     {\n  //       label: 'Github',\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: t('Documentation'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: t('Bug Bounty'),\n  //       href: 'https://app.gitbook.com/@pancakeswap-1/s/pancakeswap/code/bug-bounty',\n  //     },\n  //     {\n  //       label: t('Audits'),\n  //       href: 'https://docs.pancakeswap.finance/help/faq#is-pancakeswap-safe-has-pancakeswap-been-audited',\n  //     },\n  //     {\n  //       label: t('Careers'),\n  //       href: 'https://docs.pancakeswap.finance/hiring/become-a-chef',\n  //     },\n  //   ],\n  // },\n]\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useEffect, useState } from 'react'\nimport { AutoRenewIcon, Box, Button, Flex, InjectedModalProps, Modal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAnniversaryAchievementContract } from 'hooks/useContract'\nimport { delay } from 'lodash'\n\nconst AnniversaryImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst AnniversaryAchievementModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const { claimAnniversaryPoints } = useAnniversaryAchievementContract()\n\n  const handleClick = async () => {\n    setIsLoading(true)\n    try {\n      await claimAnniversaryPoints()\n    } finally {\n      onDismiss()\n    }\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Box>\n          <AnniversaryImage src=\"/images/achievements/1-year.svg\" />\n        </Box>\n        <Text textAlign=\"center\" bold color=\"secondary\" maxWidth=\"400px\" fontSize=\"16px\" mb=\"24px\">\n          {t('You won points for joining PancakeSwap during the first year of our journey!')}\n        </Text>\n        <Button\n          disabled={isLoading}\n          onClick={handleClick}\n          endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading ? t('Claiming...') : t('Claim now')}\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default AnniversaryAchievementModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAnniversaryAchievementContract } from 'utils/contractHelpers'\nimport AnniversaryAchievementModal from './AnniversaryAchievementModal'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [canClaimAnniversaryPoints, setCanClaimAnniversaryPoints] = useState(false)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const [onPresentAnniversaryModal] = useModal(<AnniversaryAchievementModal />)\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimAnniversaryStatus = async () => {\n      // const { canClaim } = getAnniversaryAchievementContract()\n      // const canClaimAnniversary = await canClaim(account)\n      // setCanClaimAnniversaryPoints(canClaimAnniversary)\n    }\n\n    if (account) {\n      fetchClaimAnniversaryStatus()\n    }\n  }, [account])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (canClaimAnniversaryPoints && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentAnniversaryModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentAnniversaryModal, canClaimAnniversaryPoints])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useUserAgent from 'hooks/useUserAgent'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\n// const Home = lazy(() => import('./views/Home'))\n// const Farms = lazy(() => import('./views/Farms'))\n// const FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Teams = lazy(() => import('./views/Teams'))\n// const Team = lazy(() => import('./views/Teams/Team'))\n// const TradingCompetition = lazy(() => import('./views/TradingCompetition'))\n// const Predictions = lazy(() => import('./views/Predictions'))\n// const PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\n// const Voting = lazy(() => import('./views/Voting'))\n// const Proposal = lazy(() => import('./views/Voting/Proposal'))\n// const CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\n// const AddLiquidity = lazy(() => import('./views/AddLiquidity'))\n// const Liquidity = lazy(() => import('./views/Pool'))\n// const PoolFinder = lazy(() => import('./views/PoolFinder'))\n// const RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\n// const Info = lazy(() => import('./views/Info'))\n// const NftMarket = lazy(() => import('./views/Nft/market'))\n// const ProfileCreation = lazy(() => import('./views/ProfileCreation'))\n// const PancakeSquad = lazy(() => import('./views/PancakeSquad'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account } = useWeb3React()\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n  useUserAgent()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={[]} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<div/>}>\n          <Switch>\n            <Route path=\"/\" exact>\n              {/* <Home /> */}\n              <Lottery />\n            </Route>\n            {/* <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/create-profile\">\n              <ProfileCreation />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route> */}\n\n            {/* NFT */}\n            {/* <Route path=\"/nfts\">\n              <NftMarket />\n            </Route>\n\n            <Route path=\"/pancake-squad\">\n              <PancakeSquad />\n            </Route> */}\n\n            {/* Info pages */}\n            {/* <Route path=\"/info\">\n              <Info />\n            </Route> */}\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            {/* <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n */}\n            {/* Redirect */}\n            {/* <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Redirect to=\"/nfts\" />\n            </Route>\n            <Route path=\"/profile\">\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n            </Route> */}\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      {/* <EasterEgg iterations={2} /> */}\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 223,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rpg,\n    contractAddress: {\n      97: '',\n      56: '0x65C0940C50A3C98AEEc95a115Ae62E9804588713',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01863',\n  },\n  {\n    sousId: 222,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.beta,\n    contractAddress: {\n      97: '',\n      56: '0x6f660c58723922c6f866a058199ff4881019b4b5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 221,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nft,\n    contractAddress: {\n      97: '',\n      56: '0x8d018823d13c56d62ffb795151a9e629c21e047b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '173727',\n  },\n  {\n    sousId: 220,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0861',\n  },\n  {\n    sousId: 219,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlos,\n    contractAddress: {\n      97: '',\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3616',\n  },\n  {\n    sousId: 218,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stephero,\n    contractAddress: {\n      97: '',\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1851',\n  },\n  {\n    sousId: 217,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bp,\n    contractAddress: {\n      97: '',\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.217',\n  },\n  {\n    sousId: 216,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cvp,\n    contractAddress: {\n      97: '',\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.14',\n  },\n  {\n    sousId: 215,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qbt,\n    contractAddress: {\n      97: '',\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.412',\n  },\n  {\n    sousId: 214,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.naos,\n    contractAddress: {\n      97: '',\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1736',\n  },\n  {\n    sousId: 213,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pha,\n    contractAddress: {\n      97: '',\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.28',\n  },\n  {\n    sousId: 212,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.101',\n  },\n  {\n    sousId: 211,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.9837',\n  },\n  {\n    sousId: 210,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pots,\n    contractAddress: {\n      97: '',\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 209,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 208,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.revv,\n    contractAddress: {\n      97: '',\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.331',\n  },\n  {\n    sousId: 207,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '263',\n  },\n  {\n    sousId: 206,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.skill,\n    contractAddress: {\n      97: '',\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 205,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1815.39',\n  },\n  {\n    sousId: 204,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.if,\n    contractAddress: {\n      97: '',\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02835',\n  },\n  {\n    sousId: 203,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '12.86',\n  },\n  {\n    sousId: 202,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.c98,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.axs,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  {\n    sousId: 200,\n    stakingToken: serializedTokens.axs,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00992',\n  },\n  {\n    sousId: 199,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02696',\n  },\n  {\n    sousId: 198,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '9.6643',\n  },\n  {\n    sousId: 197,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: serializedTokens.doge,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: serializedTokens.tpt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: serializedTokens.sushi,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: serializedTokens.twt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: serializedTokens.bnb,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { Address } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type Collection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    slug: 'pancake-bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n  [CollectionKey.SQUAD]: {\n    name: 'Pancake Squad',\n    description: \"PancakeSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'pancake-squad',\n    address: {\n      56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default collections\n","import { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum NftFilterLoadingState {\n  IDLE = 'IDLE',\n  LOADING = 'LOADING',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    filters: {\n      loadingState: NftFilterLoadingState\n      activeFilters: Record<string, NftAttribute> // string is the collection address\n    }\n    loadingState: {\n      isUpdatingPancakeBunnies: boolean\n      latestPancakeBunniesUpdateAt: number\n    }\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'NEW',\n  MODIFY = 'MODIFY',\n  CANCEL = 'CANCEL',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsReponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiTokenFilterResponse {\n  total: number\n  data: Record<string, ApiSingleTokenData>\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n  attributes?: NftAttribute[]\n  tokenId?: string\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution: Record<string, number>\n  data: Record<string, ApiSingleTokenData>\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n// ${API_NFT}/collections/${collectionAddress}/distribution\nexport interface ApiCollectionDistribution {\n  total: number\n  data: Record<string, Record<string, number>>\n}\n\nexport interface ApiCollectionDistributionPB {\n  total: number\n  data: Record<string, number>\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","import collections from 'config/constants/nftsCollections'\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\n\n// @TODO This will be removed when more collections are added\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\n\nexport const pancakeSquadAddress = getAddress(collections[CollectionKey.SQUAD].address)\n\n// @TODO Remove after the V1\nexport const TMP_SEE_ALL_LINK = `${nftsBaseUrl}/collections/${pancakeBunniesAddress}`\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","import { request, gql } from 'graphql-request'\nimport { stringify } from 'qs'\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport map from 'lodash/map'\nimport { uniq } from 'lodash'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  TokenMarketData,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NftToken,\n  NftLocation,\n  Collection,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  ApiCollection,\n  CollectionMarketDataBaseFields,\n  Transaction,\n  AskOrder,\n  ApiSingleTokenData,\n  NftAttribute,\n  ApiTokenFilterResponse,\n} from './types'\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollection[]> => {\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return []\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @param size\n * @param page\n * @returns\n */\nexport const getNftsFromCollectionApi = async (\n  collectionAddress: string,\n  size = 100,\n  page = 1,\n): Promise<ApiResponseCollectionTokens> => {\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const requestPath = `${API_NFT}/collections/${collectionAddress}/tokens${\n    !isPBCollection ? `?page=${page}&size=${size}` : ``\n  }`\n\n  const res = await fetch(requestPath)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: {\n        original: res.image?.original,\n        thumbnail: res.image?.thumbnail,\n      },\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        {\n          collections {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n    )\n    return res.collections\n  } catch (error) {\n    console.error('Failed to fetch NFT collections', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for nfts in a collection using the Subgraph\n * @param collectionAddress\n * @param first\n * @param skip\n * @returns\n */\nexport const getNftsFromCollectionSg = async (\n  collectionAddress: string,\n  first = 1000,\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  // Squad to be sorted by tokenId as this matches the order of the paginated API return. For PBs - get the most recent,\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(orderBy:${isPBCollection ? 'updatedAt' : 'tokenId'}, skip: $skip, first: $first) {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase(), skip, first },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByBunnyIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          nfts(first: 1000, where: $where) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_in: existingTokenIds },\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, first: $first, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * Filter NFTs from a collection\n * @param collectionAddress\n * @returns\n */\nexport const fetchNftsFiltered = async (\n  collectionAddress: string,\n  filters: Record<string, string | number>,\n): Promise<ApiTokenFilterResponse> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/filter?${stringify(filters)}`)\n\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const getMetadataWithFallback = (apiMetadata: ApiResponseCollectionTokens['data'], bunnyId: string) => {\n  // The fallback is just for the testnet where some bunnies don't exist\n  return (\n    apiMetadata[bunnyId] ?? {\n      name: '',\n      description: '',\n      collection: { name: 'Pancake Bunnies' },\n      image: {\n        original: '',\n        thumbnail: '',\n      },\n    }\n  )\n}\n\nexport const getPancakeBunniesAttributesField = (bunnyId: string) => {\n  // Generating attributes field that is not returned by API\n  // but can be \"faked\" since objects are keyed with bunny id\n  return [\n    {\n      traitType: 'bunnyId',\n      value: bunnyId,\n      displayType: null,\n    },\n  ]\n}\n\nexport const combineApiAndSgResponseToNftToken = (\n  apiMetadata: ApiSingleTokenData,\n  marketData: TokenMarketData,\n  attributes: NftAttribute[],\n) => {\n  return {\n    tokenId: marketData.tokenId,\n    name: apiMetadata.name,\n    description: apiMetadata.description,\n    collectionName: apiMetadata.collection.name,\n    collectionAddress: pancakeBunniesAddress,\n    image: apiMetadata.image,\n    marketData,\n    attributes,\n  }\n}\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\n    const { address: collectionAddress } = collection\n    const contract = getErc721Contract(collectionAddress)\n    let balanceOfResponse\n\n    try {\n      balanceOfResponse = await contract.balanceOf(account)\n    } catch (e) {\n      console.error(e)\n      return []\n    }\n\n    const balanceOf = balanceOfResponse.toNumber()\n\n    // User has no NFTs for this collection\n    if (balanceOfResponse.eq(0)) {\n      return []\n    }\n\n    const getTokenId = async (index: number) => {\n      try {\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n        const tokenId = tokenIdBn.toString()\n        return tokenId\n      } catch (error) {\n        console.error('getTokenIdAndData', error)\n        return null\n      }\n    }\n\n    const tokenIdPromises = []\n\n    // For each index get the tokenId\n    for (let i = 0; i < balanceOf; i++) {\n      tokenIdPromises.push(getTokenId(i))\n    }\n\n    const tokenIds = await Promise.all(tokenIdPromises)\n    const nftLocation = NftLocation.WALLET\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\n      return { tokenId, collectionAddress, nftLocation }\n    })\n\n    return tokensWithCollectionAddress\n  })\n\n  const walletNfts = await Promise.all(walletNftPromises)\n  return walletNfts.flat()\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find(\n      (marketNft) =>\n        marketNft.tokenId === walletNft.tokenId &&\n        marketNft.collection.id.toLowerCase() === walletNft.collectionAddress.toLowerCase(),\n    )\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts makret data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIdsWithCollectionAddress = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIdsWithCollectionAddress.unshift(profileNftWithCollectionAddress)\n  }\n\n  const uniqueCollectionAddresses = uniq(\n    walletNftIdsWithCollectionAddress.map((walletNftId) => walletNftId.collectionAddress),\n  )\n\n  const walletNftsByCollection = uniqueCollectionAddresses.map((collectionAddress) => {\n    return {\n      collectionAddress,\n      idWithCollectionAddress: walletNftIdsWithCollectionAddress.filter(\n        (walletNft) => walletNft.collectionAddress === collectionAddress,\n      ),\n    }\n  })\n\n  const walletMarketDataRequests = walletNftsByCollection.map((walletNftByCollection) => {\n    const tokenIdIn = walletNftByCollection.idWithCollectionAddress.map((walletNft) => walletNft.tokenId)\n    return getNftsMarketData({\n      tokenId_in: tokenIdIn,\n      collection: walletNftByCollection.collectionAddress.toLowerCase(),\n    })\n  })\n\n  const walletMarketDataResponses = await Promise.all(walletMarketDataRequests)\n  const walletMarketData = walletMarketDataResponses.flat()\n\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIdsWithCollectionAddress, walletMarketData)\n\n  const walletTokenIds = walletNftIdsWithCollectionAddress\n    .filter((walletNft) => {\n      // Profile Pic NFT is no longer wanted in this array, hence the filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([\n    ...forSaleNftIds,\n    ...walletNftIdsWithCollectionAddress,\n  ])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    walletTokenIds,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n\n/**\n * Fetch distribution information for a collection\n * @returns\n */\nexport const getCollectionDistributionApi = async <T>(collectionAddress: string): Promise<T> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/distribution`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress} distribution`, res.statusText)\n  return null\n}\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  getNftsFromCollectionApi,\n  getNftsMarketData,\n  getCollectionsApi,\n  getCollectionsSg,\n  getUserActivity,\n  combineCollectionData,\n  getCollectionSg,\n  getCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getCompleteAccountNftData,\n  getNftsByBunnyIdSg,\n  getMarketDataForTokenIds,\n  getMetadataWithFallback,\n  getPancakeBunniesAttributesField,\n  combineApiAndSgResponseToNftToken,\n  fetchNftsFiltered,\n} from './helpers'\nimport {\n  State,\n  Collection,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NFTMarketInitializationState,\n  UserNftInitializationState,\n  NftToken,\n  NftLocation,\n  ApiSingleTokenData,\n  NftAttribute,\n  NftFilterLoadingState,\n} from './types'\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    filters: {\n      loadingState: NftFilterLoadingState.IDLE,\n      activeFilters: {},\n    },\n    loadingState: {\n      isUpdatingPancakeBunnies: false,\n      latestPancakeBunniesUpdateAt: 0,\n    },\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections, collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; page: number; size: number }\n>('nft/fetchNftsFromCollections', async ({ collectionAddress, page, size }) => {\n  try {\n    if (collectionAddress === pancakeBunniesAddress) {\n      // PancakeBunnies don't need to pre-fetch \"all nfts\" from the collection\n      // When user visits IndividualNFTPage required nfts will be fetched via bunny id\n      return []\n    }\n\n    const nfts = await getNftsFromCollectionApi(collectionAddress, size, page)\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    const tokenIds = Object.values(nfts.data).map((nft) => nft.tokenId)\n    const nftsMarket = await getMarketDataForTokenIds(collectionAddress, tokenIds)\n\n    return tokenIds.map((id) => {\n      const apiMetadata = nfts.data[id]\n      const marketData = nftsMarket.find((nft) => nft.tokenId === id)\n\n      return {\n        tokenId: id,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress,\n        image: apiMetadata.image,\n        attributes: apiMetadata.attributes,\n        marketData,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\nexport const filterNftsFromCollection = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; nftFilters: Record<string, NftAttribute> }\n>('nft/filterNftsFromCollection', async ({ collectionAddress, nftFilters }) => {\n  try {\n    const attrParams = Object.values(nftFilters).reduce(\n      (accum, attr) => ({\n        ...accum,\n        [attr.traitType]: attr.value,\n      }),\n      {},\n    )\n    const attrFilters = await fetchNftsFiltered(collectionAddress, attrParams)\n\n    // Fetch market data for each token returned\n    const tokenIds = Object.values(attrFilters.data).map((apiToken) => apiToken.tokenId)\n    const marketData = await getNftsMarketData({ tokenId_in: tokenIds, collection: collectionAddress.toLowerCase() })\n\n    const nftTokens: NftToken[] = Object.values(attrFilters.data).map((apiToken) => {\n      const apiTokenMarketData = marketData.find((tokenMarketData) => tokenMarketData.tokenId === apiToken.tokenId)\n\n      return {\n        tokenId: apiToken.tokenId,\n        name: apiToken.name,\n        description: apiToken.description,\n        collectionName: apiToken.collection.name,\n        collectionAddress,\n        image: apiToken.image,\n        attributes: apiToken.attributes,\n        marketData: apiTokenMarketData,\n      }\n    })\n\n    return nftTokens\n  } catch {\n    return []\n  }\n})\n\n/**\n * This action keeps data on the individual PancakeBunny page up-to-date. Operation is a twofold\n * 1. Update existing NFTs in the state in case some were sold or got price modified\n * 2. Fetch 30 more NFTs with specified bunny id\n */\nexport const fetchNewPBAndUpdateExisting = createAsyncThunk<\n  NftToken[],\n  {\n    bunnyId: string\n    existingTokensWithBunnyId: string[]\n    allExistingPBTokenIds: string[]\n    existingMetadata: ApiSingleTokenData\n    orderDirection: 'asc' | 'desc'\n  }\n>(\n  'nft/fetchNewPBAndUpdateExisting',\n  async ({ bunnyId, existingTokensWithBunnyId, allExistingPBTokenIds, existingMetadata, orderDirection }) => {\n    try {\n      // 1. Update existing NFTs in the state in case some were sold or got price modified\n      const [updatedNfts, updatedNftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(pancakeBunniesAddress),\n        getMarketDataForTokenIds(pancakeBunniesAddress, allExistingPBTokenIds),\n      ])\n\n      if (!updatedNfts?.data) {\n        return []\n      }\n      const updatedTokens = updatedNftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(updatedNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n\n      // 2. Fetch 30 more NFTs with specified bunny id\n      let newNfts = { data: { [bunnyId]: existingMetadata } }\n\n      if (!existingMetadata) {\n        newNfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\n      }\n      const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokensWithBunnyId, orderDirection)\n\n      if (!newNfts?.data) {\n        return updatedTokens\n      }\n\n      const moreTokensWithRequestedBunnyId = nftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(newNfts.data, marketData.otherId)\n        const attributes = getPancakeBunniesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n      return [...updatedTokens, ...moreTokensWithRequestedBunnyId]\n    } catch (error) {\n      console.error(`Failed to update PancakeBunnies NFTs`, error)\n      return []\n    }\n  },\n)\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  return {\n    ...metadataForNft[0],\n    location: nftLocation,\n    marketData: marketDataForNft[0],\n  }\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {\n    addAttributeFilter: (state, action: PayloadAction<NftAttribute>) => {\n      state.data.filters.activeFilters = {\n        ...state.data.filters.activeFilters,\n        [action.payload.traitType]: action.payload,\n      }\n    },\n    removeAttributeFilter: (state, action: PayloadAction<string>) => {\n      if (state.data.filters.activeFilters[action.payload]) {\n        delete state.data.filters.activeFilters[action.payload]\n      }\n    },\n    removeAllFilters: (state, action: PayloadAction<string>) => {\n      state.data.filters.activeFilters = {}\n      state.data.nfts[action.payload] = []\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(filterNftsFromCollection.pending, (state) => {\n      state.data.filters.loadingState = NftFilterLoadingState.LOADING\n    })\n    builder.addCase(filterNftsFromCollection.fulfilled, (state, action) => {\n      const { collectionAddress, nftFilters } = action.meta.arg\n\n      state.data.filters = {\n        ...state.data.filters,\n        loadingState: NftFilterLoadingState.IDLE,\n        activeFilters: nftFilters,\n      }\n      state.data.nfts[collectionAddress] = action.payload\n    })\n\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.pending, (state) => {\n      state.data.filters.loadingState = NftFilterLoadingState.LOADING\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      const existingNfts: NftToken[] = state.data.nfts[collectionAddress] ?? []\n      const existingNftsWithoutNewOnes = existingNfts.filter(\n        (nftToken) => !action.payload.find((newToken) => newToken.tokenId === nftToken.tokenId),\n      )\n\n      state.data.filters = {\n        ...state.data.filters,\n        loadingState: NftFilterLoadingState.IDLE,\n        activeFilters: {},\n      }\n      state.data.nfts[collectionAddress] = [...existingNftsWithoutNewOnes, ...action.payload]\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.pending, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = true\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[pancakeBunniesAddress] = action.payload\n      }\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.rejected, (state) => {\n      state.data.loadingState.isUpdatingPancakeBunnies = false\n      state.data.loadingState.latestPancakeBunniesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\n// Actions\nexport const { addAttributeFilter, removeAttributeFilter, removeAllFilters } = NftMarket.actions\n\nexport default NftMarket.reducer\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n"],"sourceRoot":""}