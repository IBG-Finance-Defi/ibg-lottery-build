{"version":3,"sources":["components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","state/lottery/hooks.ts","views/Lottery/hooks/useGetNextLotteryEvent.ts","views/Lottery/hooks/useStatusTransitions.tsx","hooks/useCallWithGasPrice.ts","components/Balance.tsx","state/lottery/fetchUnclaimedUserRewards.ts","views/Lottery/helpers.tsx","views/Lottery/svgs/Balls.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/TicketNumber.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","utils/calls/estimateGas.ts","components/ApproveConfirmButtons.tsx","utils/calls/farms.ts","views/Lottery/components/ClaimPrizesModal/ClaimPrizesInner.tsx","views/Lottery/components/ClaimPrizesModal/index.tsx","views/Lottery/components/ViewTicketsModal/PreviousRoundTicketsInner.tsx","hooks/useApproveConfirmTransaction.ts","views/Lottery/components/BuyTicketsModal/BuyTicketsModal.tsx","views/Lottery/components/BuyTicketsModal/NumTicketsToBuyButton.tsx","views/Lottery/components/BuyTicketsModal/TicketInput.tsx","views/Lottery/components/BuyTicketsModal/EditNumbersModal.tsx","views/Lottery/components/BuyTicketsModal/generateTicketNumbers.tsx","views/Lottery/components/BuyTicketsModal/useTicketsReducer.tsx","views/Lottery/components/BuyTicketsButton.tsx","views/Lottery/components/ViewTicketsModal/CurrentRoundTicketsInner.tsx","views/Lottery/components/ViewTicketsModal/index.tsx","views/Lottery/components/NextDrawCard.tsx","views/Lottery/components/AllHistoryCard/RoundSwitcher.tsx","views/Lottery/components/PreviousRoundCard/Body.tsx","views/Lottery/components/AllHistoryCard/index.tsx","views/Lottery/components/HowToPlay.tsx","views/Lottery/hooks/useShowMoreUserRounds.ts","views/Lottery/index.tsx","views/Lottery/pageSectionStyles.tsx","../node_modules/react-countup/build/index.js","../node_modules/countup.js/dist/countUp.min.js"],"names":["sharedStyles","theme","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","styled","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","div","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","getPadding","ChildrenWrapper","Container","mediaQueries","sm","lg","PageSection","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props","useGetCurrentLotteryId","useSelector","state","lottery","currentLotteryId","useGetUserLotteriesGraphData","userLotteryData","useGetLotteriesGraphData","lotteriesData","useLottery","currentRound","processedCurrentRound","useProcessLotteryResponse","console","log","isTransitioning","maxNumberTicketsPerBuyOrClaimAsString","maxNumberTicketsPerBuyOrClaim","useMemo","BigNumber","useGetNextLotteryEvent","endTime","status","t","useTranslation","useState","nextEventTime","preCountdownText","postCountdownText","nextEvent","setNextEvent","useEffect","LotteryStatus","OPEN","CLOSE","CLAIMABLE","useStatusTransitions","account","useWeb3React","dispatch","useAppDispatch","previousStatus","usePreviousValue","fetchPublicLotteries","fetchUserLotteries","fetchCurrentLotteryId","interval","setInterval","a","clearInterval","useCallWithGasPrice","gasPrice","useGasPrice","callWithGasPrice","useCallback","contract","methodName","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","tx","Balance","value","color","decimals","isDisabled","unit","prefix","onClick","previousValue","useRef","current","start","end","suffix","duration","separator","lotteryAddress","getLotteryV2Address","fetchCakeRewardsForTickets","winningTickets","calls","map","winningTicket","roundId","rewardBracket","name","address","params","multicallv2","lotteryV2Abi","cakeRewards","cakeTotal","reduce","accum","cakeReward","plus","toString","BIG_ZERO","ticketsWithUnclaimedRewards","error","getRewardBracketByNumber","ticketNumber","finalNumber","ticketNumAsArray","split","reverse","winningNumsAsArray","matchingNumbers","length","push","getWinningTickets","roundDataAndUserTickets","userTickets","ticketsWithRewardBrackets","ticket","number","allWinningTickets","filter","unclaimedWinningTickets","parseRetrievedNumber","numberAsArray","splice","join","dateTimeOptions","year","month","day","hour","minute","processLotteryResponse","lotteryData","priceTicketInCakeAsString","priceTicketInCake","discountDivisorAsString","discountDivisor","amountCollectedInCakeAsString","amountCollectedInCake","isLoading","lotteryId","startTime","treasuryFee","firstTicketId","lastTicketId","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","BallTextWrapper","BallText","Text","rotationTransform","ballsMap","pink","viewBox","cx","cy","r","fill","style","mixBlendMode","opacity","fillRule","clipRule","lilac","teal","aqua","green","yellow","BallWithNumber","size","fontSize","BallComponent","alignItems","justifyContent","position","mx","bold","WinningNumbers","rotateText","rotationValues","setRotationValues","numAsArray","random","num","uniqueId","StyledNumberWrapper","cardBorder","radii","default","RewardHighlighter","numberMatches","primary","TicketNumber","localId","flexDirection","mb","digit","_uniqueId","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","ButtonArrangement","estimateGas","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","mul","ethers","from","add","callWithEstimateGas","gasLimit","DEFAULT_GAS_LIMIT","ClaimInnerContainer","onSuccess","roundsToClaim","useToast","toastSuccess","toastError","activeClaimIndex","setActiveClaimIndex","pendingTx","setPendingTx","Math","ceil","toNumber","pendingBatchClaims","setPendingBatchClaims","lotteryContract","useLotteryV2Contract","activeClaimData","cakePriceBusd","usePriceCakeBusd","dollarReward","times","rewardAsBalance","getBalanceAmount","dollarRewardAsBalance","claimTicketsCallData","ticketIds","brackets","shouldBatchRequest","lt","handleProgressToNextClaim","getTicketBatches","requests","maxAsNumber","ticketIdsSlice","slice","bracketsSlice","handleClaim","wait","receipt","Toast","txHash","transactionHash","message","handleBatchClaim","ticketBatches","transactionsToFire","receipts","ticketBatch","claimNum","claimTotal","textAlign","lineHeight","ml","mt","endIcon","spin","StyledModal","ModalContainer","StyledModalHeader","ModalHeader","gradients","cardHeader","BunnyDecoration","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","x","y","ClaimPrizesModal","onDismiss","delay","minWidth","src","alt","p","ClaimPrizesInner","TopBox","dropdown","ScrollBox","TicketSkeleton","PreviousRoundTicketsInner","lotteryInfo","setLotteryInfo","allUserTickets","setAllUserTickets","isFetched","claimData","userWinningTickets","setUserWinningTickets","useTheme","totalTickets","rounds","find","userRound","useModal","onPresentClaimModal","TooltipComponent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","addWinningTicketInfoToAllTickets","_allTickets","_allWinningTickets","winningTicketEquivalent","fetchUserTicketsForOneRound","fetchLottery","processedLotteryData","allTicketsWithWinningTicketInfo","ticketsSortedByWinners","sort","ticketA","ticketB","rewardBracket1","undefined","fetchData","textTransform","my","mr","borderTop","ref","getFooter","initialState","approvalState","confirmState","reducer","actions","type","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","noop","onApproveSuccess","useReducer","handlePreApprove","then","result","isApproving","isApproved","isConfirming","isConfirmed","hasApproveFailed","hasConfirmFailed","handleApprove","handleConfirm","BuyingStage","StyledApproveConfirmButtonRow","md","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","disabled","StyledButton","NumTicketsToBuyButton","scale","variant","InputsContainer","isDuplicate","focused","DigitInput","input","TicketContainer","duplicateWith","updateTicket","setFocused","containerRef","digit1","digit2","digit3","digit4","digit5","digit6","digitRefs","scrollInputIntoView","scrollIntoView","block","behavior","onPasteHandler","preventDefault","pasteContent","clipboardData","getData","test","filler","onFocusHandler","onBlurHandler","onChangeHandler","event","digitId","currentKey","parseInt","key","includes","newNumbers","numbers","nextDigitId","nextInput","focus","prevDigitId","onKeyDown","placeholder","onChange","onFocus","onBlur","onPaste","inputMode","Modal","ScrollableContainer","EditNumbersModal","totalCost","randomize","tickets","allComplete","title","headerBackground","onBack","TicketInput","m","generateTicketNumbers","numberOfTickets","userCurrentTickets","minNumber","maxNumber","existingTicketNumbers","generatedTicketNumbers","count","randomNumber","ticketsToBuy","getInitialState","amount","randomTicketsAsStringArray","_","isComplete","action","payload","ticketId","newDuplicates","forEach","prevTicketId","dupsToUpdate","indexToRemove","findIndex","duplicate","updatedTicket","every","ShortcutButtonsWrapper","isVisible","BuyTicketsModal","setTicketsToBuy","discountValue","setDiscountValue","setTotalCost","ticketCostBeforeDiscount","setTicketCostBeforeDiscount","BUY","buyingStage","setBuyingStage","maxPossibleTicketPurchase","setMaxPossibleTicketPurchase","maxTicketPurchaseExceeded","setMaxTicketPurchaseExceeded","userNotEnoughCake","setUserNotEnoughCake","cakeContract","useCake","useTokenBalance","tokens","cake","userCake","balance","fetchStatus","stringifiedUserCake","toJSON","memoisedUserCake","hasFetchedBalance","FetchStatus","SUCCESS","userCakeDisplayBalance","getFullDisplayBalance","limitNumberByMaxTicketsPerBuy","gt","getTicketCostAfterDiscount","numberTickets","minus","getMaxTicketBuyWithDiscount","costAfterDiscount","ticketsBoughtWithDiscount","overallTicketBuy","validateInput","inputNumber","limitedNumberTickets","eq","maxPurchase","maxBalancePurchase","limitedMaxPurchase","maxPlusDiscountTickets","secondTicketDiscountBuy","getMaxPossiblePurchase","numberOfTicketsToBuy","costBeforeDiscount","discountBeingApplied","getNumTicketsByPercentage","percentage","percentageOfMaxTickets","floor","tenPercentOfBalance","twentyFivePercentOfBalance","fiftyPercentOfBalance","oneHundredPercentOfBalance","handleNumberButtonClick","toFixed","reversedTicket","unshift","useTicketsReducer","getTicketsForPurchase","allowance","response","currentAllowance","ethersToBigNumber","constants","MaxUint256","ticketsForPurchase","fetchUserTicketsAndLotteries","disableBuying","lte","EDIT","isWarning","onUserInput","inputAsInt","inputAsBN","currencyValue","maxTickets","display","percentageAsBn","isNaN","percentageDiscount","pt","SEQUENTIAL","ConnectWalletButton","BuyTicketsButton","onPresentBuyTicketsModal","marginTop","CurrentRoundTicketsInner","ticketBuyIsDisabled","ViewTicketsModal","roundStatus","isPreviousRound","toLowerCase","StepContainer","StyledCard","card","Card","H","h2","T","Left","Right","Flexx","Foot","CardFooter","NextDrawCard","endTimeMs","endDate","Date","userTicketCount","totalParticipants","setTotalParticipants","ticketsSold","setTicketsSold","totalSales","setTotalSales","eligibleForFeeTicket","setEligibleForFeeTicket","isApprovalRequired","setApprovalRequired","tokenContract","useERC20","claimTicket","handleTicketBuy","handleApproval","renderBuyOfApprovalButton","noOfTickets","maxWidth","loadContractData","getCurrentRound","_currentRound","getStats","currentStats","_numTotalTickets","_numParticipants","getBalanceNumber","_sales","_hex","isEligibleForFeeTickets","_isEliglibleForFreeTickets","approval","previousRounds","stats","preTotalTickets","preSales","preNumOfParticipants","pre1stWinner","_firstWinner","pre2ndWinner","_secondWinner","roundNumber","sales","numOfParticipants","firstWinner","secondWinner","onPreviousRounds","PENDING","Boolean","toLocaleString","marginLeft","fontWeight","StyledInput","Input","StyledIconButton","IconButton","textDisabled","RoundSwitcher","selectedRoundId","mostRecentRound","handleInputChange","handleArrowButtonPress","selectedRoundIdAsInt","pattern","currentTarget","validity","valid","StyledCardBody","CardBody","Grid","StyledCardRibbon","CardRibbon","xs","W1","Heading","W2","Mobile","PC","Flexu","PreviousRoundCardBody","lotteryNodeData","userDataForRound","userLotteryRound","useMatchBreakpoints","currentLotteryIdAsInt","isLg","isXl","isXxl","isLatestRound","totalTicketNumber","text","StyledCardHeader","CardHeader","AllHistoryCard","latestRoundId","setLatestRoundId","setSelectedRoundId","selectedLotteryNodeData","setSelectedLotteryNodeData","target","targetRound","_selectedRoundId","isFound","item","Divider","ul","textSubtle","StyledStepCard","StepCardInner","StepCard","label","subtitle","Div","Link","GappedFlex","HowToPlay","steps","flex","useShowMoreUserRounds","MAX_USER_LOTTERIES_REQUEST_SIZE","numUserRoundsRequested","setNumUserRoundsRequested","handleShowMoreUserRounds","fetchAdditionalUserLotteries","skip","LotteryPage","Lottery","fastRefresh","useRefresh","fetchCurrentLottery","useFetchLottery","endTimeAsInt","useShowMoreUserHistory","previousRound","setPreviousRound","margin","Object","defineProperty","exports","PropTypes","require","React","warning","CountUp$1","_interopDefaultLegacy","PropTypes__default","React__default","warning__default","CountUp__default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","descriptor","configurable","writable","obj","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","prototype","valueOf","_isNativeReflectConstruct","Super","NewTarget","this","constructor","_slicedToArray","arr","_arrayWithHoles","_i","_s","_arr","_n","_d","_iterableToArrayLimit","minLen","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","len","arr2","createCountUpInstance","el","decimal","easingFn","formattingFn","useEasing","useGrouping","CountUp","_Component","subClass","superClass","create","_inherits","protoProps","staticProps","_super","_this","_len","args","_key","concat","updatedProps","_this$props","redraw","className","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","reset","restart","update","onPauseResume","pauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props2","onEnd","onStart","run","timeoutId","setTimeout","newEnd","_assertThisInitialize4","onUpdate","createRef","_this$props3","createInstance","nextProps","checkProps","prevProps","_this$props4","preserveValue","clearTimeout","_this$props5","countUpRef","createElement","Component","string","func","isRequired","bool","startOnMount","MOCK_ELEMENT","innerHTML","useCountUp","_props","defaultProps","_useState2","setCount","timerRef","getCountUp","countUp","newCountUp","formattingFnRef","options","define","abs","l","numerals","replace","pow","u","version","hasOwnProperty","c","window","requestAnimationFrame","cancelAnimationFrame","getTime","max","initialize","initialized","document","getElementById","startVal","Number","endVal","dec","countDown","frameVal","printValue","tagName","textContent","timestamp","remaining","round","rAF","callback","paused"],"mappings":"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","file":"static/js/5.d829dba7.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  console.log(\"processedCurrentRound\",processedCurrentRound,currentRound)\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","import { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useEffect, useState } from 'react'\n\ninterface LotteryEvent {\n  nextEventTime: number\n  postCountdownText?: string\n  preCountdownText?: string\n}\n\nconst useGetNextLotteryEvent = (endTime: number, status: LotteryStatus): LotteryEvent => {\n  const { t } = useTranslation()\n  const vrfRequestTime = 180 // 3 mins\n  const secondsBetweenRounds = 300 // 5 mins\n  const transactionResolvingBuffer = 30 // Delay countdown by 30s to ensure contract transactions have been calculated and broadcast\n  const [nextEvent, setNextEvent] = useState({ nextEventTime: null, preCountdownText: null, postCountdownText: null })\n\n  useEffect(() => {\n    // Current lottery is active\n    if (status === LotteryStatus.OPEN) {\n      setNextEvent({\n        nextEventTime: endTime + transactionResolvingBuffer,\n        preCountdownText: null,\n        postCountdownText: t('until the draw'),\n      })\n    }\n    // Current lottery has finished but not yet claimable\n    if (status === LotteryStatus.CLOSE) {\n      setNextEvent({\n        nextEventTime: endTime + transactionResolvingBuffer + vrfRequestTime,\n        preCountdownText: t('Winners announced in'),\n        postCountdownText: null,\n      })\n    }\n    // Current lottery claimable. Next lottery has not yet started\n    if (status === LotteryStatus.CLAIMABLE) {\n      setNextEvent({\n        nextEventTime: endTime + transactionResolvingBuffer + secondsBetweenRounds,\n        preCountdownText: t('Tickets on sale in'),\n        postCountdownText: null,\n      })\n    }\n  }, [status, endTime, t])\n\n  return nextEvent\n}\n\nexport default useGetNextLotteryEvent\n","import { useWeb3React } from '@web3-react/core'\nimport { LotteryStatus } from 'config/constants/types'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchPublicLotteries, fetchCurrentLotteryId, fetchUserLotteries } from 'state/lottery'\n\nconst useStatusTransitions = () => {\n  const {\n    currentLotteryId,\n    isTransitioning,\n    currentRound: { status },\n  } = useLottery()\n\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const previousStatus = usePreviousValue(status)\n\n  useEffect(() => {\n    // Only run if there is a status state change\n    if (previousStatus !== status && currentLotteryId) {\n      // Current lottery transitions from CLOSE > CLAIMABLE\n      if (previousStatus === LotteryStatus.CLOSE && status === LotteryStatus.CLAIMABLE) {\n        dispatch(fetchPublicLotteries({ currentLotteryId }))\n        if (account) {\n          dispatch(fetchUserLotteries({ account, currentLotteryId }))\n        }\n      }\n      // Previous lottery to new lottery. From CLAIMABLE (previous round) > OPEN (new round)\n      if (previousStatus === LotteryStatus.CLAIMABLE && status === LotteryStatus.OPEN) {\n        dispatch(fetchPublicLotteries({ currentLotteryId }))\n        if (account) {\n          dispatch(fetchUserLotteries({ account, currentLotteryId }))\n        }\n      }\n    }\n  }, [currentLotteryId, status, previousStatus, account, dispatch])\n\n  useEffect(() => {\n    // Current lottery is CLAIMABLE and the lottery is transitioning to a NEW round - fetch current lottery ID every 10s.\n    // The isTransitioning condition will no longer be true when fetchCurrentLotteryId returns the next lottery ID\n    if (previousStatus === LotteryStatus.CLAIMABLE && status === LotteryStatus.CLAIMABLE && isTransitioning) {\n      dispatch(fetchCurrentLotteryId())\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      const interval = setInterval(async () => {\n        dispatch(fetchCurrentLotteryId())\n        dispatch(fetchPublicLotteries({ currentLotteryId }))\n      }, 10000)\n      return () => clearInterval(interval)\n    }\n    return () => null\n  }, [status, previousStatus, isTransitioning, currentLotteryId, dispatch])\n}\n\nexport default useStatusTransitions\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryRoundGraphEntity } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { NUM_ROUNDS_TO_CHECK_FOR_REWARDS } from 'config/constants/lottery'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\nimport { MAX_LOTTERIES_REQUEST_SIZE } from './getLotteriesData'\n\ninterface RoundDataAndUserTickets {\n  roundId: string\n  userTickets: LotteryTicket[]\n  finalNumber: string\n}\n\nconst lotteryAddress = getLotteryV2Address()\n\nconst fetchCakeRewardsForTickets = async (\n  winningTickets: LotteryTicket[],\n): Promise<{ ticketsWithUnclaimedRewards: LotteryTicket[]; cakeTotal: BigNumber }> => {\n  const calls = winningTickets.map((winningTicket) => {\n    const { roundId, id, rewardBracket } = winningTicket\n    return {\n      name: 'viewRewardsForTicketId',\n      address: lotteryAddress,\n      params: [roundId, id, rewardBracket],\n    }\n  })\n\n  try {\n    const cakeRewards = await multicallv2(lotteryV2Abi, calls)\n\n    const cakeTotal = cakeRewards.reduce((accum: BigNumber, cakeReward: ethers.BigNumber[]) => {\n      return accum.plus(new BigNumber(cakeReward[0].toString()))\n    }, BIG_ZERO)\n\n    const ticketsWithUnclaimedRewards = winningTickets.map((winningTicket, index) => {\n      return { ...winningTicket, cakeReward: cakeRewards[index] }\n    })\n    return { ticketsWithUnclaimedRewards, cakeTotal }\n  } catch (error) {\n    console.error(error)\n    return { ticketsWithUnclaimedRewards: null, cakeTotal: null }\n  }\n}\n\nconst getRewardBracketByNumber = (ticketNumber: string, finalNumber: string): number => {\n  // Winning numbers are evaluated right-to-left in the smart contract, so we reverse their order for validation here:\n  // i.e. '1123456' should be evaluated as '6543211'\n  const ticketNumAsArray = ticketNumber.split('').reverse()\n  const winningNumsAsArray = finalNumber.split('').reverse()\n  const matchingNumbers = []\n\n  // The number at index 6 in all tickets is 1 and will always match, so finish at index 5\n  for (let index = 0; index < winningNumsAsArray.length - 1; index++) {\n    if (ticketNumAsArray[index] !== winningNumsAsArray[index]) {\n      break\n    }\n    matchingNumbers.push(ticketNumAsArray[index])\n  }\n\n  // Reward brackets refer to indexes, 0 = 1 match, 5 = 6 matches. Deduct 1 from matchingNumbers' length to get the reward bracket\n  const rewardBracket = matchingNumbers.length - 1\n  return rewardBracket\n}\n\nexport const getWinningTickets = async (\n  roundDataAndUserTickets: RoundDataAndUserTickets,\n): Promise<LotteryTicketClaimData> => {\n  const { roundId, userTickets, finalNumber } = roundDataAndUserTickets\n\n  const ticketsWithRewardBrackets = userTickets.map((ticket) => {\n    return {\n      roundId,\n      id: ticket.id,\n      number: ticket.number,\n      status: ticket.status,\n      rewardBracket: getRewardBracketByNumber(ticket.number, finalNumber),\n    }\n  })\n\n  // A rewardBracket of -1 means no matches. 0 and above means there has been a match\n  const allWinningTickets = ticketsWithRewardBrackets.filter((ticket) => {\n    return ticket.rewardBracket >= 0\n  })\n\n  // If ticket.status is true, the ticket has already been claimed\n  const unclaimedWinningTickets = allWinningTickets.filter((ticket) => {\n    return !ticket.status\n  })\n\n  if (unclaimedWinningTickets.length > 0) {\n    const { ticketsWithUnclaimedRewards, cakeTotal } = await fetchCakeRewardsForTickets(unclaimedWinningTickets)\n    return { ticketsWithUnclaimedRewards, allWinningTickets, cakeTotal, roundId }\n  }\n\n  if (allWinningTickets.length > 0) {\n    return { ticketsWithUnclaimedRewards: null, allWinningTickets, cakeTotal: null, roundId }\n  }\n\n  return null\n}\n\nconst getWinningNumbersForRound = (targetRoundId: string, lotteriesData: LotteryRoundGraphEntity[]) => {\n  const targetRound = lotteriesData.find((pastLottery) => pastLottery.id === targetRoundId)\n  return targetRound?.finalNumber\n}\n\nconst fetchUnclaimedUserRewards = async (\n  account: string,\n  userLotteryData: LotteryUserGraphEntity,\n  lotteriesData: LotteryRoundGraphEntity[],\n  currentLotteryId: string,\n): Promise<LotteryTicketClaimData[]> => {\n  const { rounds } = userLotteryData\n\n  // If there is no user round history - return an empty array\n  if (rounds.length === 0) {\n    return []\n  }\n\n  // If the web3 provider account doesn't equal the userLotteryData account, return an empty array - this is effectively a loading state as the user switches accounts\n  if (userLotteryData.account.toLowerCase() !== account.toLowerCase()) {\n    return []\n  }\n\n  // Filter out rounds without subgraph data (i.e. >100 rounds ago)\n  const roundsInRange = rounds.filter((round) => {\n    const lastCheckableRoundId = parseInt(currentLotteryId, 10) - MAX_LOTTERIES_REQUEST_SIZE\n    const roundId = parseInt(round.lotteryId, 10)\n    return roundId >= lastCheckableRoundId\n  })\n\n  // Filter out non-claimable rounds\n  const claimableRounds = roundsInRange.filter((round) => {\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\n  })\n\n  // Rounds with no tickets claimed OR rounds where a user has over 100 tickets, could have prizes\n  const roundsWithPossibleWinnings = claimableRounds.filter((round) => {\n    return !round.claimed || parseInt(round.totalTickets, 10) > 100\n  })\n\n  // Check the X  most recent rounds, where X is NUM_ROUNDS_TO_CHECK_FOR_REWARDS\n  const roundsToCheck = roundsWithPossibleWinnings.slice(0, NUM_ROUNDS_TO_CHECK_FOR_REWARDS)\n\n  if (roundsToCheck.length > 0) {\n    const idsToCheck = roundsToCheck.map((round) => round.lotteryId)\n    const userTicketData = await fetchUserTicketsForMultipleRounds(idsToCheck, account)\n    const roundsWithTickets = userTicketData.filter((roundData) => roundData?.userTickets?.length > 0)\n\n    const roundDataAndWinningTickets = roundsWithTickets.map((roundData) => {\n      return { ...roundData, finalNumber: getWinningNumbersForRound(roundData.roundId, lotteriesData) }\n    })\n\n    const winningTicketsForPastRounds = await Promise.all(\n      roundDataAndWinningTickets.map((roundData) => getWinningTickets(roundData)),\n    )\n\n    // Filter out null values (returned when no winning tickets found for past round)\n    const roundsWithWinningTickets = winningTicketsForPastRounds.filter(\n      (winningTicketData) => winningTicketData !== null,\n    )\n\n    // Filter to only rounds with unclaimed tickets\n    const roundsWithUnclaimedWinningTickets = roundsWithWinningTickets.filter(\n      (winningTicketData) => winningTicketData.ticketsWithUnclaimedRewards,\n    )\n\n    return roundsWithUnclaimedWinningTickets\n  }\n  // All rounds claimed, return empty array\n  return []\n}\n\nexport default fetchUnclaimedUserRewards\n","import BigNumber from 'bignumber.js'\nimport { LotteryResponse, LotteryRound, LotteryRoundUserTickets } from 'state/types'\n\n/**\n * Remove the '1' and reverse the digits in a lottery number retrieved from the smart contract\n */\nexport const parseRetrievedNumber = (number: string): string => {\n  const numberAsArray = number.split('')\n  numberAsArray.splice(0, 1)\n  numberAsArray.reverse()\n  return numberAsArray.join('')\n}\n\nexport const getDrawnDate = (endTime: string) => {\n  const endTimeInMs = parseInt(endTime, 10) * 1000\n  const endTimeAsDate = new Date(endTimeInMs)\n  return endTimeAsDate.toLocaleDateString(undefined, dateTimeOptions)\n}\n\nexport const dateOptions: Intl.DateTimeFormatOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n}\n\nexport const timeOptions: Intl.DateTimeFormatOptions = {\n  hour: 'numeric',\n  minute: 'numeric',\n}\n\nexport const dateTimeOptions: Intl.DateTimeFormatOptions = {\n  ...dateOptions,\n  ...timeOptions,\n}\n\nexport const processLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = new BigNumber(discountDivisorAsString)\n  const priceTicketInCake = new BigNumber(priceTicketInCakeAsString)\n  const amountCollectedInCake = new BigNumber(amountCollectedInCakeAsString)\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Svg, SvgProps, Text, Flex } from '@pancakeswap/uikit'\n\nexport const PinkBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#D750B2\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const LilacBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#A881FC\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const TealBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#1FC7D4\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const AquaBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#31D0AA\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const GreenBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#93D45A\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const YellowBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#FFC43C\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13245C28.9191 8.87189 28.5505 17.2575 23.2373 22.5707C17.528 28.28 8.27148 28.28 2.56223 22.5707C2.2825 22.291 2.01648 22.0028 1.76416 21.7068C4.02814 27.3487 9.54881 31.3327 16 31.3327C24.4683 31.3327 31.3332 24.4678 31.3332 15.9995C31.3332 10.6079 28.5504 5.86622 24.3428 3.13245Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7714 4.18262C30.6309 10.2119 30.2608 19.061 24.661 24.6608C19.0616 30.2602 10.2134 30.6307 4.18408 25.7722C6.99655 29.1689 11.2456 31.3329 16.0001 31.3329C24.4685 31.3329 31.3334 24.468 31.3334 15.9997C31.3334 11.2446 29.1689 6.99508 25.7714 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10087 9.51443C3.77283 5.93689 6.78541 3.11142 10.4922 1.68435C10.5461 1.73247 10.5988 1.78231 10.6504 1.83387C12.4839 3.6674 10.912 5.74432 8.66157 7.99477C6.41112 10.2452 4.33429 11.817 2.50076 9.98347C2.3535 9.83621 2.22025 9.67943 2.10087 9.51443Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const BallTextWrapper = styled.div`\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n`\n\nexport const BallText = styled(Text)<{ rotationTransform?: number }>`\n  color: #000000;\n  text-shadow: -0.75px -0.75px 0 white, 0.75px -0.75px 0 white, -0.75px 0.75px 0 white, 0.75px 0.75px 0 white;\n  transform: rotate(${({ rotationTransform }) => rotationTransform || 0}deg);\n`\n\nexport type BallColor = 'pink' | 'lilac' | 'teal' | 'aqua' | 'green' | 'yellow'\n\ninterface BallWithNumberProps {\n  color: BallColor\n  number: string\n  size?: string\n  fontSize?: string\n  rotationTransform?: number\n}\n\nconst ballsMap = {\n  pink: PinkBall,\n  lilac: LilacBall,\n  teal: TealBall,\n  aqua: AquaBall,\n  green: GreenBall,\n  yellow: YellowBall,\n}\n\nexport const BallWithNumber: React.FC<BallWithNumberProps> = ({ color, number, size, fontSize, rotationTransform }) => {\n  const BallComponent = ballsMap[color]\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" position=\"relative\" mx=\"2px\">\n   \n      <BallComponent width={size ?? '32px'} height={size ?? '32px'} />\n      <BallTextWrapper>\n        <BallText rotationTransform={rotationTransform} bold fontSize={fontSize ?? '16px'}>\n          {number}\n        </BallText>\n      </BallTextWrapper>\n    </Flex>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Flex, FlexProps } from '@pancakeswap/uikit'\nimport { random } from 'lodash'\nimport uniqueId from 'lodash/uniqueId'\nimport { parseRetrievedNumber } from '../helpers'\nimport { BallWithNumber } from '../svgs'\nimport { BallColor } from '../svgs/Balls'\n\ninterface WinningNumbersProps extends FlexProps {\n  number: string\n  size?: string\n  fontSize?: string\n  rotateText?: boolean\n}\n\nconst WinningNumbers: React.FC<WinningNumbersProps> = ({\n  number,\n  size = '32px',\n  fontSize = '16px',\n  rotateText,\n  ...containerProps\n}) => {\n  const [rotationValues, setRotationValues] = useState([])\n  const reversedNumber = parseRetrievedNumber(number)\n  const numAsArray = reversedNumber.split('')\n  const colors: BallColor[] = ['pink', 'lilac', 'teal', 'aqua', 'green', 'yellow']\n\n  useEffect(() => {\n    if (rotateText && numAsArray && rotationValues.length === 0) {\n      setRotationValues(numAsArray.map(() => random(-30, 30)))\n    }\n  }, [rotateText, numAsArray, rotationValues])\n\n  return (\n    <Flex justifyContent=\"space-between\" {...containerProps}>\n      \n      {numAsArray.map((num, index) => {\n        return (\n          <BallWithNumber\n            key={uniqueId()}\n            rotationTransform={rotateText && rotationValues[index]}\n            size={size}\n            fontSize={fontSize}\n            color={colors[index]}\n            number={num}\n          />\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default WinningNumbers\n","import React from 'react'\nimport { LotteryTicket } from 'config/constants/types'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport _uniqueId from 'lodash/uniqueId'\nimport { parseRetrievedNumber } from '../helpers'\n\nconst StyledNumberWrapper = styled(Flex)`\n  position: relative;\n  padding: 4px 16px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.background};\n  justify-content: space-between;\n`\n\nconst RewardHighlighter = styled.div<{ numberMatches: number }>`\n  z-index: 1;\n  width: ${({ numberMatches }) => `${numberMatches < 6 ? numberMatches * 17.66 : 100}%`};\n  height: 34px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  top: 0;\n  left: 0;\n  position: absolute;\n  border: 2px ${({ theme }) => theme.colors.primary} solid;\n`\n\ninterface TicketNumberProps extends LotteryTicket {\n  localId?: number\n  rewardBracket?: number\n}\n\nconst TicketNumber: React.FC<TicketNumberProps> = ({ localId, id, number, rewardBracket }) => {\n  const { t } = useTranslation()\n  const reversedNumber = parseRetrievedNumber(number)\n  const numberAsArray = reversedNumber.split('')\n  const numberMatches = rewardBracket + 1\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"12px\">\n      <Flex justifyContent=\"space-between\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          #{localId || id}\n        </Text>\n        {rewardBracket >= 0 && (\n          <Text fontSize=\"12px\">\n            {t('Matched first')} {numberMatches}\n          </Text>\n        )}\n      </Flex>\n      <StyledNumberWrapper>\n        {rewardBracket >= 0 && <RewardHighlighter numberMatches={numberMatches} />}\n        {numberAsArray.map((digit) => (\n          <Text key={`${localId || id}-${digit}-${_uniqueId()}`} fontSize=\"16px\">\n            {digit}\n          </Text>\n        ))}\n      </StyledNumberWrapper>\n    </Flex>\n  )\n}\n\nexport default TicketNumber\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, Button, Text, AutoRenewIcon, PresentWonIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { callWithEstimateGas } from 'utils/calls'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserLotteries } from 'state/lottery'\nimport { useGasPrice } from 'state/user/hooks'\nimport { useAppDispatch } from 'state'\nimport Balance from 'components/Balance'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useToast from 'hooks/useToast'\nimport { useLotteryV2Contract } from 'hooks/useContract'\n\ninterface ClaimInnerProps {\n  roundsToClaim: LotteryTicketClaimData[]\n  onSuccess?: () => void\n}\n\nconst ClaimInnerContainer: React.FC<ClaimInnerProps> = ({ onSuccess, roundsToClaim }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { maxNumberTicketsPerBuyOrClaim, currentLotteryId } = useLottery()\n  const gasPrice = useGasPrice()\n  const { toastSuccess, toastError } = useToast()\n  const [activeClaimIndex, setActiveClaimIndex] = useState(0)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [pendingBatchClaims, setPendingBatchClaims] = useState(\n    Math.ceil(\n      roundsToClaim[activeClaimIndex].ticketsWithUnclaimedRewards.length / maxNumberTicketsPerBuyOrClaim.toNumber(),\n    ),\n  )\n  const lotteryContract = useLotteryV2Contract()\n  const activeClaimData = roundsToClaim[activeClaimIndex]\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeReward = activeClaimData.cakeTotal\n  const dollarReward = cakeReward.times(cakePriceBusd)\n  const rewardAsBalance = getBalanceAmount(cakeReward).toNumber()\n  const dollarRewardAsBalance = getBalanceAmount(dollarReward).toNumber()\n\n  const parseUnclaimedTicketDataForClaimCall = (ticketsWithUnclaimedRewards: LotteryTicket[], lotteryId: string) => {\n    const ticketIds = ticketsWithUnclaimedRewards.map((ticket) => {\n      return ticket.id\n    })\n    const brackets = ticketsWithUnclaimedRewards.map((ticket) => {\n      return ticket.rewardBracket\n    })\n    return { lotteryId, ticketIds, brackets }\n  }\n\n  const claimTicketsCallData = parseUnclaimedTicketDataForClaimCall(\n    activeClaimData.ticketsWithUnclaimedRewards,\n    activeClaimData.roundId,\n  )\n\n  const shouldBatchRequest = maxNumberTicketsPerBuyOrClaim.lt(claimTicketsCallData.ticketIds.length)\n\n  const handleProgressToNextClaim = () => {\n    if (roundsToClaim.length > activeClaimIndex + 1) {\n      // If there are still rounds to claim, move onto the next claim\n      setActiveClaimIndex(activeClaimIndex + 1)\n      dispatch(fetchUserLotteries({ account, currentLotteryId }))\n    } else {\n      onSuccess()\n    }\n  }\n\n  const getTicketBatches = (ticketIds: string[], brackets: number[]): { ticketIds: string[]; brackets: number[] }[] => {\n    const requests = []\n    const maxAsNumber = maxNumberTicketsPerBuyOrClaim.toNumber()\n\n    for (let i = 0; i < ticketIds.length; i += maxAsNumber) {\n      const ticketIdsSlice = ticketIds.slice(i, maxAsNumber + i)\n      const bracketsSlice = brackets.slice(i, maxAsNumber + i)\n      requests.push({ ticketIds: ticketIdsSlice, brackets: bracketsSlice })\n    }\n\n    return requests\n  }\n\n  const handleClaim = async () => {\n    const { lotteryId, ticketIds, brackets } = claimTicketsCallData\n    setPendingTx(true)\n    try {\n      const tx = await callWithEstimateGas(lotteryContract, 'claimTickets', [lotteryId, ticketIds, brackets], {\n        gasPrice,\n      })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Prizes Collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your CAKE prizes for round %lotteryId% have been sent to your wallet', { lotteryId })}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        handleProgressToNextClaim()\n      }\n    } catch (error) {\n      console.error(error)\n      toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n      setPendingTx(false)\n    }\n  }\n\n  const handleBatchClaim = async () => {\n    const { lotteryId, ticketIds, brackets } = claimTicketsCallData\n    const ticketBatches = getTicketBatches(ticketIds, brackets)\n    const transactionsToFire = ticketBatches.length\n    const receipts = []\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const ticketBatch of ticketBatches) {\n      try {\n        /* eslint-disable no-await-in-loop */\n        const tx = await callWithEstimateGas(\n          lotteryContract,\n          'claimTickets',\n          [lotteryId, ticketBatch.ticketIds, ticketBatch.brackets],\n          { gasPrice },\n        )\n        const receipt = await tx.wait()\n        /* eslint-enable no-await-in-loop */\n        if (receipt.status) {\n          // One transaction within batch has succeeded\n          receipts.push(receipt)\n          setPendingBatchClaims(transactionsToFire - receipts.length)\n\n          // More transactions are to be done within the batch. Issue toast to give user feedback.\n          if (receipts.length !== transactionsToFire) {\n            toastSuccess(\n              t('Prizes Collected!'),\n              <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n                {t(\n                  'Claim %claimNum% of %claimTotal% for round %lotteryId% was successful. Please confirm the next transaction',\n                  {\n                    claimNum: receipts.length,\n                    claimTotal: transactionsToFire,\n                    lotteryId,\n                  },\n                )}\n              </ToastDescriptionWithTx>,\n            )\n          }\n        }\n      } catch (error) {\n        console.error(error)\n        setPendingTx(false)\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        break\n      }\n    }\n\n    // Batch is finished\n    if (receipts.length === transactionsToFire) {\n      setPendingTx(false)\n      toastSuccess(\n        t('Prizes Collected!'),\n        t('Your CAKE prizes for round %lotteryId% have been sent to your wallet', { lotteryId }),\n      )\n      handleProgressToNextClaim()\n    }\n  }\n\n  return (\n    <>\n      <Flex flexDirection=\"column\">\n        <Text mb=\"4px\" textAlign={['center', null, 'left']}>\n          {t('You won')}\n        </Text>\n        <Flex\n          alignItems={['flex-start', null, 'center']}\n          justifyContent={['flex-start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <Balance\n            textAlign={['center', null, 'left']}\n            lineHeight=\"1.1\"\n            value={rewardAsBalance}\n            fontSize=\"44px\"\n            bold\n            color=\"secondary\"\n            unit=\" CAKE!\"\n          />\n          <PresentWonIcon ml={['0', null, '12px']} width=\"64px\" />\n        </Flex>\n        <Balance\n          mt={['12px', null, '0']}\n          textAlign={['center', null, 'left']}\n          value={dollarRewardAsBalance}\n          fontSize=\"12px\"\n          color=\"textSubtle\"\n          unit=\" USD\"\n          prefix=\"~\"\n        />\n      </Flex>\n\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Text mt=\"8px\" fontSize=\"12px\" color=\"textSubtle\">\n          {t('Round')} #{activeClaimData.roundId}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          mt=\"20px\"\n          width=\"100%\"\n          onClick={() => (shouldBatchRequest ? handleBatchClaim() : handleClaim())}\n        >\n          {pendingTx ? t('Claiming') : t('Claim')} {pendingBatchClaims > 1 ? `(${pendingBatchClaims})` : ''}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default ClaimInnerContainer\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Heading, ModalContainer, ModalHeader, ModalTitle, ModalBody, ModalCloseButton } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { delay } from 'lodash'\nimport confetti from 'canvas-confetti'\nimport { LotteryTicketClaimData } from 'config/constants/types'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserLotteries } from 'state/lottery'\nimport ClaimPrizesInner from './ClaimPrizesInner'\n\nconst StyledModal = styled(ModalContainer)`\n  position: relative;\n  overflow: visible;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 380px;\n  }\n`\n\nconst StyledModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\n  border-top-right-radius: 32px;\n  border-top-left-radius: 32px;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface ClaimPrizesModalModalProps {\n  roundsToClaim: LotteryTicketClaimData[]\n  onDismiss?: () => void\n}\n\nconst ClaimPrizesModal: React.FC<ClaimPrizesModalModalProps> = ({ onDismiss, roundsToClaim }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { currentLotteryId } = useLottery()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <StyledModal minWidth=\"280px\">\n      <BunnyDecoration>\n        <img src=\"/images/decorations/prize-bunny.png\" alt=\"bunny decoration\" height=\"124px\" width=\"168px\" />\n      </BunnyDecoration>\n      <StyledModalHeader>\n        <ModalTitle>\n          <Heading>{t('Collect Winnings')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </StyledModalHeader>\n      <ModalBody p=\"24px\">\n        <ClaimPrizesInner\n          onSuccess={() => {\n            dispatch(fetchUserLotteries({ account, currentLotteryId }))\n            onDismiss()\n          }}\n          roundsToClaim={roundsToClaim}\n        />\n      </ModalBody>\n    </StyledModal>\n  )\n}\n\nexport default ClaimPrizesModal\n","import React, { useEffect, useState } from 'react'\nimport {\n  Box,\n  Text,\n  Flex,\n  Button,\n  Skeleton,\n  Ticket,\n  PresentWonIcon,\n  TooltipText,\n  InfoIcon,\n  useTooltip,\n  useModal,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { fetchLottery } from 'state/lottery/helpers'\nimport { getWinningTickets } from 'state/lottery/fetchUnclaimedUserRewards'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteryGraphRoundById } from 'state/lottery/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport WinningNumbers from '../WinningNumbers'\nimport { processLotteryResponse } from '../../helpers'\nimport TicketNumber from '../TicketNumber'\nimport ClaimPrizesModal from '../ClaimPrizesModal'\n\nconst TopBox = styled(Flex)`\n  flex-direction: column;\n  margin: -24px;\n  padding: 24px;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst ScrollBox = styled(Box)`\n  margin-right: -20px;\n  padding-right: 24px;\n  max-height: 300px;\n  overflow-y: scroll;\n  margin-top: 24px;\n`\n\nconst TicketSkeleton = () => {\n  return (\n    <>\n      <Skeleton width=\"32px\" height=\"12px\" mt=\"2px\" mb=\"4px\" />\n      <Skeleton width=\"100%\" height=\"34px\" mb=\"12px\" />\n    </>\n  )\n}\n\nconst PreviousRoundTicketsInner: React.FC<{ roundId: string }> = ({ roundId }) => {\n  const [lotteryInfo, setLotteryInfo] = useState<LotteryRound>(null)\n  const [allUserTickets, setAllUserTickets] = useState<LotteryTicket[]>(null)\n  const [userWinningTickets, setUserWinningTickets] = useState<{\n    allWinningTickets: LotteryTicket[]\n    ticketsWithUnclaimedRewards: LotteryTicket[]\n    isFetched: boolean\n    claimData: LotteryTicketClaimData\n  }>({ allWinningTickets: null, ticketsWithUnclaimedRewards: null, isFetched: false, claimData: null })\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { totalTickets } = useGetUserLotteryGraphRoundById(roundId)\n  const [onPresentClaimModal] = useModal(<ClaimPrizesModal roundsToClaim={[userWinningTickets.claimData]} />, false)\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">\n        {t('Tickets must match the winning number in the exact same order, starting from the first digit.')}\n      </Text>\n      <Text mb=\"16px\">{t('If the winning number is “123456”:')}</Text>\n      <Text mb=\"4px\">{t('“120000” matches the first 2 digits.')}</Text>\n      <Text>\n        {t('“000006” matches the last digit, but since the first five digits are wrong, it doesn’t win any prizes.')}\n      </Text>\n    </>\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  useEffect(() => {\n    const addWinningTicketInfoToAllTickets = (\n      _allTickets: LotteryTicket[],\n      _allWinningTickets: LotteryTicket[],\n    ): LotteryTicket[] => {\n      const allTicketsWithWinningTickets = _allTickets.map((ticket) => {\n        const winningTicketEquivalent = _allWinningTickets.find((winningTicket) => winningTicket.id === ticket.id)\n        if (winningTicketEquivalent) {\n          return winningTicketEquivalent\n        }\n        return ticket\n      })\n      return allTicketsWithWinningTickets\n    }\n\n    const sortTicketsByWinningBracket = (tickets) => {\n      return tickets.sort((ticketA, ticketB) => {\n        const rewardBracket1 = ticketA.rewardBracket === undefined ? 0 : ticketA.rewardBracket + 1\n        const rewardBracket2 = ticketB.rewardBracket === undefined ? 0 : ticketB.rewardBracket + 1\n        return rewardBracket2 - rewardBracket1\n      })\n    }\n\n    const fetchData = async () => {\n      const userTickets = await fetchUserTicketsForOneRound(account, roundId)\n      const lotteryData = await fetchLottery(roundId)\n      const processedLotteryData = processLotteryResponse(lotteryData)\n      const winningTickets = await getWinningTickets({\n        roundId,\n        userTickets,\n        finalNumber: processedLotteryData.finalNumber.toString(),\n      })\n\n      setUserWinningTickets({\n        isFetched: true,\n        allWinningTickets: winningTickets?.allWinningTickets,\n        ticketsWithUnclaimedRewards: winningTickets?.ticketsWithUnclaimedRewards,\n        claimData: winningTickets,\n      })\n      setLotteryInfo(processedLotteryData)\n\n      // If the user has some winning tickets - modify the userTickets response to include that data\n      if (winningTickets?.allWinningTickets) {\n        const allTicketsWithWinningTicketInfo = addWinningTicketInfoToAllTickets(\n          userTickets,\n          winningTickets.allWinningTickets,\n        )\n        const ticketsSortedByWinners = sortTicketsByWinningBracket(allTicketsWithWinningTicketInfo)\n        setAllUserTickets(ticketsSortedByWinners)\n      } else {\n        setAllUserTickets(userTickets)\n      }\n    }\n\n    fetchData()\n  }, [roundId, account, totalTickets])\n\n  const getFooter = () => {\n    if (userWinningTickets?.ticketsWithUnclaimedRewards?.length > 0) {\n      return (\n        <Button onClick={onPresentClaimModal} mt=\"24px\" width=\"100%\">\n          {t('Collect Prizes')}\n        </Button>\n      )\n    }\n    if (!userWinningTickets.allWinningTickets) {\n      return (\n        <div ref={targetRef}>\n          <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\">\n            <InfoIcon height=\"20px\" width=\"20px\" color=\"textSubtle\" mr=\"8px\" />\n            <TooltipText color=\"textSubtle\">{t(\"Why didn't I win?\")}</TooltipText>\n          </Flex>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TopBox>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" mb=\"4px\">\n          {t('Winning number')}\n        </Text>\n        {lotteryInfo?.finalNumber ? (\n          <WinningNumbers number={lotteryInfo.finalNumber.toString()} />\n        ) : (\n          <Skeleton width=\"230px\" height=\"34px\" />\n        )}\n      </TopBox>\n      <ScrollBox>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" my=\"16px\">\n          {t('Your tickets')}\n        </Text>\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Flex>\n            <Ticket width=\"24px\" height=\"24px\" mr=\"8px\" />\n            <Text bold color=\"text\">\n              {t('Total tickets')}:\n            </Text>\n          </Flex>\n          <Text bold color=\"text\">\n            {allUserTickets ? allUserTickets.length : <Skeleton width=\"56px\" height=\"24px\" />}\n          </Text>\n        </Flex>\n        <Flex mb=\"24px\" justifyContent=\"space-between\">\n          <Flex>\n            <PresentWonIcon width=\"24px\" height=\"24px\" mr=\"8px\" />\n            <Text bold color=\"text\">\n              {t('Winning tickets')}:\n            </Text>\n          </Flex>\n          <Text bold color=\"text\">\n            {userWinningTickets.isFetched ? (\n              userWinningTickets?.allWinningTickets?.length || '0'\n            ) : (\n              <Skeleton width=\"40px\" height=\"24px\" />\n            )}\n          </Text>\n        </Flex>\n        {allUserTickets ? (\n          allUserTickets.map((ticket) => {\n            return (\n              <TicketNumber\n                key={ticket.id}\n                id={ticket.id}\n                number={ticket.number}\n                rewardBracket={ticket.rewardBracket}\n                status={ticket.status}\n              />\n            )\n          })\n        ) : (\n          <>\n            <TicketSkeleton />\n            <TicketSkeleton />\n            <TicketSkeleton />\n            <TicketSkeleton />\n          </>\n        )}\n      </ScrollBox>\n      <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} alignItems=\"center\" justifyContent=\"center\">\n        {userWinningTickets.isFetched && getFooter()}\n      </Flex>\n    </>\n  )\n}\n\nexport default PreviousRoundTicketsInner\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    hasApproveFailed: state.approvalState === 'fail',\n    hasConfirmFailed: state.confirmState === 'fail',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async (params = {}) => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm(params)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React, { useEffect, useState, useMemo, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  Modal,\n  Text,\n  Flex,\n  HelpIcon,\n  BalanceInput,\n  Ticket,\n  useTooltip,\n  Skeleton,\n  Button,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { BIG_ZERO, ethersToBigNumber } from 'utils/bigNumber'\nimport { useAppDispatch } from 'state'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserTicketsAndLotteries } from 'state/lottery'\nimport useTheme from 'hooks/useTheme'\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useLotteryV2Contract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useToast from 'hooks/useToast'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\nimport NumTicketsToBuyButton from './NumTicketsToBuyButton'\nimport EditNumbersModal from './EditNumbersModal'\nimport { useTicketsReducer } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`\n\nconst ShortcutButtonsWrapper = styled(Flex)<{ isVisible: boolean }>`\n  justify-content: space-between;\n  margin-top: 8px;\n  margin-bottom: 24px;\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\n`\n\ninterface BuyTicketsModalProps {\n  onDismiss?: () => void\n}\n\nenum BuyingStage {\n  BUY = 'Buy',\n  EDIT = 'Edit',\n}\n\nconst BuyTicketsModal: React.FC<BuyTicketsModalProps> = ({ onDismiss }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const {\n    maxNumberTicketsPerBuyOrClaim,\n    currentLotteryId,\n    currentRound: {\n      priceTicketInCake,\n      discountDivisor,\n      userTickets: { tickets: userCurrentTickets },\n    },\n  } = useLottery()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const [ticketsToBuy, setTicketsToBuy] = useState('')\n  const [discountValue, setDiscountValue] = useState('')\n  const [totalCost, setTotalCost] = useState('')\n  const [ticketCostBeforeDiscount, setTicketCostBeforeDiscount] = useState('')\n  const [buyingStage, setBuyingStage] = useState<BuyingStage>(BuyingStage.BUY)\n  const [maxPossibleTicketPurchase, setMaxPossibleTicketPurchase] = useState(BIG_ZERO)\n  const [maxTicketPurchaseExceeded, setMaxTicketPurchaseExceeded] = useState(false)\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\n  const lotteryContract = useLotteryV2Contract()\n  const cakeContract = useCake()\n  const { toastSuccess } = useToast()\n  const { balance: userCake, fetchStatus } = useTokenBalance(tokens.cake.address)\n  // balance from useTokenBalance causes rerenders in effects as a new BigNumber is instantiated on each render, hence memoising it using the stringified value below.\n  const stringifiedUserCake = userCake.toJSON()\n  const memoisedUserCake = useMemo(() => new BigNumber(stringifiedUserCake), [stringifiedUserCake])\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const hasFetchedBalance = fetchStatus === FetchStatus.SUCCESS\n  const userCakeDisplayBalance = getFullDisplayBalance(userCake, 18, 3)\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">\n        {t(\n          'Buying multiple tickets in a single transaction gives a discount. The discount increases in a linear way, up to the maximum of 100 tickets:',\n        )}\n      </Text>\n      <Text>{t('2 tickets: 0.05%')}</Text>\n      <Text>{t('50 tickets: 2.45%')}</Text>\n      <Text>{t('100 tickets: 4.95%')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  const limitNumberByMaxTicketsPerBuy = useCallback(\n    (number: BigNumber) => {\n      return number.gt(maxNumberTicketsPerBuyOrClaim) ? maxNumberTicketsPerBuyOrClaim : number\n    },\n    [maxNumberTicketsPerBuyOrClaim],\n  )\n\n  const getTicketCostAfterDiscount = useCallback(\n    (numberTickets: BigNumber) => {\n      const totalAfterDiscount = priceTicketInCake\n        .times(numberTickets)\n        .times(discountDivisor.plus(1).minus(numberTickets))\n        .div(discountDivisor)\n      return totalAfterDiscount\n    },\n    [discountDivisor, priceTicketInCake],\n  )\n\n  const getMaxTicketBuyWithDiscount = useCallback(\n    (numberTickets: BigNumber) => {\n      const costAfterDiscount = getTicketCostAfterDiscount(numberTickets)\n      const costBeforeDiscount = priceTicketInCake.times(numberTickets)\n      const discountAmount = costBeforeDiscount.minus(costAfterDiscount)\n      const ticketsBoughtWithDiscount = discountAmount.div(priceTicketInCake)\n      const overallTicketBuy = numberTickets.plus(ticketsBoughtWithDiscount)\n      return { overallTicketBuy, ticketsBoughtWithDiscount }\n    },\n    [getTicketCostAfterDiscount, priceTicketInCake],\n  )\n\n  const validateInput = useCallback(\n    (inputNumber: BigNumber) => {\n      const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputNumber)\n      const cakeCostAfterDiscount = getTicketCostAfterDiscount(limitedNumberTickets)\n\n      if (cakeCostAfterDiscount.gt(userCake)) {\n        setUserNotEnoughCake(true)\n      } else if (limitedNumberTickets.eq(maxNumberTicketsPerBuyOrClaim)) {\n        setMaxTicketPurchaseExceeded(true)\n      } else {\n        setUserNotEnoughCake(false)\n        setMaxTicketPurchaseExceeded(false)\n      }\n    },\n    [limitNumberByMaxTicketsPerBuy, getTicketCostAfterDiscount, maxNumberTicketsPerBuyOrClaim, userCake],\n  )\n\n  useEffect(() => {\n    const getMaxPossiblePurchase = () => {\n      const maxBalancePurchase = memoisedUserCake.div(priceTicketInCake)\n      const limitedMaxPurchase = limitNumberByMaxTicketsPerBuy(maxBalancePurchase)\n      let maxPurchase\n\n      // If the users' max IBG balance purchase is less than the contract limit - factor the discount logic into the max number of tickets they can purchase\n      if (limitedMaxPurchase.lt(maxNumberTicketsPerBuyOrClaim)) {\n        // Get max tickets purchasable with the users' balance, as well as using the discount to buy tickets\n        const { overallTicketBuy: maxPlusDiscountTickets } = getMaxTicketBuyWithDiscount(limitedMaxPurchase)\n\n        // Knowing how many tickets they can buy when counting the discount - plug that total in, and see how much that total will get discounted\n        const { ticketsBoughtWithDiscount: secondTicketDiscountBuy } =\n          getMaxTicketBuyWithDiscount(maxPlusDiscountTickets)\n\n        // Add the additional tickets that can be bought with the discount, to the original max purchase\n        maxPurchase = limitedMaxPurchase.plus(secondTicketDiscountBuy)\n      } else {\n        maxPurchase = limitedMaxPurchase\n      }\n\n      if (hasFetchedBalance && maxPurchase.lt(1)) {\n        setUserNotEnoughCake(true)\n      } else {\n        setUserNotEnoughCake(false)\n      }\n\n      setMaxPossibleTicketPurchase(maxPurchase)\n    }\n    getMaxPossiblePurchase()\n  }, [\n    maxNumberTicketsPerBuyOrClaim,\n    priceTicketInCake,\n    memoisedUserCake,\n    limitNumberByMaxTicketsPerBuy,\n    getTicketCostAfterDiscount,\n    getMaxTicketBuyWithDiscount,\n    hasFetchedBalance,\n  ])\n\n  useEffect(() => {\n    const numberOfTicketsToBuy = new BigNumber(ticketsToBuy)\n    const costAfterDiscount = getTicketCostAfterDiscount(numberOfTicketsToBuy)\n    const costBeforeDiscount = priceTicketInCake.times(numberOfTicketsToBuy)\n    const discountBeingApplied = costBeforeDiscount.minus(costAfterDiscount)\n    setTicketCostBeforeDiscount(costBeforeDiscount.gt(0) ? getFullDisplayBalance(costBeforeDiscount) : '0')\n    setTotalCost(costAfterDiscount.gt(0) ? getFullDisplayBalance(costAfterDiscount) : '0')\n    setDiscountValue(discountBeingApplied.gt(0) ? getFullDisplayBalance(discountBeingApplied, 18, 5) : '0')\n  }, [ticketsToBuy, priceTicketInCake, discountDivisor, getTicketCostAfterDiscount])\n\n  const getNumTicketsByPercentage = (percentage: number): number => {\n    const percentageOfMaxTickets = maxPossibleTicketPurchase.gt(0)\n      ? maxPossibleTicketPurchase.div(new BigNumber(100)).times(new BigNumber(percentage))\n      : BIG_ZERO\n    return Math.floor(percentageOfMaxTickets.toNumber())\n  }\n\n  const tenPercentOfBalance = getNumTicketsByPercentage(10)\n  const twentyFivePercentOfBalance = getNumTicketsByPercentage(25)\n  const fiftyPercentOfBalance = getNumTicketsByPercentage(50)\n  const oneHundredPercentOfBalance = getNumTicketsByPercentage(100)\n\n  const handleInputChange = (input: string) => {\n    // Force input to integer\n    const inputAsInt = parseInt(input, 10)\n    const inputAsBN = new BigNumber(inputAsInt)\n    const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputAsBN)\n    validateInput(inputAsBN)\n    setTicketsToBuy(inputAsInt ? limitedNumberTickets.toString() : '')\n  }\n\n  const handleNumberButtonClick = (number: number) => {\n    setTicketsToBuy(number.toFixed())\n    setUserNotEnoughCake(false)\n    setMaxTicketPurchaseExceeded(false)\n  }\n\n  const [updateTicket, randomize, tickets, allComplete, getTicketsForPurchase] = useTicketsReducer(\n    parseInt(ticketsToBuy, 10),\n    userCurrentTickets,\n  )\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, lotteryContract.address)\n          const currentAllowance = ethersToBigNumber(response)\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [lotteryContract.address, ethers.constants.MaxUint256])\n      },\n      onApproveSuccess: async ({ receipt }) => {\n        toastSuccess(\n          t('Contract enabled - you can now purchase tickets'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n        )\n      },\n      onConfirm: () => {\n        const ticketsForPurchase = getTicketsForPurchase()\n        return callWithGasPrice(lotteryContract, 'buyTickets', [currentLotteryId, ticketsForPurchase])\n      },\n      onSuccess: async ({ receipt }) => {\n        onDismiss()\n        dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n        toastSuccess(t('Lottery tickets purchased!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  const getErrorMessage = () => {\n    if (userNotEnoughCake) return t('Insufficient IBG balance')\n    return t('The maximum number of tickets you can buy in one transaction is %maxTickets%', {\n      maxTickets: maxNumberTicketsPerBuyOrClaim.toString(),\n    })\n  }\n\n  const percentageDiscount = () => {\n    const percentageAsBn = new BigNumber(discountValue).div(new BigNumber(ticketCostBeforeDiscount)).times(100)\n    if (percentageAsBn.isNaN() || percentageAsBn.eq(0)) {\n      return 0\n    }\n    return percentageAsBn.toNumber().toFixed(2)\n  }\n\n  const disableBuying =\n    !isApproved ||\n    isConfirmed ||\n    userNotEnoughCake ||\n    !ticketsToBuy ||\n    new BigNumber(ticketsToBuy).lte(0) ||\n    getTicketsForPurchase().length !== parseInt(ticketsToBuy, 10)\n\n  if (buyingStage === BuyingStage.EDIT) {\n    return (\n      <EditNumbersModal\n        totalCost={totalCost}\n        updateTicket={updateTicket}\n        randomize={randomize}\n        tickets={tickets}\n        allComplete={allComplete}\n        onConfirm={handleConfirm}\n        isConfirming={isConfirming}\n        onDismiss={() => setBuyingStage(BuyingStage.BUY)}\n      />\n    )\n  }\n\n  return (\n    <StyledModal title={t('Buy Tickets')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"textSubtle\">{t('Buy')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Text mr=\"4px\" bold>\n            {t('Tickets')}\n          </Text>\n          <Ticket />\n        </Flex>\n      </Flex>\n      <BalanceInput\n        isWarning={account && (userNotEnoughCake || maxTicketPurchaseExceeded)}\n        placeholder=\"0\"\n        value={ticketsToBuy}\n        onUserInput={handleInputChange}\n        currencyValue={\n          cakePriceBusd.gt(0) &&\n          `~${ticketsToBuy ? getFullDisplayBalance(priceTicketInCake.times(new BigNumber(ticketsToBuy))) : '0.00'} IBG`\n        }\n      />\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\" mt=\"4px\" mb=\"12px\">\n        <Flex justifyContent=\"flex-end\" flexDirection=\"column\">\n          {account && (userNotEnoughCake || maxTicketPurchaseExceeded) && (\n            <Text fontSize=\"12px\" color=\"failure\">\n              {getErrorMessage()}\n            </Text>\n          )}\n          {account && (\n            <Flex justifyContent=\"flex-end\">\n              <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"4px\">\n                IBG {t('Balance')}:\n              </Text>\n              {hasFetchedBalance ? (\n                <Text fontSize=\"12px\" color=\"textSubtle\">\n                  {userCakeDisplayBalance}\n                </Text>\n              ) : (\n                <Skeleton width={50} height={12} />\n              )}\n            </Flex>\n          )}\n        </Flex>\n      </Flex>\n\n      {account && !hasFetchedBalance ? (\n        <Skeleton width=\"100%\" height={20} mt=\"8px\" mb=\"24px\" />\n      ) : (\n        <ShortcutButtonsWrapper isVisible={account && hasFetchedBalance && oneHundredPercentOfBalance >= 1}>\n          {tenPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(tenPercentOfBalance)}>\n              {hasFetchedBalance ? tenPercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {twentyFivePercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(twentyFivePercentOfBalance)}>\n              {hasFetchedBalance ? twentyFivePercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {fiftyPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(fiftyPercentOfBalance)}>\n              {hasFetchedBalance ? fiftyPercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {oneHundredPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(oneHundredPercentOfBalance)}>\n              MAX\n            </NumTicketsToBuyButton>\n          )}\n        </ShortcutButtonsWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {t('Cost')} (IBG)\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {priceTicketInCake && getFullDisplayBalance(priceTicketInCake.times(ticketsToBuy || 0))} IBG\n          </Text>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Flex>\n            <Text display=\"inline\" bold fontSize=\"14px\" mr=\"4px\">\n              {discountValue && totalCost ? percentageDiscount() : 0}%\n            </Text>\n            <Text display=\"inline\" color=\"textSubtle\" fontSize=\"14px\">\n              {t('Bulk discount')}\n            </Text>\n            <Flex alignItems=\"center\" justifyContent=\"center\" ref={targetRef}>\n              <HelpIcon ml=\"4px\" width=\"14px\" height=\"14px\" color=\"textSubtle\" />\n            </Flex>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            ~{discountValue} IBG\n          </Text>\n        </Flex>\n        <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} pt=\"8px\" mb=\"24px\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('You pay')}\n          </Text>\n          <Text fontSize=\"16px\" bold>\n            ~{totalCost} IBG\n          </Text>\n        </Flex>\n\n        {account ? (\n          <>\n            <ApproveConfirmButtons\n              isApproveDisabled={isApproved}\n              isApproving={isApproving}\n              isConfirmDisabled={disableBuying}\n              isConfirming={isConfirming}\n              onApprove={handleApprove}\n              onConfirm={handleConfirm}\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\n              confirmLabel={t('Buy Instantly')}\n              confirmId=\"lotteryBuyInstant\"\n            />\n            {isApproved && (\n              <Button\n                variant=\"secondary\"\n                mt=\"8px\"\n                endIcon={\n                  <ArrowForwardIcon\n                    ml=\"2px\"\n                    color={disableBuying || isConfirming ? 'disabled' : 'primary'}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                }\n                disabled={disableBuying || isConfirming}\n                onClick={() => {\n                  setBuyingStage(BuyingStage.EDIT)\n                }}\n              >\n                {t('View/Edit Numbers')}\n              </Button>\n            )}\n          </>\n        ) : (\n          <ConnectWalletButton />\n        )}\n\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            '\"Buy Instantly\" chooses random numbers, with no duplicates among your tickets. Prices are set before each round starts, equal to $5 at that time. Purchases are final.',\n          )}\n        </Text>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default BuyTicketsModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface NumTicketsToBuyButtonProps {\n  onClick: () => void\n  disabled?: boolean\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst NumTicketsToBuyButton: React.FC<NumTicketsToBuyButtonProps> = ({ children, onClick, disabled = false }) => {\n  return (\n    <StyledButton disabled={disabled} scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default NumTicketsToBuyButton\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Ticket, UpdateTicketAction } from './useTicketsReducer'\n\nconst InputsContainer = styled.div<{ focused: boolean; isDuplicate: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  box-sizing: border-box;\n  border: 1px solid #d7caec;\n  background-color: #eeeaf4;\n  border-radius: 16px;\n  margin-bottom: 8px;\n  ${({ isDuplicate }) =>\n    isDuplicate &&\n    `\n    border: 1px solid #FFB237;\n    box-shadow: 0px 0px 0px 2px #FFB237;\n  `}\n  ${({ focused }) =>\n    focused &&\n    `\n    border: 1px solid #7645D9;\n    box-shadow: 0px 0px 0px 2px #E4DAF7;\n  `}\n`\n\nconst DigitInput = styled.input`\n  border: none;\n  height: 32px;\n  padding: 0 12px;\n  font-size: 16px;\n  flex: 1;\n  width: 16px;\n  text-align: center;\n  min-width: 0;\n  background-color: transparent;\n  caret-color: #7a6faa;\n\n  &::placeholder {\n    text-align: center;\n  }\n\n  &:placeholder-shown {\n    text-align: left;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    /* display: none; <- Crashes Chrome on hover */\n    -webkit-appearance: none;\n    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n  }\n\n  -moz-appearance: textfield; /* Firefox */\n`\n\nconst getIdLabel = (id: number): string => {\n  if (id < 10) return `#00${id}`\n  if (id < 100) return `#0${id}`\n  return `#${id}`\n}\n\nconst TicketContainer: React.FC<{\n  ticket: Ticket\n  duplicateWith: number[]\n  updateTicket: UpdateTicketAction\n  disabled: boolean\n}> = ({ ticket, duplicateWith, updateTicket, disabled }) => {\n  const [focused, setFocused] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const digit1 = useRef<HTMLInputElement>(null)\n  const digit2 = useRef<HTMLInputElement>(null)\n  const digit3 = useRef<HTMLInputElement>(null)\n  const digit4 = useRef<HTMLInputElement>(null)\n  const digit5 = useRef<HTMLInputElement>(null)\n  const digit6 = useRef<HTMLInputElement>(null)\n\n  const { t } = useTranslation()\n\n  const digitRefs = [digit1, digit2, digit3, digit4, digit5, digit6]\n\n  const scrollInputIntoView = () => {\n    if (containerRef.current) {\n      containerRef.current.scrollIntoView({ block: 'center', behavior: 'smooth' })\n    }\n  }\n\n  const onPasteHandler = (e: React.ClipboardEvent) => {\n    e.preventDefault()\n    const pasteContent = e.clipboardData.getData('Text')\n    if (pasteContent.length <= 6 && /^\\d+$/.test(pasteContent)) {\n      const filler = Array(6 - pasteContent.length).fill('')\n      updateTicket(ticket.id, [...pasteContent.split(''), ...filler])\n    }\n  }\n\n  const onFocusHandler = () => {\n    scrollInputIntoView()\n    setFocused(true)\n  }\n\n  const onBlurHandler = () => {\n    setFocused(false)\n  }\n\n  const onChangeHandler = (event: React.KeyboardEvent, digitId: number) => {\n    const currentKey = parseInt(event.key, 10)\n\n    if (['e', 'E', '.', ',', '-', 'Unidentified'].includes(event.key)) {\n      event.preventDefault()\n      return\n    }\n\n    // Handling numeric inputs\n    if (currentKey >= 0 && currentKey <= 9) {\n      event.preventDefault()\n      const newNumbers = [...ticket.numbers]\n      newNumbers[digitId] = `${currentKey}`\n      updateTicket(ticket.id, newNumbers)\n      const nextDigitId = digitId + 1\n      // if we're not on the last digit - auto-tab\n      const nextInput = digitRefs[nextDigitId]\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n\n    if (event.key === 'Backspace') {\n      event.preventDefault()\n      // If some number is there - delete the number\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers]\n        newNumbers[digitId] = ''\n        updateTicket(ticket.id, newNumbers)\n      } else {\n        // if the cell is empty and user presses backspace - remove previous\n        const prevDigitId = digitId - 1\n        const nextInput = digitRefs[prevDigitId]\n        // prevent focusing on non-existent input\n        if (prevDigitId !== -1 && nextInput.current) {\n          nextInput.current.focus()\n          const newNumbers = [...ticket.numbers]\n          newNumbers[prevDigitId] = ''\n          updateTicket(ticket.id, newNumbers)\n        }\n      }\n    }\n\n    if (event.key === 'Delete') {\n      event.preventDefault()\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers]\n        newNumbers[digitId] = ''\n        updateTicket(ticket.id, newNumbers)\n      } else {\n        // if the cell is empty and user presses delete - remove next\n        const nextDigitId = digitId + 1\n        const nextInput = digitRefs[nextDigitId]\n        // prevent focusing on non-existent input\n        if (nextDigitId !== 6 && nextInput.current) {\n          nextInput.current.focus()\n          const newNumbers = [...ticket.numbers]\n          newNumbers[nextDigitId] = ''\n          updateTicket(ticket.id, newNumbers)\n        }\n      }\n    }\n\n    if (event.key === 'ArrowLeft') {\n      event.preventDefault()\n      const prevDigitId = digitId - 1\n      const nextInput = digitRefs[prevDigitId]\n      // prevent focusing on non-existent input\n      if (prevDigitId !== -1 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault()\n      const nextDigitId = digitId + 1\n      const nextInput = digitRefs[nextDigitId]\n      // prevent focusing on non-existent input\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n  }\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {getIdLabel(ticket.id)}\n        </Text>\n        <Text fontSize=\"12px\" color=\"warning\">\n          {duplicateWith.length !== 0 && t('Duplicate')}\n        </Text>\n      </Flex>\n      <InputsContainer\n        ref={containerRef}\n        onClick={scrollInputIntoView}\n        focused={focused}\n        isDuplicate={duplicateWith.length !== 0}\n      >\n        <DigitInput\n          ref={digit1}\n          type=\"number\"\n          value={ticket.numbers[0]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 0)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit2}\n          type=\"number\"\n          value={ticket.numbers[1]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 1)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit3}\n          type=\"number\"\n          value={ticket.numbers[2]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 2)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit4}\n          type=\"number\"\n          value={ticket.numbers[3]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 3)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit5}\n          type=\"number\"\n          value={ticket.numbers[4]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 4)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit6}\n          type=\"number\"\n          value={ticket.numbers[5]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 5)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n      </InputsContainer>\n    </>\n  )\n}\n\nexport default TicketContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, ArrowBackIcon, AutoRenewIcon } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport TicketInput from './TicketInput'\nimport { UpdateTicketAction, Ticket } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  max-height: 552px;\n\n  & div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  height: 310px;\n  overflow-y: scroll;\n  border-bottom: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n  padding: 24px;\n`\n\nconst EditNumbersModal: React.FC<{\n  totalCost: string\n  updateTicket: UpdateTicketAction\n  randomize: () => void\n  tickets: Ticket[]\n  allComplete: boolean\n  onConfirm: () => void\n  isConfirming: boolean\n  onDismiss?: () => void\n}> = ({ totalCost, updateTicket, randomize, tickets, allComplete, onConfirm, isConfirming, onDismiss }) => {\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  return (\n    <StyledModal\n      title={t('Edit numbers')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n      onBack={onDismiss}\n    >\n      <ScrollableContainer>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Total cost')}:</Text>\n          <Text>~{totalCost} CAKE</Text>\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"16px\">\n          {t(\n            'Numbers are randomized, with no duplicates among your tickets. Tap a number to edit it. Available digits: 0-9',\n          )}\n        </Text>\n        <Button disabled={isConfirming} mb=\"16px\" variant=\"secondary\" width=\"100%\" height=\"32px\" onClick={randomize}>\n          {t('Randomize')}\n        </Button>\n        {tickets.map((ticket) => (\n          <TicketInput\n            key={ticket.id}\n            ticket={ticket}\n            duplicateWith={ticket.duplicateWith}\n            updateTicket={updateTicket}\n            disabled={isConfirming}\n          />\n        ))}\n      </ScrollableContainer>\n      <Flex flexDirection=\"column\" justifyContent=\"center\" m=\"24px\">\n        <Button\n          id=\"lotteryBuyEdited\"\n          disabled={!allComplete || isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          onClick={() => {\n            onConfirm()\n          }}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm and buy')}\n        </Button>\n        <Button mt=\"8px\" variant={isConfirming ? 'secondary' : 'text'} disabled={isConfirming} onClick={onDismiss}>\n          <ArrowBackIcon color={isConfirming ? 'disabled' : 'primary'} height=\"24px\" width=\"24px\" /> {t('Go back')}\n        </Button>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default EditNumbersModal\n","import { LotteryTicket } from 'config/constants/types'\nimport { random } from 'lodash'\n\n/**\n * Generate a specific number of unique, randomised 7-digit lottery numbers between 1000000 & 1999999\n */\nconst generateTicketNumbers = (\n  numberOfTickets: number,\n  userCurrentTickets?: LotteryTicket[],\n  minNumber = 1000000,\n  maxNumber = 1999999,\n): number[] => {\n  // Populate array with existing tickets (if they have them) to ensure no duplicates when generating new numbers\n  const existingTicketNumbers =\n    userCurrentTickets?.length > 0\n      ? userCurrentTickets.map((ticket) => {\n          return parseInt(ticket?.number)\n        })\n      : []\n  const generatedTicketNumbers = [...existingTicketNumbers]\n\n  for (let count = 0; count < numberOfTickets; count++) {\n    let randomNumber = random(minNumber, maxNumber)\n    while (generatedTicketNumbers.includes(randomNumber)) {\n      // Catch for duplicates - generate a new number until the array doesn't include the random number generated\n      randomNumber = random(minNumber, maxNumber)\n    }\n    generatedTicketNumbers.push(randomNumber)\n  }\n\n  // Filter out the users' existing tickets\n  const ticketsToBuy =\n    userCurrentTickets?.length > 0\n      ? generatedTicketNumbers.filter((ticketNumber) => {\n          return !existingTicketNumbers.includes(ticketNumber)\n        })\n      : generatedTicketNumbers\n\n  return ticketsToBuy\n}\n\nexport default generateTicketNumbers\n","import { LotteryTicket } from 'config/constants/types'\nimport { useEffect, useReducer } from 'react'\nimport { parseRetrievedNumber } from '../../helpers'\nimport generateTicketNumbers from './generateTicketNumbers'\n\nexport interface Ticket {\n  id: number\n  numbers: string[]\n  duplicateWith: number[]\n  isComplete: boolean\n}\n\nexport interface TicketsState {\n  tickets: Ticket[]\n  allComplete: boolean\n}\n\nconst getInitialState = ({\n  amount,\n  userCurrentTickets,\n}: {\n  amount: number\n  userCurrentTickets: LotteryTicket[]\n}): TicketsState => {\n  const randomTickets = generateTicketNumbers(amount, userCurrentTickets)\n  const randomTicketsAsStringArray = randomTickets.map((ticket) => parseRetrievedNumber(ticket.toString()).split(''))\n  const tickets = Array.from({ length: amount }, (_, i) => i + 1).map((index) => ({\n    id: index,\n    numbers: randomTicketsAsStringArray[index - 1],\n    duplicateWith: [],\n    isComplete: true,\n  }))\n  return {\n    tickets,\n    allComplete: true,\n  }\n}\n\nconst reducer = (state: TicketsState, action: any) => {\n  switch (action.type) {\n    case 'updateTicket': {\n      const tickets = [...state.tickets]\n      const { ticketId, newNumbers } = action.payload\n\n      const newDuplicates = state.tickets.filter(\n        (ticket) => ticket.id !== ticketId && ticket.isComplete && ticket.numbers.join('') === newNumbers.join(''),\n      )\n\n      // If ticket was duplicate but not duplicate anymore with this update\n      // go through previously considered duplicates and remove id of this ticket\n      // from their duplicateWith array\n      const prevDuplicates = tickets[ticketId - 1].duplicateWith\n      prevDuplicates.forEach((prevTicketId) => {\n        if (!newDuplicates.map(({ id }) => id).includes(prevTicketId)) {\n          const dupsToUpdate = [...tickets[prevTicketId - 1].duplicateWith]\n          const indexToRemove = dupsToUpdate.findIndex((id) => id === ticketId)\n          dupsToUpdate.splice(indexToRemove, 1)\n          tickets[prevTicketId - 1] = {\n            ...tickets[prevTicketId - 1],\n            duplicateWith: dupsToUpdate,\n          }\n        }\n      })\n\n      // If found duplicates - update their duplicateWith array\n      if (newDuplicates.length !== 0) {\n        newDuplicates.forEach((duplicate) => {\n          tickets[duplicate.id - 1] = {\n            ...duplicate,\n            duplicateWith: [...duplicate.duplicateWith, ticketId],\n          }\n        })\n      }\n\n      const updatedTicket = {\n        id: ticketId,\n        numbers: newNumbers,\n        duplicateWith: newDuplicates.map((ticket) => ticket.id),\n        isComplete: newNumbers.join('').length === 6,\n      }\n      tickets[ticketId - 1] = updatedTicket\n\n      // Check if all tickets are filled\n      const allComplete = tickets.every((ticket) => ticket.isComplete)\n\n      return {\n        tickets,\n        allComplete,\n      }\n    }\n    case 'reset':\n      return getInitialState({ amount: action.payload.amount, userCurrentTickets: action.payload.userCurrentTickets })\n    default:\n      throw new Error()\n  }\n}\n\nexport type UpdateTicketAction = (ticketId: number, newNumbers: string[]) => void\n\nexport const useTicketsReducer = (\n  amount: number,\n  userCurrentTickets: LotteryTicket[],\n): [UpdateTicketAction, () => void, Ticket[], boolean, () => number[]] => {\n  const [state, dispatch] = useReducer(reducer, { amount, userCurrentTickets }, getInitialState)\n\n  useEffect(() => {\n    dispatch({ type: 'reset', payload: { amount, userCurrentTickets } })\n  }, [amount, userCurrentTickets])\n\n  const updateTicket = (ticketId: number, newNumbers: string[]) => {\n    dispatch({ type: 'updateTicket', payload: { ticketId, newNumbers } })\n  }\n\n  const randomize = () => {\n    dispatch({ type: 'reset', payload: { amount, userCurrentTickets } })\n  }\n\n  const getTicketsForPurchase = () => {\n    return state.tickets.map((ticket) => {\n      const reversedTicket = [...ticket.numbers].map((num) => parseInt(num, 10)).reverse()\n      reversedTicket.unshift(1)\n      const ticketAsNumber = parseInt(reversedTicket.join(''), 10)\n      return ticketAsNumber\n    })\n  }\n\n  return [updateTicket, randomize, state.tickets, state.allComplete, getTicketsForPurchase]\n}\n","import React from 'react'\nimport { Button, useModal, WaitIcon, ButtonProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useLottery } from 'state/lottery/hooks'\nimport { LotteryStatus } from 'config/constants/types'\nimport BuyTicketsModal from './BuyTicketsModal/BuyTicketsModal'\n\ninterface BuyTicketsButtonProps extends ButtonProps {\n  disabled?: boolean\n}\n\nconst BuyTicketsButton: React.FC<BuyTicketsButtonProps> = ({ disabled, ...props }) => {\n  const { t } = useTranslation()\n  const [onPresentBuyTicketsModal] = useModal(<BuyTicketsModal />)\n  const {\n    currentRound: { status },\n  } = useLottery()\n\n  const getBuyButtonText = () => {\n    console.log(\"dsdsdsds\",status)\n    return t('Buy')\n\n    if (status === LotteryStatus.OPEN) {\n      return t('Buy')\n    }\n    return (\n      <>\n        <WaitIcon mr=\"4px\" color=\"textDisabled\" /> {t('On sale soon!')}\n      </>\n    )\n  }\n\n  return (\n    <Button {...props} disabled={disabled} onClick={onPresentBuyTicketsModal} style={{background:\"red\",marginTop:\"0.5rem\"}}>\n      {getBuyButtonText()}\n    </Button>\n  )\n}\n\nexport default BuyTicketsButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useLottery } from 'state/lottery/hooks'\nimport useTheme from 'hooks/useTheme'\nimport TicketNumber from '../TicketNumber'\nimport BuyTicketsButton from '../BuyTicketsButton'\n\nconst ScrollBox = styled(Box)`\n  max-height: 300px;\n  overflow-y: scroll;\n  margin-left: -24px;\n  margin-right: -24px;\n  padding-left: 24px;\n  padding-right: 20px;\n`\n\nconst CurrentRoundTicketsInner = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const {\n    isTransitioning,\n    currentRound: { status, userTickets },\n  } = useLottery()\n  const ticketBuyIsDisabled = status !== LotteryStatus.OPEN || isTransitioning\n\n  return (\n    <>\n      <Flex flexDirection=\"column\">\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" mb=\"16px\">\n          {t('Your tickets')}\n        </Text>\n        <ScrollBox>\n          {userTickets.tickets.map((ticket, index) => {\n            return (\n              <TicketNumber\n                key={ticket.id}\n                localId={index + 1}\n                id={ticket.id}\n                number={ticket.number}\n                status={ticket.status}\n              />\n            )\n          })}\n        </ScrollBox>\n      </Flex>\n      <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} alignItems=\"center\" justifyContent=\"center\">\n        <BuyTicketsButton disabled={ticketBuyIsDisabled} mt=\"24px\" width=\"100%\" />\n      </Flex>\n    </>\n  )\n}\n\nexport default CurrentRoundTicketsInner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useLottery } from 'state/lottery/hooks'\nimport useTheme from 'hooks/useTheme'\nimport PreviousRoundTicketsInner from './PreviousRoundTicketsInner'\nimport CurrentRoundTicketsInner from './CurrentRoundTicketsInner'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`\n\ninterface ViewTicketsModalProps {\n  roundId: string\n  roundStatus?: LotteryStatus\n  onDismiss?: () => void\n}\n\nconst ViewTicketsModal: React.FC<ViewTicketsModalProps> = ({ onDismiss, roundId, roundStatus }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { currentLotteryId } = useLottery()\n  const isPreviousRound = roundStatus?.toLowerCase() === LotteryStatus.CLAIMABLE || roundId !== currentLotteryId\n\n  return (\n    <StyledModal\n      title={`${t('Round')} ${roundId}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isPreviousRound ? <PreviousRoundTicketsInner roundId={roundId} /> : <CurrentRoundTicketsInner />}\n    </StyledModal>\n  )\n}\n\nexport default ViewTicketsModal\n","import React, { useEffect, useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { ethers } from 'ethers'\nimport { BIG_ZERO, ethersToBigNumber } from 'utils/bigNumber'\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Heading,\n  Text,\n  Skeleton,\n  Button,\n  useModal,\n  Box,\n  CardFooter,\n  ExpandableLabel,\n} from '@pancakeswap/uikit'\nimport { useCake, useLotteryV2Contract ,useERC20} from 'hooks/useContract'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport ViewTicketsModal from './ViewTicketsModal'\nimport BuyTicketsButton from './BuyTicketsButton'\nimport { dateTimeOptions } from '../helpers'\nimport RewardBrackets from './RewardBrackets'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-column-gap: 32px;\n    grid-template-columns: auto 1fr;\n  }\n`\n\nconst StepContainer = styled(Flex)`\n  gap: 24px;\n  margin-top: 24px;\n  width: 100%;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  // background-color: #fef0ff;\n  // padding: 1rem;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledStepCard = styled(Box)`\n  display: flex;\n  align-self: baseline;\n  position: relative;\n  background: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  border-radius: ${({ theme }) => theme.radii.card};\n`\nconst StepCardInner = styled(Box)`\n  width: 100%;\n  padding: 24px;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\nconst StyledCard = styled(Card)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 520px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 1200px;\n  }\n`\n\nconst NextDrawWrapper = styled.div`\n  background: ${({ theme }) => theme.colors.background};\n  padding: 24px;\n`\n\nconst H = styled.h2`\n  color: #000080;\n  font-weight: 550;\n  font-size: 1.4rem;\n  margin-bottom: 1rem;\n  @media only screen and (max-width: 600px) {\n    font-weight: bold;\n    font-size: 1.2rem;\n    text-align: center;\n  }\n`\n\nconst T = styled.p`\n  color: #000080;\n  font-weight: regular;\n  font-size: 1rem;\n  margin-bottom: 0.8rem;\n  @media only screen and (max-width: 600px) {\n    font-weight: regular;\n    font-size: 1rem;\n  }\n`\n\nconst Left = styled.div`\n  display: grid;\n  place-items: center;\n  @media only screen and (max-width: 600px) {\n  }\n`\n\nconst Right = styled.div`\n  display: grid;\n  place-items: center;\n  @media only screen and (max-width: 600px) {\n    margin-top: 1.5rem;\n  }\n`\n\nconst Flexx = styled(Flex)`\n  width: 100%;\n  align-items: center;\n  justify-content: space-around;\n  background-color: rgb(248, 239, 242);\n  border-radius: 0.5rem;\n  padding: 1rem;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Foot = styled(CardFooter)`\n  display: grid;\n  place-items: center;\n  padding: 1rem;\n`\n\nconst NextDrawCard = (props) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { currentLotteryId, isTransitioning, currentRound } = useLottery()\n\n  const lotteryContract = useLotteryV2Contract()\n\n  const { endTime, amountCollectedInCake, userTickets, status } = currentRound\n\n  const [onPresentViewTicketsModal] = useModal(<ViewTicketsModal roundId={currentLotteryId} roundStatus={status} />)\n  const [isExpanded, setIsExpanded] = useState(false)\n  const ticketBuyIsDisabled = status !== LotteryStatus.OPEN || isTransitioning\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\n  const endTimeMs = parseInt(endTime, 10) * 1000\n  const endDate = new Date(endTimeMs)\n  const isLotteryOpen = status === LotteryStatus.OPEN\n  const userTicketCount = userTickets?.tickets?.length || 0\n\n  const [totalParticipants, setTotalParticipants] = useState(0)\n  const [ticketsSold, setTicketsSold] = useState(0)\n  const [totalSales, setTotalSales] = useState(0)\n  const [eligibleForFeeTicket, setEligibleForFeeTicket] = useState(false)\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const [isApprovalRequired,setApprovalRequired] = useState(true)\n  const tokenContract = useERC20(\"0x73B61707573e4D14e94622A59cD9981571Eef2c1\");\n\n  const getPrizeBalances = () => {\n    if (status === LotteryStatus.CLOSE || status === LotteryStatus.CLAIMABLE) {\n      return (\n        <Heading scale=\"xl\" color=\"secondary\" textAlign={['center', null, null, 'left']}>\n          {t('Calculating')}...\n        </Heading>\n      )\n    }\n    return (\n      <>\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"7px\" height={40} width={160} />\n        ) : (\n          <Balance\n            fontSize=\"40px\"\n            color=\"#7f09c4\"\n            textAlign={['center', null, null, 'left']}\n            lineHeight=\"1\"\n            bold\n            prefix=\"~$\"\n            value={getBalanceNumber(prizeInBusd)}\n            decimals={0}\n          />\n        )}\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"2px\" height={14} width={90} />\n        ) : (\n          <Balance\n            fontSize=\"14px\"\n            color=\"#7f09c4\"\n            textAlign={['center', null, null, 'left']}\n            unit=\"IBG\"\n            value={getBalanceNumber(amountCollectedInCake)}\n            decimals={0}\n          />\n        )}\n      </>\n    )\n  }\n\n  const claimTicket = async () => {\n    return callWithGasPrice(lotteryContract, 'claimTicket', [])\n\n    // await lotteryContract.claimTicket()\n  }\n\n  const handleTicketBuy = async (numberOfTickets) => {\n    return callWithGasPrice(lotteryContract, 'purchaseTicket', [numberOfTickets])\n\n    // await lotteryContract.claimTicket()\n  }\n\n  const handleApproval = async()=>{\n\n    return callWithGasPrice(tokenContract, 'approve', [getLotteryV2Address(), ethers.constants.MaxUint256])\n  }\n  const renderBuyOfApprovalButton = (noOfTickets)=>{\n    if(isApprovalRequired){\n      return <Button\n      maxWidth=\"280px\"\n      onClick={() => {\n        handleApproval()\n      }}\n      style={{ background: 'red', marginTop: '0.5rem' }}\n    >\n      Approve Contract\n    </Button>\n    }\n    return  <Button\n    maxWidth=\"280px\"\n    onClick={() => {\n      console.log('hi')\n      handleTicketBuy(noOfTickets)\n    }}\n    style={{ background: 'red', marginTop: '0.5rem' }}\n  >\n    Buy\n  </Button>\n  }\n\n\n\n  const getNextDrawId = () => {\n    if (status === LotteryStatus.OPEN) {\n      return `${currentLotteryId} |`\n    }\n    if (status === LotteryStatus.PENDING) {\n      return ''\n    }\n    return parseInt(currentLotteryId, 10) + 1\n  }\n\n  const getNextDrawDateTime = () => {\n    if (status === LotteryStatus.OPEN) {\n      return `${t('Draw')}: ${endDate.toLocaleString(undefined, dateTimeOptions)}`\n    }\n    return ''\n  }\n\n  const ticketRoundText =\n    userTicketCount > 1\n      ? t('You have %amount% tickets this round', { amount: userTicketCount })\n      : t('You have %amount% ticket this round', { amount: userTicketCount })\n\n  const [youHaveText, ticketsThisRoundText] = ticketRoundText.split(userTicketCount.toString())\n\n  const loadContractData = useCallback(async () => {\n    if (!lotteryContract || !tokenContract) {\n      return\n    }\n\n    console.log(\"approvallll123444\",lotteryContract)\n\n    let _currentRound =await lotteryContract.getCurrentRound();\n    _currentRound = _currentRound.toNumber()\n\n\n    \n\n    const currentStats = await lotteryContract.getStats(_currentRound)\n\n    setTicketsSold(currentStats._numTotalTickets.toNumber())\n    setTotalParticipants(currentStats._numParticipants.toNumber())\n    console.log(\"currentStats\",currentStats)\n    \n    setTotalSales(getBalanceNumber(new BigNumber(currentStats._sales._hex)))\n\n    if (account) {\n      const _isEliglibleForFreeTickets = await lotteryContract.isEligibleForFeeTickets(account)\n      setEligibleForFeeTicket(_isEliglibleForFreeTickets)\n      const approval = (await tokenContract.allowance(account,getLotteryV2Address()))\n      const currentAllowance = ethersToBigNumber(approval)\n      \n      setApprovalRequired(!currentAllowance.gt(0));\n      console.log(\"approvallll\",currentAllowance.gt(0))\n\n    }\n\n\n\n    if((_currentRound-1)> 0){\n      const previousRounds = []\n      /* eslint-disable no-await-in-loop */\n     \n      for(let i = _currentRound-1;i>= _currentRound-3;i--){\n        const stats = await lotteryContract.getStats(i);\n        const preTotalTickets = stats._numTotalTickets.toNumber();\n        const preSales = getBalanceNumber(new BigNumber(stats._sales._hex))\n        const preNumOfParticipants = stats._numParticipants.toNumber();\n        const pre1stWinner = stats._firstWinner\n        const pre2ndWinner = stats._secondWinner\n\n        previousRounds.push({\n          roundNumber:i,\n          totalTickets:preTotalTickets,\n          sales:preSales,\n          numOfParticipants:preNumOfParticipants,\n          firstWinner:pre1stWinner,\n          secondWinner:pre2ndWinner\n        })\n      }\n\n      props.onPreviousRounds(previousRounds);\n    }\n\n\n  }, [lotteryContract, account,tokenContract,props])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      // setInterval(()=>{\n      //   loadContractData()\n      // },5000)\n      loadContractData()\n\n    }\n\n  }, [lotteryContract, loadContractData])\n\n  return (\n    <StyledCard>\n      <CardHeader p=\"16px 24px\" style={{ background: '#f8eff2' }}>\n        <Flex justifyContent=\"space-between\">\n          <Heading mr=\"12px\">{t('Next Draw')}</Heading>\n          <Text>\n            {currentLotteryId && `#${getNextDrawId()}`} {Boolean(endTime) && getNextDrawDateTime()}\n          </Text>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {/* <Grid>\n          <Flex justifyContent={['center', null, null, 'flex-start']}>\n            <Heading>{t('Prize Pot')}</Heading>\n          </Flex>\n          <Flex flexDirection=\"column\" mb=\"18px\">\n            {getPrizeBalances()}\n          </Flex>\n          <Box display={['none', null, null, 'flex']}>\n            <Heading>{t('Your tickets')}</Heading>\n          </Box>\n          <Flex flexDirection={['column', null, null, 'row']} alignItems={['center', null, null, 'flex-start']}>\n            {isLotteryOpen && (\n              <Flex\n                flexDirection=\"column\"\n                mr={[null, null, null, '24px']}\n                alignItems={['center', null, null, 'flex-start']}\n              >\n                {account && (\n                  <Flex justifyContent={['center', null, null, 'flex-start']}>\n                    <Text display=\"inline\">{youHaveText} </Text>\n                    {!userTickets.isLoading ? (\n                      <Balance value={userTicketCount} decimals={0} display=\"inline\" bold mx=\"4px\" />\n                    ) : (\n                      <Skeleton mx=\"4px\" height={20} width={40} />\n                    )}\n                    <Text display=\"inline\"> {ticketsThisRoundText}</Text>\n                  </Flex>\n                )}\n                {!userTickets.isLoading && userTicketCount > 0 && (\n                  <Button\n                    onClick={onPresentViewTicketsModal}\n                    height=\"auto\"\n                    width=\"fit-content\"\n                    p=\"0\"\n                    mb={['32px', null, null, '0']}\n                    variant=\"text\"\n                    scale=\"sm\"\n                    style={{ color: \"red\" }}\n                  >\n                    {t('View your tickets')}\n                  </Button>\n                )}\n              </Flex>\n            )}\n            <BuyTicketsButton disabled={ticketBuyIsDisabled} maxWidth=\"280px\" />\n          </Flex>\n\n        </Grid> */}\n\n        <Flexx>\n          <Left>\n            <H>Prizes</H>\n            <Flex>\n              <T>Winner 1:</T>\n              <T style={{ marginLeft: '1rem' }}>25000 iBG</T>\n            </Flex>\n            <Flex>\n              <T>Winner 2:</T>\n              <T style={{ marginLeft: '0.8rem' }}>25000 iBG</T>\n            </Flex>\n          </Left>\n          <Right>\n            <H>Current Lottery Information</H>\n            <Flex>\n              <T>Ticket Solds:</T>\n              <T style={{marginLeft:2}}>{ticketsSold} Tickets</T>\n            </Flex>\n            <Flex>\n              <T>Sales proceeds: </T>\n              <T style={{marginLeft:2}}>{totalSales} IBG</T>\n            </Flex>\n            <Flex>\n              <T style={{ textAlign: 'center' }}>Number of Participants: {totalParticipants} Participants</T>\n            </Flex>\n          </Right>\n        </Flexx>\n\n        <StepContainer>\n          <Card style={{ minWidth: '250px' }}>\n            <CardHeader style={{ background: 'red', color: 'white', textAlign: 'center', fontWeight: 'bold' }}>\n              Buy 1 Ticket\n            </CardHeader>\n            <CardBody style={{ textAlign: 'center', background: 'rgb(248, 239, 242)' }}>\n              <Text>5 IBG</Text>\n\n              {renderBuyOfApprovalButton(1)}\n            </CardBody>\n          </Card>\n\n          <Card style={{ minWidth: '250px' }}>\n            <CardHeader style={{ background: 'red', color: 'white', textAlign: 'center', fontWeight: 'bold' }}>\n              Buy 10 Tickets\n            </CardHeader>\n            <CardBody style={{ textAlign: 'center', background: 'rgb(248, 239, 242)' }}>\n              <Text>47.5 IBG</Text>\n              {renderBuyOfApprovalButton(10)}\n\n            </CardBody>\n          </Card>\n\n          <Card style={{ minWidth: '250px' }}>\n            <CardHeader style={{ background: 'red', color: 'white', textAlign: 'center', fontWeight: 'bold' }}>\n              Buy 100 Tickets\n            </CardHeader>\n            <CardBody style={{ textAlign: 'center', background: 'rgb(248, 239, 242)' }}>\n              <Text>450 IBG</Text>\n              {renderBuyOfApprovalButton(100)}\n\n            </CardBody>\n          </Card>\n          <Card style={{ minWidth: '250px' }}>\n            <CardHeader style={{ background: 'red', color: 'white', textAlign: 'center', fontWeight: 'bold' }}>\n              Buy 1000 Tickets\n            </CardHeader>\n            <CardBody style={{ textAlign: 'center', background: 'rgb(248, 239, 242)' }}>\n              <Text>4000 IBG</Text>\n              {renderBuyOfApprovalButton(1000)}\n\n            </CardBody>\n          </Card>\n        </StepContainer>\n      </CardBody>\n      <Foot p=\"0\">\n        <Text>Claim free ticket only for SuperStakers, 1 ticket per 1,000 iBG staked in the SuperStaking pools</Text>\n        <Button\n          style={{ marginTop: '0.5rem' }}\n          disabled={!eligibleForFeeTicket}\n          onClick={() => {\n            claimTicket()\n          }}\n        >\n          {eligibleForFeeTicket ? 'Claim' : 'No Free Tickets Available'}\n        </Button>\n      </Foot>\n    </StyledCard>\n  )\n}\n\nexport default NextDrawCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconButton, ArrowForwardIcon, ArrowBackIcon, ArrowLastIcon, Flex, Heading, Input } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  width: 60px;\n  height: 100%;\n  padding: 4px 16px;\n`\n\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({ theme }) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({ theme }) => theme.colors.textDisabled};\n      }\n    }\n  }\n`\n\ninterface RoundSwitcherProps {\n  isLoading: boolean\n  selectedRoundId: string\n  mostRecentRound: number\n  handleInputChange: (event: any) => void\n  handleArrowButtonPress: (targetRound: number) => void\n}\n\nconst RoundSwitcher: React.FC<RoundSwitcherProps> = ({\n  isLoading,\n  selectedRoundId,\n  mostRecentRound,\n  handleInputChange,\n  handleArrowButtonPress,\n}) => {\n  const { t } = useTranslation()\n  const selectedRoundIdAsInt = parseInt(selectedRoundId, 10)\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      handleInputChange(e)\n    }\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex alignItems=\"center\">\n        <Heading mr=\"8px\">{t('Round')}</Heading>\n        <StyledInput\n          pattern=\"^[0-9]+$\"\n          inputMode=\"numeric\"\n          disabled={isLoading}\n          id=\"round-id\"\n          name=\"round-id\"\n          value={selectedRoundId}\n          scale=\"lg\"\n          onChange={handleOnChange}\n        />\n      </Flex>\n      <Flex alignItems=\"center\">\n        <StyledIconButton\n          disabled={!selectedRoundIdAsInt || selectedRoundIdAsInt <= 1}\n          onClick={() => handleArrowButtonPress(selectedRoundIdAsInt - 1)}\n          variant=\"text\"\n          scale=\"sm\"\n          mr=\"4px\"\n        >\n          <ArrowBackIcon />\n        </StyledIconButton>\n        <StyledIconButton\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\n          onClick={() => handleArrowButtonPress(selectedRoundIdAsInt + 1)}\n          variant=\"text\"\n          scale=\"sm\"\n          mr=\"4px\"\n        >\n          <ArrowForwardIcon />\n        </StyledIconButton>\n        <StyledIconButton\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\n          onClick={() => handleArrowButtonPress(mostRecentRound)}\n          variant=\"text\"\n          scale=\"sm\"\n        >\n          <ArrowLastIcon />\n        </StyledIconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default RoundSwitcher\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  CardBody,\n  Heading,\n  Flex,\n  Skeleton,\n  Text,\n  Box,\n  Button,\n  useModal,\n  CardRibbon,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport WinningNumbers from '../WinningNumbers'\nimport ViewTicketsModal from '../ViewTicketsModal'\n\nconst StyledCardBody = styled(CardBody)`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-column-gap: 72px;\n    grid-row-gap: 36px;\n    grid-template-columns: auto 1fr;\n    margin-left: 1rem;\n  }\n`\n\nconst StyledCardRibbon = styled(CardRibbon)`\n  right: -20px;\n  top: -20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    right: -10px;\n    top: -10px;\n  }\n`\nconst W1 = styled(Heading)`\n  ${({ theme }) => theme.mediaQueries.sm} {\n  }\n`\nconst W2 = styled(Heading)`\n  margin: 0rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n  }\n`\n\nconst Mobile = styled.div`\n  display: block;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\nconst PC = styled.div`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\nconst Flexu = styled(Flex)`\n  flex-direction: column;\n  height: auto;\n  margin-top: 4rem;\n  align-items: center;\n  justify-content: space-evenly;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-around;\n    height: 10rem;\n    margin-top: 3rem;\n  }\n`\n\nconst PreviousRoundCardBody: React.FC<{ lotteryNodeData: any; lotteryId: string }> = ({\n  lotteryNodeData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const {\n    currentLotteryId,\n    currentRound: { status },\n  } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\n  const { isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n\n  const currentLotteryIdAsInt = parseInt(currentLotteryId)\n  const mostRecentFinishedRoundId =\n    status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId\n\n  const [onPresentViewTicketsModal] = useModal(\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryNodeData?.status} />,\n  )\n\n  const totalTicketNumber = userDataForRound ? userDataForRound.totalTickets : 0\n  const ticketRoundText =\n    totalTicketNumber > 1\n      ? t('You had %amount% tickets this round', { amount: totalTicketNumber })\n      : t('You had %amount% ticket this round', { amount: totalTicketNumber })\n  const [youHadText, ticketsThisRoundText] = ticketRoundText.split(totalTicketNumber.toString())\n\n  return (\n    <StyledCardBody>\n      {isLatestRound && <StyledCardRibbon text={t('Latest')} />}\n      <Flexu flexDirection=\"column\">\n        <PC>\n          <W1 mb=\"10px\">\n            {t('Winner_#1')} {lotteryNodeData?.firstWinner}\n          </W1>\n        </PC>\n        <Mobile>\n          <W1 mb=\"10px\">\n            {t('#1')} {lotteryNodeData?.firstWinner}\n          </W1>\n        </Mobile>\n        <PC>\n          <W2 mb=\"10px\">\n            {t('Winner_#2')} {lotteryNodeData?.secondWinner}\n          </W2>\n        </PC>\n        <Mobile>\n          <W1 mb=\"10px\">\n            {t('#2')}\n            {lotteryNodeData?.secondWinner}{' '}\n          </W1>\n        </Mobile>\n\n\n\n        <PC>\n          <W2 mb=\"10px\" color=\"red\">\n           Total Participants {lotteryNodeData?.numOfParticipants}\n          </W2>\n        </PC>\n        <Mobile>\n          <W1 mb=\"10px\">\n          Total Participants {lotteryNodeData?.numOfParticipants}\n\n          </W1>\n        </Mobile>\n\n\n\n        <PC>\n          <W2 mb=\"10px\" color=\"red\">\n           Total Sales {lotteryNodeData?.sales}\n          </W2>\n        </PC>\n        <Mobile>\n          <W1 mb=\"10px\">\n          Total Sales {lotteryNodeData?.sales}\n\n          </W1>\n        </Mobile>\n\n\n\n        <PC>\n          <W2 mb=\"10px\" color=\"red\">\n           Total Tickets {lotteryNodeData?.totalTickets}\n          </W2>\n        </PC>\n        <Mobile>\n          <W1 mb=\"10px\">\n          Total Tickets {lotteryNodeData?.totalTickets}\n\n          </W1>\n        </Mobile>\n\n\n\n      \n      </Flexu>\n      <Grid>\n        {/* <Flex justifyContent={['center', null, null, 'flex-start']}> */}\n\n        {/* </Flex> */}\n        <Flex maxWidth={['240px', null, null, '100%']} >\n          {/*           \n        <PC><W1  mb=\"24px\">{t('Winner_#1')} {lotteryNodeData?.firstWinner}</W1></PC><Mobile><W1  mb=\"24px\">{t('#1')} {lotteryNodeData?.firstWinner}</W1></Mobile>\n        <PC><W2  mb=\"24px\">{t('Winner_#2')} {lotteryNodeData?.secondWinner}</W2></PC><Mobile><W1  mb=\"24px\">{t('#2')}{lotteryNodeData?.secondWinner} </W1></Mobile> */}\n\n          {/* {lotteryNodeData ? (\n            <div>\n              <Heading style={{textAlign:\"center\"}} mb=\"24px\">{t('Winners')}</Heading>\n              <WinningNumbers\n                rotateText={isLargerScreen || false}\n                number={lotteryNodeData?.finalNumber.toString()}\n                mr={[null, null, null, '32px']}\n                size=\"100%\"\n                fontSize={isLargerScreen ? '42px' : '16px'}\n              />\n              <br />\n              <WinningNumbers\n              rotateText={isLargerScreen || false}\n              number={lotteryNodeData?.finalNumber.toString()}\n              mr={[null, null, null, '32px']}\n              size=\"100%\"\n              fontSize={isLargerScreen ? '42px' : '16px'}\n            />\n            </div>\n\n          ) : (\n            <Skeleton\n              width={['240px', null, null, '450px']}\n              height={['34px', null, null, '71px']}\n              mr={[null, null, null, '32px']}\n            />\n          )} */}\n        </Flex>\n      </Grid>\n    </StyledCardBody>\n  )\n}\n\nexport default PreviousRoundCardBody\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, Text, Skeleton, CardHeader, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchLottery } from 'state/lottery/helpers'\nimport { LotteryStatus } from 'config/constants/types'\nimport RoundSwitcher from './RoundSwitcher'\nimport { getDrawnDate, processLotteryResponse } from '../../helpers'\nimport PreviousRoundCardBody from '../PreviousRoundCard/Body'\nimport PreviousRoundCardFooter from '../PreviousRoundCard/Footer'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 756px;\n  }\n`\n\nconst StyledCardHeader = styled(CardHeader)`\n  z-index: 2;\n  background: none;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nconst AllHistoryCard = ({rounds}) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const {\n    currentLotteryId,\n    lotteriesData,\n    currentRound: { status, isLoading },\n  } = useLottery()\n  const [latestRoundId, setLatestRoundId] = useState(null)\n  const [selectedRoundId, setSelectedRoundId] = useState('')\n  const [selectedLotteryNodeData, setSelectedLotteryNodeData] = useState(null)\n  const timer = useRef(null)\n\n  const numRoundsFetched = lotteriesData?.length\n\n\n\n  // useEffect(() => {\n  //   if (currentLotteryId) {\n  //     const currentLotteryIdAsInt = currentLotteryId ? parseInt(currentLotteryId) : null\n  //     const mostRecentFinishedRoundId =\n  //       status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n  //     setLatestRoundId(mostRecentFinishedRoundId)\n  //     setSelectedRoundId(mostRecentFinishedRoundId.toString())\n  //   }\n  // }, [currentLotteryId, status])\n\n\n  useEffect(() => {\n\n    if (rounds.length>0 && !selectedRoundId) {\n      console.log(\"qwegavfd\")\n      // const currentLotteryIdAsInt = currentLotteryId ? parseInt(currentLotteryId) : null\n      // const mostRecentFinishedRoundId =\n      //   status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n      setLatestRoundId(rounds[0].roundNumber)\n      // setSelectedRoundId(mostRecentFinishedR oundId.toString())\n      setSelectedRoundId(rounds[0].roundNumber)\n      setSelectedLotteryNodeData(rounds[0]);\n\n    }\n  }, [rounds,selectedRoundId])\n\n  // useEffect(() => {\n  //   setSelectedLotteryNodeData(null)\n\n  //   const fetchLotteryData = async () => {\n  //     const lotteryData = await fetchLottery(selectedRoundId)\n  //     const processedLotteryData = processLotteryResponse(lotteryData)\n  //     setSelectedLotteryNodeData(processedLotteryData)\n  //   }\n\n  //   timer.current = setInterval(() => {\n  //     if (selectedRoundId) {\n  //       fetchLotteryData()\n  //     }\n  //     clearInterval(timer.current)\n  //   }, 1000)\n\n  //   return () => clearInterval(timer.current)\n  // }, [selectedRoundId, currentLotteryId, numRoundsFetched, dispatch])\n\n\n  // useEffect(()=>{\n  //   // setSelectedLotteryNodeData\n\n  //  rounds.map((item)=>{\n  //   if(item.roundNumber.toString() === selectedRoundId){\n  //     setSelectedLotteryNodeData(item)\n  //   }\n  //   return null\n  //  })\n  // },[selectedRoundId,rounds])\n\n\n  const handleInputChange = (event) => {\n    const {\n      target: { value },\n    } = event\n    if (value) {\n      setSelectedRoundId(value)\n      if (parseInt(value, 10) <= 0) {\n        setSelectedRoundId('')\n      }\n      if (parseInt(value, 10) >= latestRoundId) {\n        setSelectedRoundId(latestRoundId.toString())\n      }\n    } else {\n      setSelectedRoundId('')\n    }\n  }\n\n  const handleArrowButtonPress = (targetRound) => {\n    console.log(\"targetRound\",targetRound)\n    const _selectedRoundId = selectedRoundId;\n    if (targetRound) {\n      let isFound = false\n      rounds.map((item)=>{\n        if(item.roundNumber.toString() === targetRound.toString()){\n          setSelectedLotteryNodeData(item)\n          isFound = true\n        }\n        return null\n       })\n\n       if(!isFound){\n        setSelectedRoundId(_selectedRoundId)\n       }else{\n        setSelectedRoundId(targetRound.toString())\n\n       }\n    } \n  }\n\n  return (\n    <StyledCard>\n      <StyledCardHeader>\n        <RoundSwitcher\n          isLoading={false}\n          selectedRoundId={selectedRoundId}\n          mostRecentRound={latestRoundId}\n          handleInputChange={handleInputChange}\n          handleArrowButtonPress={handleArrowButtonPress}\n        />\n        {/* <Box mt=\"8px\">\n          {selectedLotteryNodeData?.endTime ? (\n            <Text fontSize=\"14px\">\n              {t('Drawn')} {getDrawnDate(selectedLotteryNodeData.endTime)}\n            </Text>\n          ) : (\n            <Skeleton width=\"185px\" height=\"21px\" />\n          )}\n        </Box> */}\n      </StyledCardHeader>\n      <PreviousRoundCardBody lotteryNodeData={selectedLotteryNodeData} lotteryId={selectedRoundId} />\n      {/* <PreviousRoundCardFooter lotteryNodeData={selectedLotteryNodeData} lotteryId={selectedRoundId} /> */}\n    </StyledCard>\n  )\n}\n\nexport default AllHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Heading, useMatchBreakpoints, Link, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { BallWithNumber, MatchExampleA, MatchExampleB, PoolAllocationChart } from '../svgs'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-left: 8px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\nconst StepContainer = styled(Flex)`\n  gap: 24px;\n  width: 100%;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledStepCard = styled(Box)`\n  display: flex;\n  min-height: 18rem;\n  align-self: baseline;\n  position: relative;\n  background: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nconst StepCardInner = styled(Box)`\n  width: 100%;\n  padding: 24px;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\ntype Step = { title: string; subtitle: string; label: string }\n\nconst StepCard: React.FC<{ step: Step }> = ({ step }) => {\n  return (\n    <StyledStepCard width=\"100%\">\n      <StepCardInner>\n        <Text mb=\"16px\" fontSize=\"12px\" bold textAlign=\"right\" textTransform=\"uppercase\">\n          {step.label}\n        </Text>\n        <Heading mb=\"16px\" scale=\"lg\" color=\"red\">\n          {step.title}\n        </Heading>\n        <Text >{step.subtitle}</Text>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst BallsContainer = styled(Flex)`\n  gap: 6.5px;\n  padding-left: 7px;\n  align-items: center;\n  width: 100%;\n`\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst ExampleBalls = () => {\n  const { isDesktop } = useMatchBreakpoints()\n  const ballSize = isDesktop ? '24px' : '32px'\n  const fontSize = isDesktop ? '14px' : '16px'\n  return (\n    <BallsContainer>\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"yellow\" number=\"9\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"green\" number=\"1\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"aqua\" number=\"3\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"teal\" number=\"6\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"lilac\" number=\"6\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"pink\" number=\"2\" />\n    </BallsContainer>\n  )\n}\n\nconst MatchExampleContainer = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 46px 64px 64px;\n`\n\nconst MatchExampleCard = () => {\n  const { isDark } = useTheme()\n  const { isXs } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const exampleWidth = isXs ? '210px' : '258px'\n  return (\n    <StyledStepCard width={['280px', '330px', '380px']}>\n      <StepCardInner height=\"220px\">\n        <MatchExampleContainer>\n          <Box />\n          <ExampleBalls />\n          <Text lineHeight=\"72px\" textAlign=\"right\" color=\"secondary\" bold mr=\"20px\">\n            {t('A')}\n          </Text>\n          <MatchExampleA width={exampleWidth} height=\"46px\" isDark={isDark} />\n          <Text lineHeight=\"72px\" textAlign=\"right\" color=\"secondary\" bold mr=\"20px\">\n            {t('B')}\n          </Text>\n          <MatchExampleB width={exampleWidth} height=\"46px\" isDark={isDark} />\n        </MatchExampleContainer>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst AllocationGrid = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-auto-rows: max-content;\n  row-gap: 4px;\n`\n\nconst AllocationColorCircle = styled.div<{ color: string }>`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  background-color: ${({ color }) => color};\n`\n\nconst Div = styled.div`\n  margin-top: 2rem;\n  text-align: center;\n`\n\nconst AllocationMatch: React.FC<{ color: string; text: string }> = ({ color, text }) => {\n  return (\n    <Flex alignItems=\"center\">\n      <AllocationColorCircle color={color} />\n      <Text color=\"textSubtle\">{text}</Text>\n    </Flex>\n  )\n}\n\nconst PoolAllocations = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledStepCard width={['280px', '330px', '380px']}>\n      <StepCardInner height=\"auto\">\n        <Flex mb=\"32px\" justifyContent=\"center\">\n          <PoolAllocationChart width=\"100px\" height=\"100px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Digits matched')}\n          </Text>\n          <Text fontSize=\"12px\" color=\"secondary\" bold textAlign=\"right\" textTransform=\"uppercase\">\n            {t('Prize pool allocation')}\n          </Text>\n        </Flex>\n        <AllocationGrid>\n          <AllocationMatch color=\"#FFE362\" text={t('Matches first %digits%', { digits: 1 })} />\n          <Text textAlign=\"right\" bold>\n            2%\n          </Text>\n          <AllocationMatch color=\"#85C54E\" text={t('Matches first %digits%', { digits: 2 })} />\n          <Text textAlign=\"right\" bold>\n            3%\n          </Text>\n          <AllocationMatch color=\"#028E75\" text={t('Matches first %digits%', { digits: 3 })} />\n          <Text textAlign=\"right\" bold>\n            5%\n          </Text>\n          <AllocationMatch color=\"#36E8F5\" text={t('Matches first %digits%', { digits: 4 })} />\n          <Text textAlign=\"right\" bold>\n            10%\n          </Text>\n          <AllocationMatch color=\"#A881FC\" text={t('Matches first %digits%', { digits: 5 })} />\n          <Text textAlign=\"right\" bold>\n            20%\n          </Text>\n          <AllocationMatch color=\"#D750B2\" text={t('Matches all 6')} />\n          <Text textAlign=\"right\" bold>\n            40%\n          </Text>\n          <AllocationMatch color=\"#BDC2C4\" text={t('Burn Pool')} />\n          <Text textAlign=\"right\" bold>\n            20%\n          </Text>\n        </AllocationGrid>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst GappedFlex = styled(Flex)`\n  gap: 24px;\n`\n\nconst HowToPlay: React.FC = () => {\n  const { t } = useTranslation()\n\n  const steps: Step[] = [\n    {\n      label: t('Step %number%', { number: 1 }),\n      title: t('Buy Tickets'),\n      subtitle: t('Buy a standard lottery ticket for 5 iBGs. Enjoy discount with bulk purchase. (Superstakers can claim 1 free ticket for every 1000 iBG tokens superstaked) '),\n    },\n    {\n      label: t('Step %number%', { number: 2 }),\n      title: t('Wait for the Draw'),\n      subtitle: t('There will be one drawndown every sunday 7pm GMT +B'),\n    },\n    {\n      label: t('Step %number%', { number: 3 }),\n      title: t('Winner Announcement'),\n      subtitle: t('After each drawndown, Winner will be automatically dropped prize tokens and announced in the dashboard'),\n    },\n    {\n      label: t('Step %number%', { number: 4 }),\n      title: t('Repeat'),\n      subtitle: t('The smart contract automatically resets and restarts next draw and repeats 1-3 without intervention'),\n    },\n  ]\n  return (\n    <Box width=\"100%\">\n\n\n<GappedFlex flexDirection={['column', 'column', 'column', 'row']}>\n        <Flex flex=\"2\" style={{textAlign:\"center\"}} flexDirection=\"column\" justifyContent=\"center\">\n          <Heading mb=\"36px\" scale=\"xl\" color=\"red\">\n            {t('About iBG Lottery')}\n          </Heading>\n          {/* <Heading mb=\"24px\" scale=\"md\">\n            {t('The digits on your ticket must match in the correct order to win.')}\n          </Heading> */}\n          <Text mb=\"6px\" >\n          This is an exclusive lottery for BSC only.\n                    </Text>\n          {/* <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'Ticket A: The first 3 digits and the last 2 digits match, but the 4th digit is wrong, so this ticket only wins a “Match first 3” prize.',\n                )}\n              </Text>\n            </li>\n            <li>\n              <Text display=\"inlbackground: #7E41D6;\nbackground: -webkit-linear-gradient(top, #7E41D6, #59179E);\nbackground: -moz-linear-gradient(top, #7E41D6, #59179E);\nbackground: linear-gradient(to bottom, #7E41D6, #59179E);ine\" color=\"textSubtle\">\n                {t(\n                  'Ticket B: Even though the last 5 digits match, the first digit is wrong, so this ticket doesn’t win a prize.',\n                )}\n              </Text>\n            </li>\n          </BulletList> */}\n          <Text mt=\"16px\"  >\n            \n             Lottery cycle starts every Sunday at 7pm.\n            \n          </Text>\n          <Text mt=\"16px\" >\n          <span style={{color:\"red\"}}>2 Winners</span> The drawndown of winners will be every Sunday 7pm GMT+8\n            \n          </Text>\n          <Text mt=\"16px\" >\n           \n          <span style={{color:\"red\"}}>10,000 iBG Prize.</span> Each winner randomly picked via smart contract logic and will win 5,000 iBG each\n           \n          </Text>\n          <Text mt=\"16px\" >\n          The lottery is fully managed by a smart contract that allows anyone check to the address.\n          </Text>\n          <Text mt=\"16px\" >\n            {t(\n              '100% of subscription proceeds burned (no fees to the company nor the developer) '\n            )}\n          </Text>\n        </Flex>\n        {/* <Flex flex=\"1\" justifyContent=\"center\">\n          <MatchExampleCard />\n        </Flex> */}\n      </GappedFlex>\n\n      <Divider />\n\n      <Flex mb=\"40px\" alignItems=\"center\" flexDirection=\"column\">\n        <Heading mb=\"24px\" scale=\"xl\" color=\"red\">\n          {t('How it works')}\n        </Heading>\n        {/* <Text textAlign=\"center\">\n          {t(\n            'If the digits on your tickets match the winning numbers in the correct order, you win a portion of the prize pool.',\n          )}\n        </Text> */}\n        {/* <Text>{t('Simple!')}</Text> */}\n      </Flex>\n      <StepContainer>\n        {steps.map((step) => (\n          <StepCard key={step.label} step={step} />\n        ))}\n      </StepContainer>\n      \n      <Div>\n      <Heading mb=\"18px\" style={{marginTop:\"2rem\"}} scale=\"xl\" color=\"red\" >Standing together as united ecosystem</Heading>\n      <Text>All proceeeds are burned immediately upon purchase of tickets (No developer fees kept)</Text>\n      <Text>Prize Tokens from the redistribution of a part of the non native farms yield. (This will benefits our whole ecosystem by bringing more holders and </Text>\n        <Text>decrease the daily sell pressure of non native farmers</Text>\n      </Div>\n      {/* <Divider />\n      <GappedFlex flexDirection={['column', 'column', 'column', 'row']}>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Heading mb=\"24px\" scale=\"lg\" color=\"secondary\">\n            {t('Prize Funds')}\n          </Heading>\n          <Text color=\"textSubtle\">{t('The prizes for each lottery round come from three sources:')}</Text>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('Ticket Purchases')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t('100% of the IBG paid by people buying tickets that round goes back into the prize pools.')}\n              </Text>\n            </li>\n          </BulletList>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('Rollover Prizes')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'After every round, if nobody wins in one of the prize brackets, the unclaimed IBG for that bracket rolls over into the next round and are redistributed among the prize pools.',\n                )}\n              </Text>\n            </li>\n          </BulletList>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('IBG Injections')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'An average total of 35,000 IBG from the treasury is added to lottery rounds over the course of a week. This IBG is of course also included in rollovers! Read more in our guide to ',\n                )}\n                <InlineLink href=\"\">\n                  {t('IBG Tokenomics')}\n                </InlineLink>\n              </Text>\n            </li>\n          </BulletList>\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <PoolAllocations />\n        </Flex>\n      </GappedFlex>\n      <Divider />\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n        <Image width={340} height={240} src=\"/images/logoBig.png\" alt=\"tombola bunny\" mr=\"8px\" mb=\"16px\" />\n        <Flex maxWidth=\"300px\" flexDirection=\"column\">\n          <Heading mb=\"16px\" scale=\"md\">\n            {t('Still got questions?')}\n          </Heading>\n          <Text>\n            {t('Check our in-depth guide on')}{' '}\n            <InlineLink href=\"\">\n              {t('how to play the Zillionaire lottery!')}\n            </InlineLink>\n          </Text>\n        </Flex>\n      </Flex> */}\n    </Box>\n  )\n}\n\nexport default HowToPlay\n","import { useWeb3React } from '@web3-react/core'\nimport { useState } from 'react'\nimport { useAppDispatch } from 'state'\nimport { fetchAdditionalUserLotteries } from 'state/lottery'\nimport { MAX_USER_LOTTERIES_REQUEST_SIZE } from 'state/lottery/getUserLotteryData'\n\nconst useShowMoreUserRounds = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const [numUserRoundsRequested, setNumUserRoundsRequested] = useState(MAX_USER_LOTTERIES_REQUEST_SIZE)\n\n  const handleShowMoreUserRounds = () => {\n    dispatch(fetchAdditionalUserLotteries({ account, skip: numUserRoundsRequested }))\n    setNumUserRoundsRequested(numUserRoundsRequested + MAX_USER_LOTTERIES_REQUEST_SIZE)\n  }\n\n  return { numUserRoundsRequested, handleShowMoreUserRounds }\n}\n\nexport default useShowMoreUserRounds\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { LotteryStatus } from 'config/constants/types'\nimport PageSection from 'components/PageSection'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useFetchLottery, useLottery } from 'state/lottery/hooks'\nimport {\n  TITLE_BG,\n  GET_TICKETS_BG,\n  FINISHED_ROUNDS_BG,\n  FINISHED_ROUNDS_BG_DARK,\n  CHECK_PRIZES_BG,\n} from './pageSectionStyles'\nimport useGetNextLotteryEvent from './hooks/useGetNextLotteryEvent'\nimport useStatusTransitions from './hooks/useStatusTransitions'\nimport Hero from './components/Hero'\nimport NextDrawCard from './components/NextDrawCard'\nimport Countdown from './components/Countdown'\nimport HistoryTabMenu from './components/HistoryTabMenu'\nimport YourHistoryCard from './components/YourHistoryCard'\nimport AllHistoryCard from './components/AllHistoryCard'\nimport CheckPrizesSection from './components/CheckPrizesSection'\nimport HowToPlay from './components/HowToPlay'\nimport useShowMoreUserHistory from './hooks/useShowMoreUserRounds'\n\nconst LotteryPage = styled.div`\n  min-height: calc(100vh - 64px);\n`\n\nconst Lottery = () => {\n  useFetchLottery()\n  useStatusTransitions()\n  const { t } = useTranslation()\n  \n  const { isDark, theme } = useTheme()\n  const {\n    currentRound: { status, endTime },\n  } = useLottery()\n  const [historyTabMenuIndex, setHistoryTabMenuIndex] = useState(0)\n  const endTimeAsInt = parseInt(endTime, 10)\n  const { nextEventTime, postCountdownText, preCountdownText } = useGetNextLotteryEvent(endTimeAsInt, status)\n  const { numUserRoundsRequested, handleShowMoreUserRounds } = useShowMoreUserHistory()\n  const [previousRound, setPreviousRound] = useState([])\n\n  return (\n    <LotteryPage style={{ background: '#fff' }}>\n      {/* <PageSection style={{background:\"#000034\"}} background={TITLE_BG} index={1} hasCurvedDivider={false}>\n        <Hero />\n      </PageSection> */}\n      <PageSection\n        containerProps={{ style: { marginTop: '-30px' } }}\n        background={GET_TICKETS_BG}\n        concaveDivider\n        clipFill={{ light: '#9e10ea' }}\n        dividerPosition=\"top\"\n        index={2}\n        style={{ background: 'linear-gradient(to bottom, #7E41D6, #59179E)' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\" pt=\"24px\">\n          {/* {status === LotteryStatus.OPEN && (\n            <Heading scale=\"xl\" color=\"#fff\" mb=\"24px\" textAlign=\"center\">\n              {t('Get your tickets now!')}\n            </Heading>\n          )}\n          <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"48px\">\n            {nextEventTime && (postCountdownText || preCountdownText) ? (\n              <Countdown\n                nextEventTime={nextEventTime}\n                postCountdownText={postCountdownText}\n                preCountdownText={preCountdownText}\n              />\n            ) : (\n              <Skeleton height=\"41px\" width=\"250px\" />\n            )}\n          </Flex> */}\n          <Heading scale=\"xl\" color=\"#fff\" mb=\"24px\" textAlign=\"center\">\n            {t('Get your tickets now!')}\n          </Heading>\n\n          <NextDrawCard onPreviousRounds={(rounds)=>{\n            console.log(\"rounddpre\",rounds)\n            setPreviousRound(rounds)\n          }} />\n        </Flex>\n      </PageSection>\n      {/* <PageSection background={CHECK_PRIZES_BG} hasCurvedDivider={false} index={2} style={{background:\"#151515\"}}>\n        <CheckPrizesSection />\n      </PageSection> */}\n      <PageSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        background={isDark ? FINISHED_ROUNDS_BG_DARK : FINISHED_ROUNDS_BG}\n        hasCurvedDivider={false}\n        index={2}\n        style={{ background: 'linear-gradient(to bottom, #83a4d4, #b6fbff)' }}\n      >\n        <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n          <Heading color=\"#03025f\" mb=\"24px\" scale=\"xl\">\n            {t('Last 3 Finished Rounds')}\n          </Heading>\n          \n\n          <AllHistoryCard  rounds={previousRound}/>\n        </Flex>\n      </PageSection>\n      <PageSection\n        dividerPosition=\"top\"\n        dividerFill={{ light: theme.colors.background }}\n        clipFill={{ light: '#fff', dark: '#66578D' }}\n        index={2}\n      >\n        <HowToPlay />\n      </PageSection>\n    </LotteryPage>\n  )\n}\n\nexport default Lottery\n","export const TITLE_BG = 'linear-gradient(180deg, #7645D9 0%, #452A7A 100%)'\nexport const GET_TICKETS_BG = 'linear-gradient(180deg, #7645D9 0%, #5121B1 100%)'\nexport const CHECK_PRIZES_BG = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const FINISHED_ROUNDS_BG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const FINISHED_ROUNDS_BG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar warning = require('warning');\nvar CountUp$1 = require('countup.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);\nvar CountUp__default = /*#__PURE__*/_interopDefaultLegacy(CountUp$1);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp__default['default'](el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp = /*#__PURE__*/function (_Component) {\n  _inherits(CountUp, _Component);\n\n  var _super = _createSuper(CountUp);\n\n  function CountUp() {\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkProps\", function (updatedProps) {\n      var _this$props = _this.props,\n          start = _this$props.start,\n          suffix = _this$props.suffix,\n          prefix = _this$props.prefix,\n          redraw = _this$props.redraw,\n          duration = _this$props.duration,\n          separator = _this$props.separator,\n          decimals = _this$props.decimals,\n          decimal = _this$props.decimal,\n          className = _this$props.className;\n      var hasPropsChanged = duration !== updatedProps.duration || start !== updatedProps.start || suffix !== updatedProps.suffix || prefix !== updatedProps.prefix || separator !== updatedProps.separator || decimals !== updatedProps.decimals || decimal !== updatedProps.decimal || className !== updatedProps.className;\n      return hasPropsChanged || redraw;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning__default['default'](_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props2 = _this.props,\n          delay = _this$props2.delay,\n          onEnd = _this$props2.onEnd,\n          onStart = _this$props2.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React__default['default'].createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          delay = _this$props3.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var end = this.props.end;\n      return this.checkProps(nextProps) || end !== nextProps.end;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          preserveValue = _this$props4.preserveValue;\n\n      if (this.checkProps(prevProps)) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return /*#__PURE__*/React__default['default'].createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes__default['default'].string,\n  decimals: PropTypes__default['default'].number,\n  delay: PropTypes__default['default'].number,\n  easingFn: PropTypes__default['default'].func,\n  end: PropTypes__default['default'].number.isRequired,\n  formattingFn: PropTypes__default['default'].func,\n  onEnd: PropTypes__default['default'].func,\n  onStart: PropTypes__default['default'].func,\n  prefix: PropTypes__default['default'].string,\n  redraw: PropTypes__default['default'].bool,\n  separator: PropTypes__default['default'].string,\n  start: PropTypes__default['default'].number,\n  startOnMount: PropTypes__default['default'].bool,\n  suffix: PropTypes__default['default'].string,\n  style: PropTypes__default['default'].object,\n  useEasing: PropTypes__default['default'].bool,\n  preserveValue: PropTypes__default['default'].bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2(_objectSpread2({}, CountUp.defaultProps), props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n  var timerRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      timerRef.current = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timerRef.current);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return function () {\n      clearTimeout(timerRef.current);\n      reset();\n    };\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});"],"sourceRoot":""}